###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Mar/2018  13:33:04
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  .\mbed-os\events\mbed_shared_queues.cpp
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --c++ --no_rtti --no_exceptions --guard_calls
#        --no_static_destruction -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DMBED_BUILD_TIMESTAMP=1521462769.94 -DTARGET_CORTEX_M -DDEVICE_SPI=1
#        -DTARGET_LIKE_MBED -DARM_MATH_CM0 -DTARGET_RELEASE -D__CORTEX_M0
#        -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0 -DTOOLCHAIN_object
#        -DDEVICE_SERIAL=1 -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -DFEATURE_BLE=1 -f
#        .\BUILD\STEVAL_IDB007V1\IAR\.includes_dcedd7aa577106f9c79229685e6ddb41.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/FEATURE_BLE -I./mbed-os/features/FEATURE_BLE/ble
#        -I./mbed-os/features/FEATURE_BLE/ble/generic
#        -I./mbed-os/features/FEATURE_BLE/ble/pal
#        -I./mbed-os/features/FEATURE_BLE/ble/services
#        -I./mbed-os/features/FEATURE_BLE/source
#        -I./mbed-os/features/FEATURE_BLE/source/generic
#        -I./mbed-os/features/FEATURE_BLE/source/services
#        -I./mbed-os/features/FEATURE_BLE/targets
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN -I./mbed-os/features/mbedtls
#        -I./mbed-os/features/mbedtls/importer -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\IAR\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\events\mbed_shared_queues.d -l
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\events\mbed_shared_queues.s.txt -o
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\events\mbed_shared_queues.o
#        .\mbed-os\events\mbed_shared_queues.cpp
#    Locale       =  Italian_Italy.1252
#    List file    =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\events\mbed_shared_queues.s.txt
#    Object file  =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\events\mbed_shared_queues.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\events\mbed_shared_queues.cpp
      1          /* events
      2           * Copyright (c) 2017 ARM Limited
      3           *
      4           * Licensed under the Apache License, Version 2.0 (the "License");
      5           * you may not use this file except in compliance with the License.
      6           * You may obtain a copy of the License at
      7           *
      8           *     http://www.apache.org/licenses/LICENSE-2.0
      9           *
     10           * Unless required by applicable law or agreed to in writing, software
     11           * distributed under the License is distributed on an "AS IS" BASIS,
     12           * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     13           * See the License for the specific language governing permissions and
     14           * limitations under the License.
     15           */
     16          
     17          #include "events/mbed_shared_queues.h"

   \                                 In section .text, align 4
   \   __code __interwork __softfp mbed::Callback<void ()>::Callback(void (*)())
   \                     _ZN4mbed8CallbackIFvvEEC1EPS1_: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
   \   00000002   0x000A             MOVS     R2,R1
   \   00000004   0xD106             BNE      ??Callback_0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2300             MOVS     R3,#+0
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0xC01E             STM      R0!,{R1-R4}
   \   00000010   0x3810             SUBS     R0,R0,#+16
   \   00000012   0xE009             B        ??Callback_1
   \                     ??Callback_0: (+1)
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x2300             MOVS     R3,#+0
   \   00000018   0x2400             MOVS     R4,#+0
   \   0000001A   0x2500             MOVS     R5,#+0
   \   0000001C   0xC03C             STM      R0!,{R2-R5}
   \   0000001E   0x3810             SUBS     R0,R0,#+16
   \   00000020   0xD000             BEQ      ??Callback_2
   \   00000022   0x6001             STR      R1,[R0, #+0]
   \                     ??Callback_2: (+1)
   \   00000024   0x4901             LDR      R1,??Callback_3
   \   00000026   0x60C1             STR      R1,[R0, #+12]
   \                     ??Callback_1: (+1)
   \   00000028   0xBC30             POP      {R4,R5}
   \   0000002A   0x4770             BX       LR               ;; return
   \                     ??Callback_3:
   \   0000002C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateIPS1_EEvRKT_E3ops

   \                                 In section .text, align 4
   \   __code __interwork __softfp mbed::Callback<void ()>::Callback<>(events::EventQueue *, void (events::EventQueue::*)())
   \                     _ZN4mbed8CallbackIFvvEEC1IN6events10EventQueueES5_EEPT0_MT_FvvE: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEE14method_contextIN6events10EventQueueEMS5_FvvEEC1EPS5_S7_
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x2300             MOVS     R3,#+0
   \   00000014   0xC40F             STM      R4!,{R0-R3}
   \   00000016   0x3C10             SUBS     R4,R4,#+16
   \   00000018   0xD003             BEQ      ??Callback_4
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0xC80E             LDM      R0!,{R1-R3}
   \   0000001E   0xC40E             STM      R4!,{R1-R3}
   \   00000020   0x3C0C             SUBS     R4,R4,#+12
   \                     ??Callback_4: (+1)
   \   00000022   0x4802             LDR      R0,??Callback_5
   \   00000024   0x60E0             STR      R0,[R4, #+12]
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0xB004             ADD      SP,SP,#+16
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
   \                     ??Callback_5:
   \   0000002C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextIN6events10EventQueueEMS6_FvvEEEEEvRKT_E3ops

   \                                 In section .text, align 4
   \   __code __interwork __softfp mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8CallbackIFvvEEC1IvvEEPFvPT_EPT0_: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xC078             STM      R0!,{R3-R6}
   \   0000000C   0x3810             SUBS     R0,R0,#+16
   \   0000000E   0xD001             BEQ      ??Callback_6
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x6042             STR      R2,[R0, #+4]
   \                     ??Callback_6: (+1)
   \   00000014   0x4901             LDR      R1,??Callback_7
   \   00000016   0x60C1             STR      R1,[R0, #+12]
   \   00000018   0xBC70             POP      {R4-R6}
   \   0000001A   0x4770             BX       LR               ;; return
   \                     ??Callback_7:
   \   0000001C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(void (*const &)())::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateIPS1_EEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callIPS1_EEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveIPS1_EEvPvPKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorIPS1_EEvPv

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::function_context<void (*)(void *), void> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextIN6events10EventQueueEMS6_FvvEEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_14method_contextIN6events10EventQueueEMS6_FvvEEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_14method_contextIN6events10EventQueueEMS6_FvvEEEEEvPvPKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_14method_contextIN6events10EventQueueEMS6_FvvEEEEEvPv

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<void (*)()>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callIPS1_EEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4780             BLX      R0
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x6848             LDR      R0,[R1, #+4]
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x4788             BLX      R1
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_14method_contextIN6events10EventQueueEMS6_FvvEEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x684A             LDR      R2,[R1, #+4]
   \   00000006   0x6888             LDR      R0,[R1, #+8]
   \   00000008   0x1053             ASRS     R3,R2,#+1
   \   0000000A   0x18C0             ADDS     R0,R0,R3
   \   0000000C   0x07D2             LSLS     R2,R2,#+31
   \   0000000E   0xD401             BMI      ??function_call_0
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0xE002             B        ??function_call_1
   \                     ??function_call_0: (+1)
   \   00000014   0x6802             LDR      R2,[R0, #+0]
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x5851             LDR      R1,[R2, R1]
   \                     ??function_call_1: (+1)
   \   0000001A   0x4788             BLX      R1
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<void (*)()>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveIPS1_EEvPvPKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD001             BEQ      ??function_move_0
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x6001             STR      R1,[R0, #+0]
   \                     ??function_move_0: (+1)
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD001             BEQ      ??function_move_1
   \   00000004   0xC90C             LDM      R1!,{R2,R3}
   \   00000006   0xC00C             STM      R0!,{R2,R3}
   \                     ??function_move_1: (+1)
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_14method_contextIN6events10EventQueueEMS6_FvvEEEEEvPvPKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD100             BNE      ??function_move_2
   \   00000004   0x4770             BX       LR
   \                     ??function_move_2: (+1)
   \   00000006   0xB410             PUSH     {R4}
   \   00000008   0xC91C             LDM      R1!,{R2-R4}
   \   0000000A   0xC01C             STM      R0!,{R2-R4}
   \   0000000C   0xBC10             POP      {R4}
   \   0000000E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<void (*)()>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorIPS1_EEvPv: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_14method_contextIN6events10EventQueueEMS6_FvvEEEEEvPv: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>::method_context(events::EventQueue *, void (events::EventQueue::*)())
   \                     _ZN4mbed8CallbackIFvvEE14method_contextIN6events10EventQueueEMS5_FvvEEC1EPS5_S7_: (+1)
   \   00000000   0xC00C             STM      R0!,{R2,R3}
   \   00000002   0x3808             SUBS     R0,R0,#+8
   \   00000004   0x6081             STR      R1,[R0, #+8]
   \   00000006   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::callback<>(events::EventQueue *, void (events::EventQueue::*)())
   \                     _ZN4mbed8callbackIN6events10EventQueueES2_vEENS_8CallbackIFT1_vEEEPT0_MT_FS4_vE: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEEC1IN6events10EventQueueES5_EEPT0_MT_FvvE
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8callbackIvvvEENS_8CallbackIFT1_vEEEPFS2_PT_EPT0_: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEEC1IvvEEPFvPT_EPT0_
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void events::EventQueue::dispatch_forever()
   \                     _ZN6events10EventQueue16dispatch_foreverEv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x43C9             MVNS     R1,R1            ;; #-1
   \   00000006   0x.... 0x....      BL       _ZN6events10EventQueue8dispatchEi
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
     18          #include "mbed.h"
     19          
     20          using namespace events;
     21          
     22          namespace mbed {
     23          
     24          #ifdef MBED_CONF_RTOS_PRESENT
     25          /* Create an event queue, and start the thread that dispatches it. Static
     26           * variables mean this happens once the first time each template instantiation
     27           * is called. This is currently instantiated no more than twice.
     28           */
     29          template
     30          <osPriority Priority, size_t QueueSize, size_t StackSize>

   \                                 In section .text, align 4
   \   __interwork __softfp events::EventQueue *mbed::do_shared_event_queue_with_thread<osPriorityNormal, 256U, 1024U>()
   \                     _ZN4mbed33do_shared_event_queue_with_threadIL12osPriority_t24ELj256ELj1024EEEPN6events10EventQueueEv: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x2501             MOVS     R5,#+1
   \   00000006   0x4C31             LDR      R4,??do_shared_event_queue_with_thread_0
   \   00000008   0x6820             LDR      R0,[R4, #+0]
   \   0000000A   0x4028             ANDS     R0,R0,R5
   \   0000000C   0xD10F             BNE      ??do_shared_event_queue_with_thread_1
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       __cxa_guard_acquire
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD00A             BEQ      ??do_shared_event_queue_with_thread_1
     31          EventQueue *do_shared_event_queue_with_thread()
   \   00000018   0x2098             MOVS     R0,#+152
   \   0000001A   0x0040             LSLS     R0,R0,#+1        ;; #+304
   \   0000001C   0x1822             ADDS     R2,R4,R0
   \   0000001E   0x0229             LSLS     R1,R5,#+8
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x30CC             ADDS     R0,R0,#+204
   \   00000024   0x.... 0x....      BL       _ZN6events10EventQueueC1EjPh
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0x.... 0x....      BL       __cxa_guard_release
   \                     ??do_shared_event_queue_with_thread_1: (+1)
   \   0000002E   0x6860             LDR      R0,[R4, #+4]
   \   00000030   0x4005             ANDS     R5,R5,R0
   \   00000032   0xD123             BNE      ??do_shared_event_queue_with_thread_2
   \   00000034   0x1D20             ADDS     R0,R4,#+4
   \   00000036   0x.... 0x....      BL       __cxa_guard_acquire
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD01E             BEQ      ??do_shared_event_queue_with_thread_2
   \   0000003E   0x4824             LDR      R0,??do_shared_event_queue_with_thread_0+0x4
   \   00000040   0x60A0             STR      R0,[R4, #+8]
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x300C             ADDS     R0,R0,#+12
   \   00000048   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEEC1EPS1_
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x0020             MOVS     R0,R4
   \   00000050   0x3048             ADDS     R0,R0,#+72
   \   00000052   0x.... 0x....      BL       _ZN4rtos9SemaphoreC1Ei
   \   00000056   0x0020             MOVS     R0,R4
   \   00000058   0x305C             ADDS     R0,R0,#+92
   \   0000005A   0x.... 0x....      BL       _ZN4rtos5MutexC1Ev
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x9000             STR      R0,[SP, #+0]
   \   00000062   0x208C             MOVS     R0,#+140
   \   00000064   0x0080             LSLS     R0,R0,#+2        ;; #+560
   \   00000066   0x1823             ADDS     R3,R4,R0
   \   00000068   0x2280             MOVS     R2,#+128
   \   0000006A   0x00D2             LSLS     R2,R2,#+3        ;; #+1024
   \   0000006C   0x2118             MOVS     R1,#+24
   \   0000006E   0x0020             MOVS     R0,R4
   \   00000070   0x3008             ADDS     R0,R0,#+8
   \   00000072   0x.... 0x....      BL       _ZN4rtos6Thread11constructorE12osPriority_tjPhPKc
   \   00000076   0x1D20             ADDS     R0,R4,#+4
   \   00000078   0x.... 0x....      BL       __cxa_guard_release
   \                     ??do_shared_event_queue_with_thread_2: (+1)
   \   0000007C   0x0020             MOVS     R0,R4
   \   0000007E   0x3008             ADDS     R0,R0,#+8
   \   00000080   0x.... 0x....      BL       _ZN4rtos6Thread9get_stateEv
   \   00000084   0x2800             CMP      R0,#+0
   \   00000086   0xD001             BEQ      ??do_shared_event_queue_with_thread_3
   \   00000088   0x2810             CMP      R0,#+16
   \   0000008A   0xD11B             BNE      ??do_shared_event_queue_with_thread_4
   \                     ??do_shared_event_queue_with_thread_3: (+1)
   \   0000008C   0x4811             LDR      R0,??do_shared_event_queue_with_thread_0+0x8
   \   0000008E   0xC80C             LDM      R0!,{R2,R3}
   \   00000090   0x0021             MOVS     R1,R4
   \   00000092   0x31CC             ADDS     R1,R1,#+204
   \   00000094   0x4668             MOV      R0,SP
   \   00000096   0x.... 0x....      BL       _ZN4mbed8callbackIN6events10EventQueueES2_vEENS_8CallbackIFT1_vEEEPT0_MT_FS4_vE
   \   0000009A   0x4669             MOV      R1,SP
   \   0000009C   0x0020             MOVS     R0,R4
   \   0000009E   0x3008             ADDS     R0,R0,#+8
   \   000000A0   0x.... 0x....      BL       _ZN4rtos6Thread5startEN4mbed8CallbackIFvvEEE
   \   000000A4   0x0005             MOVS     R5,R0
   \   000000A6   0x9903             LDR      R1,[SP, #+12]
   \   000000A8   0x2900             CMP      R1,#+0
   \   000000AA   0xD002             BEQ      ??do_shared_event_queue_with_thread_5
   \   000000AC   0x4668             MOV      R0,SP
   \   000000AE   0x6889             LDR      R1,[R1, #+8]
   \   000000B0   0x4788             BLX      R1
   \                     ??do_shared_event_queue_with_thread_5: (+1)
   \   000000B2   0x2D00             CMP      R5,#+0
   \   000000B4   0xD006             BEQ      ??do_shared_event_queue_with_thread_4
   \   000000B6   0x222A             MOVS     R2,#+42
   \   000000B8   0x4907             LDR      R1,??do_shared_event_queue_with_thread_0+0xC
   \   000000BA   0x4808             LDR      R0,??do_shared_event_queue_with_thread_0+0x10
   \   000000BC   0x.... 0x....      BL       mbed_assert_internal
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0xE001             B        ??do_shared_event_queue_with_thread_6
   \                     ??do_shared_event_queue_with_thread_4: (+1)
   \   000000C4   0x0020             MOVS     R0,R4
   \   000000C6   0x30CC             ADDS     R0,R0,#+204
   \                     ??do_shared_event_queue_with_thread_6: (+1)
   \   000000C8   0xB005             ADD      SP,SP,#+20
   \   000000CA   0xBD30             POP      {R4,R5,PC}       ;; return
   \                     ??do_shared_event_queue_with_thread_0:
   \   000000CC   0x........         DC32     `mbed::do_shared_event_queue_with_thread<osPriorityNormal, 256U, 1024U>()::static guard for queue`
   \   000000D0   0x........         DC32     _ZTVN4rtos6ThreadE+0x8
   \   000000D4   0x........         DC32     ?_0
   \   000000D8   0x........         DC32     _ZZN4mbed33do_shared_event_queue_with_threadIL12osPriority_t24ELj256ELj1024EEEPN6events10EventQueueEvEs_0
   \   000000DC   0x........         DC32     _ZZN4mbed33do_shared_event_queue_with_threadIL12osPriority_t24ELj256ELj1024EEEPN6events10EventQueueEvEs

   \                                 In section .text, align 4
     32          {
   \   __interwork __softfp events::EventQueue *mbed::do_shared_event_queue_with_thread<osPriorityHigh, 256U, 1024U>()
   \                     _ZN4mbed33do_shared_event_queue_with_threadIL12osPriority_t40ELj256ELj1024EEEPN6events10EventQueueEv: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
   \   00000004   0x2501             MOVS     R5,#+1
   \   00000006   0x4C31             LDR      R4,??do_shared_event_queue_with_thread_7
   \   00000008   0x6820             LDR      R0,[R4, #+0]
   \   0000000A   0x4028             ANDS     R0,R0,R5
   \   0000000C   0xD10F             BNE      ??do_shared_event_queue_with_thread_8
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       __cxa_guard_acquire
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD00A             BEQ      ??do_shared_event_queue_with_thread_8
     33              static uint64_t queue_buffer[QueueSize / sizeof(uint64_t)];
     34              static EventQueue queue(sizeof queue_buffer, (unsigned char *) queue_buffer);
   \   00000018   0x2098             MOVS     R0,#+152
   \   0000001A   0x0040             LSLS     R0,R0,#+1        ;; #+304
   \   0000001C   0x1822             ADDS     R2,R4,R0
   \   0000001E   0x0229             LSLS     R1,R5,#+8
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x30CC             ADDS     R0,R0,#+204
   \   00000024   0x.... 0x....      BL       _ZN6events10EventQueueC1EjPh
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0x.... 0x....      BL       __cxa_guard_release
   \                     ??do_shared_event_queue_with_thread_8: (+1)
   \   0000002E   0x6860             LDR      R0,[R4, #+4]
   \   00000030   0x4005             ANDS     R5,R5,R0
   \   00000032   0xD123             BNE      ??do_shared_event_queue_with_thread_9
   \   00000034   0x1D20             ADDS     R0,R4,#+4
   \   00000036   0x.... 0x....      BL       __cxa_guard_acquire
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD01E             BEQ      ??do_shared_event_queue_with_thread_9
     35          
     36              static uint64_t stack[StackSize / sizeof(uint64_t)];
     37              static Thread thread(Priority, StackSize, (unsigned char *) stack);
   \   0000003E   0x4824             LDR      R0,??do_shared_event_queue_with_thread_7+0x4
   \   00000040   0x60A0             STR      R0,[R4, #+8]
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x300C             ADDS     R0,R0,#+12
   \   00000048   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEEC1EPS1_
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x0020             MOVS     R0,R4
   \   00000050   0x3048             ADDS     R0,R0,#+72
   \   00000052   0x.... 0x....      BL       _ZN4rtos9SemaphoreC1Ei
   \   00000056   0x0020             MOVS     R0,R4
   \   00000058   0x305C             ADDS     R0,R0,#+92
   \   0000005A   0x.... 0x....      BL       _ZN4rtos5MutexC1Ev
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x9000             STR      R0,[SP, #+0]
   \   00000062   0x208C             MOVS     R0,#+140
   \   00000064   0x0080             LSLS     R0,R0,#+2        ;; #+560
   \   00000066   0x1823             ADDS     R3,R4,R0
   \   00000068   0x2280             MOVS     R2,#+128
   \   0000006A   0x00D2             LSLS     R2,R2,#+3        ;; #+1024
   \   0000006C   0x2128             MOVS     R1,#+40
   \   0000006E   0x0020             MOVS     R0,R4
   \   00000070   0x3008             ADDS     R0,R0,#+8
   \   00000072   0x.... 0x....      BL       _ZN4rtos6Thread11constructorE12osPriority_tjPhPKc
   \   00000076   0x1D20             ADDS     R0,R4,#+4
   \   00000078   0x.... 0x....      BL       __cxa_guard_release
     38          
     39              Thread::State state = thread.get_state();
   \                     ??do_shared_event_queue_with_thread_9: (+1)
   \   0000007C   0x0020             MOVS     R0,R4
   \   0000007E   0x3008             ADDS     R0,R0,#+8
   \   00000080   0x.... 0x....      BL       _ZN4rtos6Thread9get_stateEv
     40              if (state == Thread::Inactive || state == Thread::Deleted) {
   \   00000084   0x2800             CMP      R0,#+0
   \   00000086   0xD001             BEQ      ??do_shared_event_queue_with_thread_10
   \   00000088   0x2810             CMP      R0,#+16
   \   0000008A   0xD11B             BNE      ??do_shared_event_queue_with_thread_11
     41                  osStatus status = thread.start(callback(&queue, &EventQueue::dispatch_forever));
   \                     ??do_shared_event_queue_with_thread_10: (+1)
   \   0000008C   0x4811             LDR      R0,??do_shared_event_queue_with_thread_7+0x8
   \   0000008E   0xC80C             LDM      R0!,{R2,R3}
   \   00000090   0x0021             MOVS     R1,R4
   \   00000092   0x31CC             ADDS     R1,R1,#+204
   \   00000094   0x4668             MOV      R0,SP
   \   00000096   0x.... 0x....      BL       _ZN4mbed8callbackIN6events10EventQueueES2_vEENS_8CallbackIFT1_vEEEPT0_MT_FS4_vE
   \   0000009A   0x4669             MOV      R1,SP
   \   0000009C   0x0020             MOVS     R0,R4
   \   0000009E   0x3008             ADDS     R0,R0,#+8
   \   000000A0   0x.... 0x....      BL       _ZN4rtos6Thread5startEN4mbed8CallbackIFvvEEE
   \   000000A4   0x0005             MOVS     R5,R0
   \   000000A6   0x9903             LDR      R1,[SP, #+12]
   \   000000A8   0x2900             CMP      R1,#+0
   \   000000AA   0xD002             BEQ      ??do_shared_event_queue_with_thread_12
   \   000000AC   0x4668             MOV      R0,SP
   \   000000AE   0x6889             LDR      R1,[R1, #+8]
   \   000000B0   0x4788             BLX      R1
     42                  MBED_ASSERT(status == osOK);
   \                     ??do_shared_event_queue_with_thread_12: (+1)
   \   000000B2   0x2D00             CMP      R5,#+0
   \   000000B4   0xD006             BEQ      ??do_shared_event_queue_with_thread_11
   \   000000B6   0x222A             MOVS     R2,#+42
   \   000000B8   0x4907             LDR      R1,??do_shared_event_queue_with_thread_7+0xC
   \   000000BA   0x4808             LDR      R0,??do_shared_event_queue_with_thread_7+0x10
   \   000000BC   0x.... 0x....      BL       mbed_assert_internal
     43                  if (status != osOK) {
     44                      return NULL;
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0xE001             B        ??do_shared_event_queue_with_thread_13
     45                  }
     46              }
     47          
     48              return &queue;
   \                     ??do_shared_event_queue_with_thread_11: (+1)
   \   000000C4   0x0020             MOVS     R0,R4
   \   000000C6   0x30CC             ADDS     R0,R0,#+204
   \                     ??do_shared_event_queue_with_thread_13: (+1)
   \   000000C8   0xB005             ADD      SP,SP,#+20
   \   000000CA   0xBD30             POP      {R4,R5,PC}       ;; return
   \                     ??do_shared_event_queue_with_thread_7:
   \   000000CC   0x........         DC32     `mbed::do_shared_event_queue_with_thread<osPriorityHigh, 256U, 1024U>()::static guard for queue`
   \   000000D0   0x........         DC32     _ZTVN4rtos6ThreadE+0x8
   \   000000D4   0x........         DC32     ?_0
   \   000000D8   0x........         DC32     _ZZN4mbed33do_shared_event_queue_with_threadIL12osPriority_t40ELj256ELj1024EEEPN6events10EventQueueEvEs_0
   \   000000DC   0x........         DC32     _ZZN4mbed33do_shared_event_queue_with_threadIL12osPriority_t40ELj256ELj1024EEEPN6events10EventQueueEvEs
     49          }

   \                                 In section .bss, align 8
   \   __absolute int mbed::do_shared_event_queue_with_thread<osPriorityNormal, 256U, 1024U>()::static guard for queue
   \                     `mbed::do_shared_event_queue_with_thread<osPriorityNormal, 256U, 1024U>()::static guard for queue`:
   \   00000000                      DS8 4
   \   00000004                      DS8 4
   \   00000008                      DS8 196
   \   000000CC                      DS8 96
   \   0000012C                      DS8 4
   \   00000130                      DS8 256
   \   00000230                      DS8 1024

   \                                 In section .bss, align 8
   \   __absolute int mbed::do_shared_event_queue_with_thread<osPriorityHigh, 256U, 1024U>()::static guard for queue
   \                     `mbed::do_shared_event_queue_with_thread<osPriorityHigh, 256U, 1024U>()::static guard for queue`:
   \   00000000                      DS8 4
   \   00000004                      DS8 4
   \   00000008                      DS8 196
   \   000000CC                      DS8 96
   \   0000012C                      DS8 4
   \   00000130                      DS8 256
   \   00000230                      DS8 1024
     50          #endif
     51          

   \                                 In section .text, align 2, keep-with-next
     52          EventQueue *mbed_event_queue()
     53          {
   \                     _ZN4mbed16mbed_event_queueEv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     54          #if MBED_CONF_EVENTS_SHARED_DISPATCH_FROM_APPLICATION || !defined MBED_CONF_RTOS_PRESENT
     55              /* Only create the EventQueue, but no dispatching thread */
     56              static unsigned char queue_buffer[MBED_CONF_EVENTS_SHARED_EVENTSIZE];
     57              static EventQueue queue(sizeof queue_buffer, queue_buffer);
     58          
     59              return &queue;
     60          #else
     61              return do_shared_event_queue_with_thread<osPriorityNormal, MBED_CONF_EVENTS_SHARED_EVENTSIZE, MBED_CONF_EVENTS_SHARED_STACKSIZE>();
   \   00000002   0x.... 0x....      BL       _ZN4mbed33do_shared_event_queue_with_threadIL12osPriority_t24ELj256ELj1024EEEPN6events10EventQueueEv
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
     62          #endif
     63          }
     64          
     65          #ifdef MBED_CONF_RTOS_PRESENT

   \                                 In section .text, align 2, keep-with-next
     66          EventQueue *mbed_highprio_event_queue()
     67          {
   \                     _ZN4mbed25mbed_highprio_event_queueEv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     68              return do_shared_event_queue_with_thread<osPriorityHigh, MBED_CONF_EVENTS_SHARED_HIGHPRIO_EVENTSIZE, MBED_CONF_EVENTS_SHARED_HIGHPRIO_STACKSIZE>();
   \   00000002   0x.... 0x....      BL       _ZN4mbed33do_shared_event_queue_with_threadIL12osPriority_t40ELj256ELj1024EEEPN6events10EventQueueEv
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
     69          }
     70          #endif
     71          
     72          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   events::EventQueue::dispatch_forever()
         8   -> events::EventQueue::dispatch(int)
       8   mbed::Callback<void ()>::Callback(void (*)())
      24   mbed::Callback<void ()>::Callback<>(events::EventQueue *, void (events::EventQueue::*)())
        24   -> mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>::method_context(events::EventQueue *, void (events::EventQueue::*)())
      12   mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
         8   -- Indirect call
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>>(void const *)
         8   -- Indirect call
       8   mbed::Callback<void ()>::function_call<void (*)()>(void const *)
         8   -- Indirect call
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>>(void *)
       0   mbed::Callback<void ()>::function_dtor<void (*)()>(void *)
       0   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
       4   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>>(void *, void const *)
       0   mbed::Callback<void ()>::function_move<void (*)()>(void *, void const *)
       0   mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>::method_context(events::EventQueue *, void (events::EventQueue::*)())
       8   mbed::callback<>(events::EventQueue *, void (events::EventQueue::*)())
         8   -> mbed::Callback<void ()>::Callback<>(events::EventQueue *, void (events::EventQueue::*)())
       8   mbed::callback<>(void (*)(void *), void *)
         8   -> mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
      32   mbed::do_shared_event_queue_with_thread<osPriorityHigh, 256U, 1024U>()
        32   -- Indirect call
        32   -> __cxa_guard_acquire
        32   -> __cxa_guard_release
        32   -> events::EventQueue::EventQueue(unsigned int, unsigned char *)
        32   -> mbed::Callback<void ()>::Callback(void (*)())
        32   -> mbed::callback<>(events::EventQueue *, void (events::EventQueue::*)())
        32   -> mbed_assert_internal
        32   -> rtos::Mutex::Mutex()
        32   -> rtos::Semaphore::Semaphore(signed int)
        32   -> rtos::Thread::constructor(osPriority_t, unsigned int, unsigned char *, char const *)
        32   -> rtos::Thread::get_state()
        32   -> rtos::Thread::start(mbed::Callback<void ()>)
      32   mbed::do_shared_event_queue_with_thread<osPriorityNormal, 256U, 1024U>()
        32   -- Indirect call
        32   -> __cxa_guard_acquire
        32   -> __cxa_guard_release
        32   -> events::EventQueue::EventQueue(unsigned int, unsigned char *)
        32   -> mbed::Callback<void ()>::Callback(void (*)())
        32   -> mbed::callback<>(events::EventQueue *, void (events::EventQueue::*)())
        32   -> mbed_assert_internal
        32   -> rtos::Mutex::Mutex()
        32   -> rtos::Semaphore::Semaphore(signed int)
        32   -> rtos::Thread::constructor(osPriority_t, unsigned int, unsigned char *, char const *)
        32   -> rtos::Thread::get_state()
        32   -> rtos::Thread::start(mbed::Callback<void ()>)
       8   mbed::mbed_event_queue()
         8   -> mbed::do_shared_event_queue_with_thread<osPriorityNormal, 256U, 1024U>()
       8   mbed::mbed_highprio_event_queue()
         8   -> mbed::do_shared_event_queue_with_thread<osPriorityHigh, 256U, 1024U>()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  events::EventQueue::dispatch_forever()
      48  mbed::Callback<void ()>::Callback(void (*)())
      48  mbed::Callback<void ()>::Callback<>(events::EventQueue *, void (events::EventQueue::*)())
      32  mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
      12  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
      30  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>>(void const *)
       8  mbed::Callback<void ()>::function_call<void (*)()>(void const *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>>(void *)
       2  mbed::Callback<void ()>::function_dtor<void (*)()>(void *)
      10  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      16  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>>(void *, void const *)
      10  mbed::Callback<void ()>::function_move<void (*)()>(void *, void const *)
       8  mbed::Callback<void ()>::method_context<events::EventQueue, void (events::EventQueue::*)()>::method_context(events::EventQueue *, void (events::EventQueue::*)())
       8  mbed::callback<>(events::EventQueue *, void (events::EventQueue::*)())
       8  mbed::callback<>(void (*)(void *), void *)
     224  mbed::do_shared_event_queue_with_thread<osPriorityHigh, 256U, 1024U>()
     224  mbed::do_shared_event_queue_with_thread<osPriorityNormal, 256U, 1024U>()
       8  mbed::mbed_event_queue()
       8  mbed::mbed_highprio_event_queue()
      12  ops
      12  ops
      12  ops
    1584  static guard for queue
          static guard for thread
          thread
          queue
          queue_buffer
          stack
    1584  static guard for queue
          static guard for thread
          thread
          queue
          queue_buffer
          stack
     412  -- Other

 
 3 168 bytes in section .bss
   448 bytes in section .rodata
   720 bytes in section .text
 
    16 bytes of CODE  memory (+ 704 bytes shared)
     8 bytes of CONST memory (+ 440 bytes shared)
 3 168 bytes of DATA  memory

Errors: none
Warnings: none
