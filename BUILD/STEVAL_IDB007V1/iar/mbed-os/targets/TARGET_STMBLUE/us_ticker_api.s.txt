###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Mar/2018  13:34:01
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  .\mbed-os\targets\TARGET_STMBLUE\us_ticker_api.c
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --vla -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DMBED_BUILD_TIMESTAMP=1521462769.94 -DTARGET_CORTEX_M -DDEVICE_SPI=1
#        -DTARGET_LIKE_MBED -DARM_MATH_CM0 -DTARGET_RELEASE -D__CORTEX_M0
#        -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0 -DTOOLCHAIN_object
#        -DDEVICE_SERIAL=1 -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -DFEATURE_BLE=1 -f
#        .\BUILD\STEVAL_IDB007V1\IAR\.includes_dcedd7aa577106f9c79229685e6ddb41.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/FEATURE_BLE -I./mbed-os/features/FEATURE_BLE/ble
#        -I./mbed-os/features/FEATURE_BLE/ble/generic
#        -I./mbed-os/features/FEATURE_BLE/ble/pal
#        -I./mbed-os/features/FEATURE_BLE/ble/services
#        -I./mbed-os/features/FEATURE_BLE/source
#        -I./mbed-os/features/FEATURE_BLE/source/generic
#        -I./mbed-os/features/FEATURE_BLE/source/services
#        -I./mbed-os/features/FEATURE_BLE/targets
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN -I./mbed-os/features/mbedtls
#        -I./mbed-os/features/mbedtls/importer -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\IAR\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\targets\TARGET_STMBLUE\us_ticker_api.d
#        -l
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\targets\TARGET_STMBLUE\us_ticker_api.s.txt
#        -o
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\targets\TARGET_STMBLUE\us_ticker_api.o
#        .\mbed-os\targets\TARGET_STMBLUE\us_ticker_api.c
#    Locale       =  Italian_Italy.1252
#    List file    =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\targets\TARGET_STMBLUE\us_ticker_api.s.txt
#    Object file  =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\targets\TARGET_STMBLUE\us_ticker_api.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\targets\TARGET_STMBLUE\us_ticker_api.c
      1          /* mbed Microcontroller Library
      2           */
      3          #include <stddef.h>
      4          #include "us_ticker_api.h"

  typedef uint8_t BOOL;  //already defined in "hal_type.h"
                  ^
"C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\targets\TARGET_STMBLUE\TARGET_BLUENRG1\TARGET_STEVAL_IDB007V1\device\system_BlueNRG1.h",240  Warning[Pe301]: typedef name has already been declared (with same type)
      5          #include "PeripheralNames.h"
      6          #include "hal_tick.h"
      7          
      8          #include "BlueNRG1_sysCtrl.h"
      9          #include "BlueNRG1_mft.h"
     10          #include "bluenrg_x_device.h"
     11          
     12          //#include "serial_mylib.h"
     13          
     14          

   \                                 In section .bss, align 4
     15          uint32_t carry=0, b=0, c=0;
   \                     carry:
   \   00000000                      DS8 4
   \                     `b`:
   \   00000004                      DS8 4

   \                                 In section .bss, align 4
   \                     c:
   \   00000000                      DS8 4
     16          

   \                                 In section .text, align 2, keep-with-next
     17          void MFT1B_Handler(void){
   \                     MFT1B_Handler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     18              if ( MFT_StatusIT(MFT1,MFT_IT_TND) != RESET ){
   \   00000002   0x....             LDR      R4,??DataTable4  ;; 0x40d00000
   \   00000004   0x2108             MOVS     R1,#+8
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       MFT_StatusIT
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD009             BEQ      ??MFT1B_Handler_0
     19              	carry = carry + 0x10000;
   \   00000010   0x....             LDR      R0,??DataTable4_1
   \   00000012   0x6801             LDR      R1,[R0, #+0]
   \   00000014   0x2280             MOVS     R2,#+128
   \   00000016   0x0252             LSLS     R2,R2,#+9        ;; #+65536
   \   00000018   0x1889             ADDS     R1,R1,R2
   \   0000001A   0x6001             STR      R1,[R0, #+0]
     20                  // Clear MFT1 pending interrupt A
     21                  MFT_ClearIT(MFT1, MFT_IT_TND);
   \   0000001C   0x2108             MOVS     R1,#+8
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x.... 0x....      BL       MFT_ClearIT
     22          	}
     23          }
   \                     ??MFT1B_Handler_0: (+1)
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
     24          
     25          

   \                                 In section .text, align 2, keep-with-next
     26          void us_ticker_init(void){
   \                     us_ticker_init: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
     27          	NVIC_InitType NVIC_InitStructure;
     28          	MFT_InitType timer_init;
     29          
     30          	carry = 0;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x....             LDR      R0,??DataTable4_1
   \   00000008   0x6004             STR      R4,[R0, #+0]
     31          
     32          	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_MTFX1 | CLOCK_PERIPH_MTFX2, ENABLE);
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x20C0             MOVS     R0,#+192
   \   0000000E   0x0140             LSLS     R0,R0,#+5        ;; #+6144
   \   00000010   0x.... 0x....      BL       SysCtrl_PeripheralClockCmd
     33          	MFT_StructInit(&timer_init);
   \   00000014   0xA801             ADD      R0,SP,#+4
   \   00000016   0x.... 0x....      BL       MFT_StructInit
     34          
     35          	timer_init.MFT_Mode = MFT_MODE_3;
   \   0000001A   0xA801             ADD      R0,SP,#+4
   \   0000001C   0x2102             MOVS     R1,#+2
   \   0000001E   0x7001             STRB     R1,[R0, #+0]
     36          	timer_init.MFT_Prescaler = 15;
   \   00000020   0x210F             MOVS     R1,#+15
   \   00000022   0x70C1             STRB     R1,[R0, #+3]
     37          
     38          	/* MFT1 configuration */
     39          	timer_init.MFT_Clock1 = MFT_NO_CLK;
   \   00000024   0x7044             STRB     R4,[R0, #+1]
     40          	timer_init.MFT_Clock2 = MFT_PRESCALED_CLK;
   \   00000026   0x2401             MOVS     R4,#+1
   \   00000028   0x7084             STRB     R4,[R0, #+2]
     41          	timer_init.MFT_CRB = 0xFFFF;
   \   0000002A   0x....             LDR      R5,??DataTable4_2  ;; 0xffff
   \   0000002C   0x80C5             STRH     R5,[R0, #+6]
     42          	MFT_Init(MFT1, &timer_init);
   \   0000002E   0x....             LDR      R6,??DataTable4  ;; 0x40d00000
   \   00000030   0xA901             ADD      R1,SP,#+4
   \   00000032   0x0030             MOVS     R0,R6
   \   00000034   0x.... 0x....      BL       MFT_Init
     43          
     44          	/* Set counter for timer2 */
     45          	MFT_SetCounter2(MFT1, 0xFFFF);
   \   00000038   0x0029             MOVS     R1,R5
   \   0000003A   0x0030             MOVS     R0,R6
   \   0000003C   0x.... 0x....      BL       MFT_SetCounter2
     46          
     47          	/* Enable MFT1B Interrupt */
     48          	NVIC_InitStructure.NVIC_IRQChannel = MFT1B_IRQn;
   \   00000040   0x4668             MOV      R0,SP
   \   00000042   0x2112             MOVS     R1,#+18
   \   00000044   0x7001             STRB     R1,[R0, #+0]
     49          	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = HIGH_PRIORITY;
   \   00000046   0x7044             STRB     R4,[R0, #+1]
     50          	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   \   00000048   0x7084             STRB     R4,[R0, #+2]
     51          	NVIC_Init(&NVIC_InitStructure);
   \   0000004A   0x.... 0x....      BL       NVIC_Init
     52          
     53          	/* Enable the MFT1 interrupt */
     54          	MFT_EnableIT(MFT1, MFT_IT_TND, ENABLE);
   \   0000004E   0x2201             MOVS     R2,#+1
   \   00000050   0x2108             MOVS     R1,#+8
   \   00000052   0x0030             MOVS     R0,R6
   \   00000054   0x.... 0x....      BL       MFT_EnableIT
     55          }
   \   00000058   0xB004             ADD      SP,SP,#+16
   \   0000005A   0xBD70             POP      {R4-R6,PC}       ;; return
     56          
     57          

   \                                 In section .text, align 2, keep-with-next
     58          uint32_t us_ticker_read(){
   \                     us_ticker_read: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     59          	b = MFT_GetCounter2(MFT1);
   \   00000002   0x....             LDR      R4,??DataTable4_1
   \   00000004   0x....             LDR      R0,??DataTable4  ;; 0x40d00000
   \   00000006   0x.... 0x....      BL       MFT_GetCounter2
   \   0000000A   0x6060             STR      R0,[R4, #+4]
     60          	return (carry + (0x0000FFFF-b));
   \   0000000C   0x6820             LDR      R0,[R4, #+0]
   \   0000000E   0x....             LDR      R1,??DataTable4_2  ;; 0xffff
   \   00000010   0x1840             ADDS     R0,R0,R1
   \   00000012   0x6861             LDR      R1,[R4, #+4]
   \   00000014   0x1A40             SUBS     R0,R0,R1
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
     61          }
     62          

   \                                 In section .text, align 2, keep-with-next
     63          void us_ticker_set_interrupt(timestamp_t timestamp){
   \                     us_ticker_set_interrupt: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     64          	/* Enable the MFT1 */
     65          	MFT_Cmd(MFT1, ENABLE);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x....             LDR      R0,??DataTable4  ;; 0x40d00000
   \   00000006   0x.... 0x....      BL       MFT_Cmd
     66          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
     67          
     68          /* NOTE: must be called with interrupts disabled! */

   \                                 In section .text, align 2, keep-with-next
     69          void us_ticker_disable_interrupt(void){
   \                     us_ticker_disable_interrupt: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     70          	/* Disable the MFT1 */
     71          	MFT_Cmd(MFT1, DISABLE);
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x....             LDR      R0,??DataTable4  ;; 0x40d00000
   \   00000006   0x.... 0x....      BL       MFT_Cmd
     72          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
     73          
     74          /* NOTE: must be called with interrupts disabled! */

   \                                 In section .text, align 2, keep-with-next
     75          void us_ticker_clear_interrupt(void){
     76          }
   \                     us_ticker_clear_interrupt: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     77          
     78          /* NOTE: must be called with interrupts disabled! */

   \                                 In section .text, align 2, keep-with-next
     79          void us_ticker_fire_interrupt(void){
     80          }
   \                     us_ticker_fire_interrupt: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x40D00000         DC32     0x40d00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     carry

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x0000FFFF         DC32     0xffff
     81          
     82          
     83          
     84          #ifdef fff
     85          uint32_t a;
     86          void us_ticker_init(void){
     87          }
     88          
     89          uint32_t us_ticker_read(){
     90          	return a;
     91          }
     92          
     93          void us_ticker_set_interrupt(timestamp_t timestamp){
     94          }
     95          
     96          void us_ticker_disable_interrupt(void){
     97          }
     98          
     99          void us_ticker_clear_interrupt(void){
    100          }
    101          
    102          void us_ticker_fire_interrupt(void){
    103          }
    104          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   MFT1B_Handler
         8   -> MFT_ClearIT
         8   -> MFT_StatusIT
       0   us_ticker_clear_interrupt
       8   us_ticker_disable_interrupt
         8   -> MFT_Cmd
       0   us_ticker_fire_interrupt
      32   us_ticker_init
        32   -> MFT_EnableIT
        32   -> MFT_Init
        32   -> MFT_SetCounter2
        32   -> MFT_StructInit
        32   -> NVIC_Init
        32   -> SysCtrl_PeripheralClockCmd
       8   us_ticker_read
         8   -> MFT_GetCounter2
       8   us_ticker_set_interrupt
         8   -> MFT_Cmd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
      38  MFT1B_Handler
       4  c
       8  carry
          b
       2  us_ticker_clear_interrupt
      12  us_ticker_disable_interrupt
       2  us_ticker_fire_interrupt
      92  us_ticker_init
      24  us_ticker_read
      12  us_ticker_set_interrupt

 
  12 bytes in section .bss
 194 bytes in section .text
 
 194 bytes of CODE memory
  12 bytes of DATA memory

Errors: none
Warnings: 1
