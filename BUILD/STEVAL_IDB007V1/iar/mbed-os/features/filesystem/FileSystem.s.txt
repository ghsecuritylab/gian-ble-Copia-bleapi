###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Mar/2018  13:33:12
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  .\mbed-os\features\filesystem\FileSystem.cpp
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --c++ --no_rtti --no_exceptions --guard_calls
#        --no_static_destruction -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DMBED_BUILD_TIMESTAMP=1521462769.94 -DTARGET_CORTEX_M -DDEVICE_SPI=1
#        -DTARGET_LIKE_MBED -DARM_MATH_CM0 -DTARGET_RELEASE -D__CORTEX_M0
#        -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0 -DTOOLCHAIN_object
#        -DDEVICE_SERIAL=1 -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -DFEATURE_BLE=1 -f
#        .\BUILD\STEVAL_IDB007V1\IAR\.includes_dcedd7aa577106f9c79229685e6ddb41.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/FEATURE_BLE -I./mbed-os/features/FEATURE_BLE/ble
#        -I./mbed-os/features/FEATURE_BLE/ble/generic
#        -I./mbed-os/features/FEATURE_BLE/ble/pal
#        -I./mbed-os/features/FEATURE_BLE/ble/services
#        -I./mbed-os/features/FEATURE_BLE/source
#        -I./mbed-os/features/FEATURE_BLE/source/generic
#        -I./mbed-os/features/FEATURE_BLE/source/services
#        -I./mbed-os/features/FEATURE_BLE/targets
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN -I./mbed-os/features/mbedtls
#        -I./mbed-os/features/mbedtls/importer -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\IAR\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\FileSystem.d
#        -l
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\FileSystem.s.txt
#        -o
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\FileSystem.o
#        .\mbed-os\features\filesystem\FileSystem.cpp
#    Locale       =  Italian_Italy.1252
#    List file    =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\FileSystem.s.txt
#    Object file  =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\FileSystem.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\features\filesystem\FileSystem.cpp
      1          /* mbed Microcontroller Library
      2           * Copyright (c) 2006-2013 ARM Limited
      3           *
      4           * Licensed under the Apache License, Version 2.0 (the "License");
      5           * you may not use this file except in compliance with the License.
      6           * You may obtain a copy of the License at
      7           *
      8           *     http://www.apache.org/licenses/LICENSE-2.0
      9           *
     10           * Unless required by applicable law or agreed to in writing, software
     11           * distributed under the License is distributed on an "AS IS" BASIS,
     12           * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     13           * See the License for the specific language governing permissions and
     14           * limitations under the License.
     15           */
     16          
     17          #include "mbed.h"

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::function_context<void (*)(void *), void> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x6848             LDR      R0,[R1, #+4]
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x4788             BLX      R1
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD001             BEQ      ??function_move_0
   \   00000004   0xC90C             LDM      R1!,{R2,R3}
   \   00000006   0xC00C             STM      R0!,{R2,R3}
   \                     ??function_move_0: (+1)
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4
   \   __interwork __softfp void mbed::callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8callbackIvvvEENS_8CallbackIFT1_vEEEPFS2_PT_EPT0_: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xC078             STM      R0!,{R3-R6}
   \   0000000C   0x3810             SUBS     R0,R0,#+16
   \   0000000E   0xD001             BEQ      ??callback_0
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x6042             STR      R2,[R0, #+4]
   \                     ??callback_0: (+1)
   \   00000014   0x4901             LDR      R1,??callback_1
   \   00000016   0x60C1             STR      R1,[R0, #+12]
   \   00000018   0xBC70             POP      {R4-R6}
   \   0000001A   0x4770             BX       LR               ;; return
   \                     ??callback_1:
   \   0000001C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops

   \                                 In section .text, align 2
   \   __interwork __softfp off_t mbed::FileHandle::lseek(off_t, int)
   \                     _ZN4mbed10FileHandle5lseekEli: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x6803             LDR      R3,[R0, #+0]
   \   00000004   0x691B             LDR      R3,[R3, #+16]
   \   00000006   0x4798             BLX      R3
   \   00000008   0xBD02             POP      {R1,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp int mbed::FileHandle::fsync()
   \                     _ZN4mbed10FileHandle5fsyncEv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x6989             LDR      R1,[R1, #+24]
   \   00000006   0x4788             BLX      R1
   \   00000008   0xBD02             POP      {R1,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp off_t mbed::FileHandle::flen()
   \                     _ZN4mbed10FileHandle4flenEv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x6A89             LDR      R1,[R1, #+40]
   \   00000006   0x4788             BLX      R1
   \   00000008   0xBD02             POP      {R1,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp int mbed::FileHandle::set_blocking(bool)
   \                     _ZN4mbed10FileHandle12set_blockingEb: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000004   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp short mbed::FileHandle::poll(short) const
   \                     _ZNK4mbed10FileHandle4pollEs: (+1)
   \   00000000   0x2011             MOVS     R0,#+17
   \   00000002   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::FileHandle::sigio(mbed::Callback<void ()>)
   \                     _ZN4mbed10FileHandle5sigioENS_8CallbackIFvvEEE: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp int mbed::DirHandle::closedir()
   \                     _ZN4mbed9DirHandle8closedirEv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x68C9             LDR      R1,[R1, #+12]
   \   00000006   0x4788             BLX      R1
   \   00000008   0xBD02             POP      {R1,PC}          ;; return

   \                                 In section .text, align 4
   \   __interwork __softfp dirent *mbed::DirHandle::readdir()
   \                     _ZN4mbed9DirHandle7readdirEv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4C05             LDR      R4,??readdir_0
   \   00000004   0x0021             MOVS     R1,R4
   \   00000006   0x6802             LDR      R2,[R0, #+0]
   \   00000008   0x6892             LDR      R2,[R2, #+8]
   \   0000000A   0x4790             BLX      R2
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xDA00             BGE      ??readdir_1
   \   00000010   0x2400             MOVS     R4,#+0
   \                     ??readdir_1: (+1)
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
   \   00000016   0xBF00             Nop      
   \                     ??readdir_0:
   \   00000018   0x........         DC32     _ZZN4mbed9DirHandle7readdirEvE3ent

   \                                 In section .bss, align 4
   \   __absolute dirent mbed::DirHandle::readdir()::ent
   \                     _ZZN4mbed9DirHandle7readdirEvE3ent:
   \   00000000                      DS8 260

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::DirHandle::rewinddir()
   \                     _ZN4mbed9DirHandle9rewinddirEv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x6989             LDR      R1,[R1, #+24]
   \   00000006   0x4788             BLX      R1
   \   00000008   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp off_t mbed::DirHandle::telldir()
   \                     _ZN4mbed9DirHandle7telldirEv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x6801             LDR      R1,[R0, #+0]
   \   00000004   0x6949             LDR      R1,[R1, #+20]
   \   00000006   0x4788             BLX      R1
   \   00000008   0xBD02             POP      {R1,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::DirHandle::seekdir(off_t)
   \                     _ZN4mbed9DirHandle7seekdirEl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x6802             LDR      R2,[R0, #+0]
   \   00000004   0x6912             LDR      R2,[R2, #+16]
   \   00000006   0x4790             BLX      R2
   \   00000008   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::FileSystemLike::~FileSystemLike()
   \                     _ZN4mbed14FileSystemLikeD1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x1D20             ADDS     R0,R4,#+4
   \   00000006   0x.... 0x....      BL       _ZN4mbed8FileBaseD2Ev
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::FileSystemLike::deleter ~FileSystemLike()
   \                     _ZN4mbed14FileSystemLikeD0Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x1D20             ADDS     R0,R4,#+4
   \   00000006   0x.... 0x....      BL       _ZN4mbed8FileBaseD2Ev
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       _ZdlPv
   \   00000010   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::FileSystem::~FileSystem()
   \                     _ZN4mbed10FileSystemD1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x1D20             ADDS     R0,R4,#+4
   \   00000006   0x.... 0x....      BL       _ZN4mbed8FileBaseD2Ev
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::FileSystem::deleter ~FileSystem()
   \                     _ZN4mbed10FileSystemD0Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x1D20             ADDS     R0,R4,#+4
   \   00000006   0x.... 0x....      BL       _ZN4mbed8FileBaseD2Ev
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0x.... 0x....      BL       _ZdlPv
   \   00000010   0xBD10             POP      {R4,PC}          ;; return
     18          #include "filesystem/Dir.h"
     19          #include "filesystem/File.h"
     20          #include "filesystem/FileSystem.h"
     21          #include <errno.h>
     22          
     23          

   \                                 In section .text, align 2, keep-with-next
     24          FileSystem::FileSystem(const char *name)
   \                     _ZN4mbed10FileSystemC1EPKc: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002                      REQUIRE ?Subroutine0
   \   00000002                      ;; // Fall through to label ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x0004             MOVS     R4,R0
     25              : FileSystemLike(name)
     26          {
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0x1D20             ADDS     R0,R4,#+4
   \   00000006   0x.... 0x....      BL       _ZN4mbed8FileBaseC2EPKcNS_8PathTypeE
   \   0000000A   0x....             LDR      R0,??DataTable2
   \   0000000C   0x0001             MOVS     R1,R0
   \   0000000E   0x3108             ADDS     R1,R1,#+8
   \   00000010   0x6021             STR      R1,[R4, #+0]
   \   00000012   0x3030             ADDS     R0,R0,#+48
   \   00000014   0x6060             STR      R0,[R4, #+4]
   \   00000016   0x....             LDR      R0,??DataTable2_1
   \   00000018   0x0001             MOVS     R1,R0
   \   0000001A   0x3108             ADDS     R1,R1,#+8
   \   0000001C   0x6021             STR      R1,[R4, #+0]
   \   0000001E   0x3080             ADDS     R0,R0,#+128
   \   00000020   0x6060             STR      R0,[R4, #+4]
     27          }
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
     28          

   \                                 In section .text, align 2, keep-with-next
     29          int FileSystem::reformat(BlockDevice *bd)
     30          {
     31              return -ENOSYS;
   \                     _ZN4mbed10FileSystem8reformatEP11BlockDevice: (+1)
   \   00000000   0x2025             MOVS     R0,#+37
   \   00000002   0x43C0             MVNS     R0,R0            ;; #-38
   \   00000004   0x4770             BX       LR               ;; return
     32          }
     33          

   \                                 In section .text, align 2, keep-with-next
     34          int FileSystem::remove(const char *path)
     35          {
     36              return -ENOSYS;
   \                     _ZN4mbed10FileSystem6removeEPKc: (+1)
   \   00000000   0x2025             MOVS     R0,#+37
   \   00000002   0x43C0             MVNS     R0,R0            ;; #-38
   \   00000004   0x4770             BX       LR               ;; return
     37          }
     38          

   \                                 In section .text, align 2, keep-with-next
     39          int FileSystem::rename(const char *path, const char *newpath)
     40          {
     41              return -ENOSYS;
   \                     _ZN4mbed10FileSystem6renameEPKcS2_: (+1)
   \   00000000   0x2025             MOVS     R0,#+37
   \   00000002   0x43C0             MVNS     R0,R0            ;; #-38
   \   00000004   0x4770             BX       LR               ;; return
     42          }
     43          

   \                                 In section .text, align 2, keep-with-next
     44          int FileSystem::stat(const char *path, struct stat *st)
     45          {
     46              return -ENOSYS;
   \                     _ZN4mbed10FileSystem4statEPKcP4stat: (+1)
   \   00000000   0x2025             MOVS     R0,#+37
   \   00000002   0x43C0             MVNS     R0,R0            ;; #-38
   \   00000004   0x4770             BX       LR               ;; return
     47          }
     48          

   \                                 In section .text, align 2, keep-with-next
     49          int FileSystem::mkdir(const char *path, mode_t mode)
     50          {
     51              return -ENOSYS;
   \                     _ZN4mbed10FileSystem5mkdirEPKcj: (+1)
   \   00000000   0x2025             MOVS     R0,#+37
   \   00000002   0x43C0             MVNS     R0,R0            ;; #-38
   \   00000004   0x4770             BX       LR               ;; return
     52          }
     53          

   \                                 In section .text, align 2, keep-with-next
     54          int FileSystem::file_sync(fs_file_t file)
     55          {
     56              return 0;
   \                     _ZN4mbed10FileSystem9file_syncEPv: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
     57          }
     58          

   \                                 In section .text, align 2, keep-with-next
     59          int FileSystem::file_isatty(fs_file_t file)
     60          {
     61              return false;
   \                     _ZN4mbed10FileSystem11file_isattyEPv: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
     62          }
     63          

   \                                 In section .text, align 2, keep-with-next
     64          off_t FileSystem::file_tell(fs_file_t file)
     65          {
   \                     _ZN4mbed10FileSystem9file_tellEPv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     66              return file_seek(file, 0, SEEK_CUR);
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x....             B.N      ?Subroutine1
     67          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x2200             MOVS     R2,#+0
   \   00000002   0x6804             LDR      R4,[R0, #+0]
   \   00000004   0x6C64             LDR      R4,[R4, #+68]
   \   00000006   0x47A0             BLX      R4
   \   00000008   0xBD10             POP      {R4,PC}          ;; return
     68          

   \                                 In section .text, align 2, keep-with-next
     69          void FileSystem::file_rewind(fs_file_t file)
     70          {
   \                     _ZN4mbed10FileSystem11file_rewindEPv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     71              file_seek(file, 0, SEEK_SET);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004                      REQUIRE ?Subroutine1
   \   00000004                      ;; // Fall through to label ?Subroutine1
     72          }
     73          

   \                                 In section .text, align 2, keep-with-next
     74          off_t FileSystem::file_size(fs_file_t file)
     75          {
   \                     _ZN4mbed10FileSystem9file_sizeEPv: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000F             MOVS     R7,R1
     76              off_t off = file_tell(file);
   \   00000006   0x6822             LDR      R2,[R4, #+0]
   \   00000008   0x6C92             LDR      R2,[R2, #+72]
   \   0000000A   0x4790             BLX      R2
   \   0000000C   0x0006             MOVS     R6,R0
     77              off_t size = file_seek(file, 0, SEEK_END);
   \   0000000E   0x2302             MOVS     R3,#+2
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x0039             MOVS     R1,R7
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x6825             LDR      R5,[R4, #+0]
   \   00000018   0x6C6D             LDR      R5,[R5, #+68]
   \   0000001A   0x47A8             BLX      R5
   \   0000001C   0x0005             MOVS     R5,R0
     78              file_seek(file, off, SEEK_SET);
   \   0000001E   0x2300             MOVS     R3,#+0
   \   00000020   0x0032             MOVS     R2,R6
   \   00000022   0x0039             MOVS     R1,R7
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x6824             LDR      R4,[R4, #+0]
   \   00000028   0x6C64             LDR      R4,[R4, #+68]
   \   0000002A   0x47A0             BLX      R4
     79              return size;
   \   0000002C   0x0028             MOVS     R0,R5
   \   0000002E   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     80          }
     81          

   \                                 In section .text, align 2, keep-with-next
     82          int FileSystem::dir_open(fs_dir_t *dir, const char *path)
     83          {
     84              return -ENOSYS;
   \                     _ZN4mbed10FileSystem8dir_openEPPvPKc: (+1)
   \   00000000   0x2025             MOVS     R0,#+37
   \   00000002   0x43C0             MVNS     R0,R0            ;; #-38
   \   00000004   0x4770             BX       LR               ;; return
     85          }
     86          

   \                                 In section .text, align 2, keep-with-next
     87          int FileSystem::dir_close(fs_dir_t dir)
     88          {
     89              return -ENOSYS;
   \                     _ZN4mbed10FileSystem9dir_closeEPv: (+1)
   \   00000000   0x2025             MOVS     R0,#+37
   \   00000002   0x43C0             MVNS     R0,R0            ;; #-38
   \   00000004   0x4770             BX       LR               ;; return
     90          }
     91          

   \                                 In section .text, align 2, keep-with-next
     92          ssize_t FileSystem::dir_read(fs_dir_t dir, struct dirent *ent)
     93          {
     94              return -ENOSYS;
   \                     _ZN4mbed10FileSystem8dir_readEPvP6dirent: (+1)
   \   00000000   0x2025             MOVS     R0,#+37
   \   00000002   0x43C0             MVNS     R0,R0            ;; #-38
   \   00000004   0x4770             BX       LR               ;; return
     95          }
     96          

   \                                 In section .text, align 2, keep-with-next
     97          void FileSystem::dir_seek(fs_dir_t dir, off_t offset)
     98          {
     99          }
   \                     _ZN4mbed10FileSystem8dir_seekEPvl: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    100          

   \                                 In section .text, align 2, keep-with-next
    101          off_t FileSystem::dir_tell(fs_dir_t dir)
    102          {
    103              return 0;
   \                     _ZN4mbed10FileSystem8dir_tellEPv: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
    104          }
    105          

   \                                 In section .text, align 2, keep-with-next
    106          void FileSystem::dir_rewind(fs_dir_t dir)
    107          {
   \                     _ZN4mbed10FileSystem10dir_rewindEPv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    108              // Note, the may not satisfy rewind on all filesystems
    109              dir_seek(dir, 0);
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x6803             LDR      R3,[R0, #+0]
   \   00000006   0x6E1B             LDR      R3,[R3, #+96]
   \   00000008   0x4798             BLX      R3
    110          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    111          

   \                                 In section .text, align 2, keep-with-next
    112          size_t FileSystem::dir_size(fs_dir_t dir)
    113          {
   \                     _ZN4mbed10FileSystem8dir_sizeEPv: (+1)
   \   00000000   0xB5F2             PUSH     {R1,R4-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
    114              off_t off = dir_tell(dir);
   \   00000004   0x682A             LDR      R2,[R5, #+0]
   \   00000006   0x6E52             LDR      R2,[R2, #+100]
   \   00000008   0x4790             BLX      R2
   \   0000000A   0x0007             MOVS     R7,R0
    115              size_t size = 0;
   \   0000000C   0x2400             MOVS     R4,#+0
    116              struct dirent *ent = new struct dirent;
   \   0000000E   0x20FF             MOVS     R0,#+255
   \   00000010   0x1C80             ADDS     R0,R0,#+2        ;; #+257
   \   00000012   0x.... 0x....      BL       _Znwj
   \   00000016   0x0006             MOVS     R6,R0
    117          
    118              dir_rewind(dir);
   \   00000018   0x9900             LDR      R1,[SP, #+0]
   \   0000001A   0x0028             MOVS     R0,R5
   \   0000001C   0x682A             LDR      R2,[R5, #+0]
   \   0000001E   0x6E92             LDR      R2,[R2, #+104]
   \   00000020   0x4790             BLX      R2
   \   00000022   0xE000             B        ??dir_size_0
    119              while (true) {
    120                  int res = dir_read(dir, ent);
    121                  if (res <= 0) {
    122                      break;
    123                  }
    124          
    125                  size += 1;
   \                     ??dir_size_1: (+1)
   \   00000024   0x1C64             ADDS     R4,R4,#+1
   \                     ??dir_size_0: (+1)
   \   00000026   0x0032             MOVS     R2,R6
   \   00000028   0x9900             LDR      R1,[SP, #+0]
   \   0000002A   0x0028             MOVS     R0,R5
   \   0000002C   0x682B             LDR      R3,[R5, #+0]
   \   0000002E   0x6DDB             LDR      R3,[R3, #+92]
   \   00000030   0x4798             BLX      R3
   \   00000032   0x2801             CMP      R0,#+1
   \   00000034   0xDAF6             BGE      ??dir_size_1
    126              }
    127              dir_seek(dir, off);
   \   00000036   0x003A             MOVS     R2,R7
   \   00000038   0x9900             LDR      R1,[SP, #+0]
   \   0000003A   0x0028             MOVS     R0,R5
   \   0000003C   0x682B             LDR      R3,[R5, #+0]
   \   0000003E   0x6E1B             LDR      R3,[R3, #+96]
   \   00000040   0x4798             BLX      R3
    128          
    129              delete ent;
   \   00000042   0x0030             MOVS     R0,R6
   \   00000044   0x.... 0x....      BL       _ZdlPv
    130              return size;
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    131          }
    132          
    133          // Internally used file wrapper that manages memory on close
    134          template <typename F>

   \                                 In section .text, align 2
   \   __code __interwork __softfp Managed<mbed::File>::deleter ~Managed()
   \                     _ZN7ManagedIN4mbed4FileEED0Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x.... 0x....      BL       _ZN4mbed4FileD2Ev
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       _ZdlPv
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp Managed<mbed::Dir>::deleter ~Managed()
   \                     _ZN7ManagedIN4mbed3DirEED0Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x.... 0x....      BL       _ZN4mbed3DirD2Ev
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0x.... 0x....      BL       _ZdlPv
   \   0000000E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp Managed<mbed::File>::~Managed()
   \                     _ZN7ManagedIN4mbed4FileEED1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x.... 0x....      BL       _ZN4mbed4FileD2Ev
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
    135          class Managed : public F {
   \   __code __interwork __softfp Managed<mbed::Dir>::~Managed()
   \                     _ZN7ManagedIN4mbed3DirEED1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x.... 0x....      BL       _ZN4mbed3DirD2Ev
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
    136          public:

   \                                 In section .text, align 2
   \   __interwork __softfp int Managed<mbed::File>::close()
   \                     _ZN7ManagedIN4mbed4FileEE5closeEv: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
    137              virtual int close() {
   \   00000004   0x.... 0x....      BL       _ZN4mbed4File5closeEv
   \   00000008   0x0004             MOVS     R4,R0
   \   0000000A   0x2D00             CMP      R5,#+0
   \   0000000C   0xD003             BEQ      ??close_0
   \   0000000E   0x0028             MOVS     R0,R5
   \   00000010   0x6829             LDR      R1,[R5, #+0]
   \   00000012   0x6849             LDR      R1,[R1, #+4]
   \   00000014   0x4788             BLX      R1
   \                     ??close_0: (+1)
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0xBD32             POP      {R1,R4,R5,PC}    ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp int Managed<mbed::Dir>::close()
   \                     _ZN7ManagedIN4mbed3DirEE5closeEv: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
    138                  int err = F::close();
   \   00000004   0x.... 0x....      BL       _ZN4mbed3Dir5closeEv
   \   00000008   0x0004             MOVS     R4,R0
    139                  delete this;
   \   0000000A   0x2D00             CMP      R5,#+0
   \   0000000C   0xD003             BEQ      ??close_1
   \   0000000E   0x0028             MOVS     R0,R5
   \   00000010   0x6829             LDR      R1,[R5, #+0]
   \   00000012   0x6849             LDR      R1,[R1, #+4]
   \   00000014   0x4788             BLX      R1
    140                  return err;
   \                     ??close_1: (+1)
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    141              }
    142          };
    143          

   \                                 In section .text, align 2, keep-with-next
    144          int FileSystem::open(FileHandle **file, const char *path, int flags)
    145          {
   \                     _ZN4mbed10FileSystem4openEPPNS_10FileHandleEPKci: (+1)
   \   00000000   0xB5F4             PUSH     {R2,R4-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x001F             MOVS     R7,R3
    146              File *f = new Managed<File>;
   \   00000008   0x200C             MOVS     R0,#+12
   \   0000000A   0x.... 0x....      BL       _Znwj
   \   0000000E   0x0004             MOVS     R4,R0
   \   00000010   0xD004             BEQ      ??open_0
   \   00000012   0x.... 0x....      BL       _ZN4mbed4FileC2Ev
   \   00000016   0x....             LDR      R0,??DataTable2_2
   \   00000018   0x6020             STR      R0,[R4, #+0]
   \   0000001A   0xE000             B        ??open_1
   \                     ??open_0: (+1)
   \   0000001C   0x2400             MOVS     R4,#+0
    147              int err = f->open(this, path, flags);
   \                     ??open_1: (+1)
   \   0000001E   0x003B             MOVS     R3,R7
   \   00000020   0x9A00             LDR      R2,[SP, #+0]
   \   00000022   0x0031             MOVS     R1,R6
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x6826             LDR      R6,[R4, #+0]
   \   00000028   0x6C76             LDR      R6,[R6, #+68]
   \   0000002A   0x47B0             BLX      R6
   \   0000002C   0x0006             MOVS     R6,R0
    148              if (err) {
   \   0000002E   0xD007             BEQ      ??open_2
    149                  delete f;
   \   00000030   0x2C00             CMP      R4,#+0
   \   00000032   0xD003             BEQ      ??open_3
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x6821             LDR      R1,[R4, #+0]
   \   00000038   0x6849             LDR      R1,[R1, #+4]
   \   0000003A   0x4788             BLX      R1
    150                  return err;
   \                     ??open_3: (+1)
   \   0000003C   0x0030             MOVS     R0,R6
   \   0000003E   0xBDF2             POP      {R1,R4-R7,PC}
    151              }
    152          
    153              *file = f;
   \                     ??open_2: (+1)
   \   00000040   0x602C             STR      R4,[R5, #+0]
    154              return 0;
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    155          }
    156          

   \                                 In section .text, align 2, keep-with-next
    157          int FileSystem::open(DirHandle **dir, const char *path) {
   \                     _ZN4mbed10FileSystem4openEPPNS_9DirHandleEPKc: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0017             MOVS     R7,R2
    158              Dir *d = new Managed<Dir>;
   \   00000008   0x200C             MOVS     R0,#+12
   \   0000000A   0x.... 0x....      BL       _Znwj
   \   0000000E   0x0004             MOVS     R4,R0
   \   00000010   0xD004             BEQ      ??open_4
   \   00000012   0x.... 0x....      BL       _ZN4mbed3DirC2Ev
   \   00000016   0x....             LDR      R0,??DataTable2_3
   \   00000018   0x6020             STR      R0,[R4, #+0]
   \   0000001A   0xE000             B        ??open_5
   \                     ??open_4: (+1)
   \   0000001C   0x2400             MOVS     R4,#+0
    159              int err = d->open(this, path);
   \                     ??open_5: (+1)
   \   0000001E   0x003A             MOVS     R2,R7
   \   00000020   0x0031             MOVS     R1,R6
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0x6823             LDR      R3,[R4, #+0]
   \   00000026   0x6B5B             LDR      R3,[R3, #+52]
   \   00000028   0x4798             BLX      R3
   \   0000002A   0x0006             MOVS     R6,R0
    160              if (err) {
   \   0000002C   0xD007             BEQ      ??open_6
    161                  delete d;
   \   0000002E   0x2C00             CMP      R4,#+0
   \   00000030   0xD003             BEQ      ??open_7
   \   00000032   0x0020             MOVS     R0,R4
   \   00000034   0x6821             LDR      R1,[R4, #+0]
   \   00000036   0x6849             LDR      R1,[R1, #+4]
   \   00000038   0x4788             BLX      R1
    162                  return err;
   \                     ??open_7: (+1)
   \   0000003A   0x0030             MOVS     R0,R6
   \   0000003C   0xBDF2             POP      {R1,R4-R7,PC}
    163              }
    164          
    165              *dir = d;
   \                     ??open_6: (+1)
   \   0000003E   0x602C             STR      R4,[R5, #+0]
    166              return 0;
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    167          }

   \                                 In section .text, align 2, keep-with-next
   \   __code __interwork __softfp mbed::FileSystem::subobject FileSystem(char const *)
   \                     _ZN4mbed10FileSystemC2EPKc: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x....             B.N      ?Subroutine0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     _ZTVN4mbed14FileSystemLikeE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     _ZTVN4mbed10FileSystemE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     _ZTV7ManagedIN4mbed4FileEE+0x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     _ZTV7ManagedIN4mbed3DirEE+0x8

   \                                 In section .text, align 4
   \   __interwork __softfp void mbed::FileSystemLike::deleter ~FileSystemLike for FileBase/-4/()
   \                     _ZThn4_N4mbed14FileSystemLikeD0Ev: (+1)
   \   00000000   0x1F00             SUBS     R0,R0,#+4
   \   00000002   0x4B01             LDR      R3,`??deleter ~FileSystemLike for FileBase/-4/_0`
   \   00000004   0x4718             BX       R3
   \   00000006   0xBF00             Nop      
   \                     `??deleter ~FileSystemLike for FileBase/-4/_0`:
   \   00000008   0x........         DC32     _ZN4mbed14FileSystemLikeD0Ev

   \                                 In section .text, align 4
   \   __interwork __softfp void *mbed::FileSystemLike::~FileSystemLike for FileBase/-4/()
   \                     _ZThn4_N4mbed14FileSystemLikeD1Ev: (+1)
   \   00000000   0x1F00             SUBS     R0,R0,#+4
   \   00000002   0x4B01             LDR      R3,`?~FileSystemLike for FileBase/-4/_0`
   \   00000004   0x4718             BX       R3
   \   00000006   0xBF00             Nop      
   \                     `?~FileSystemLike for FileBase/-4/_0`:
   \   00000008   0x........         DC32     _ZN4mbed14FileSystemLikeD1Ev

   \                                 In section .text, align 4
   \   __interwork __softfp void mbed::FileSystem::deleter ~FileSystem for FileBase/-4/()
   \                     _ZThn4_N4mbed10FileSystemD0Ev: (+1)
   \   00000000   0x1F00             SUBS     R0,R0,#+4
   \   00000002   0x4B01             LDR      R3,`??deleter ~FileSystem for FileBase/-4/_0`
   \   00000004   0x4718             BX       R3
   \   00000006   0xBF00             Nop      
   \                     `??deleter ~FileSystem for FileBase/-4/_0`:
   \   00000008   0x........         DC32     _ZN4mbed10FileSystemD0Ev

   \                                 In section .text, align 4
   \   __interwork __softfp void *mbed::FileSystem::~FileSystem for FileBase/-4/()
   \                     _ZThn4_N4mbed10FileSystemD1Ev: (+1)
   \   00000000   0x1F00             SUBS     R0,R0,#+4
   \   00000002   0x4B01             LDR      R3,`?~FileSystem for FileBase/-4/_0`
   \   00000004   0x4718             BX       R3
   \   00000006   0xBF00             Nop      
   \                     `?~FileSystem for FileBase/-4/_0`:
   \   00000008   0x........         DC32     _ZN4mbed10FileSystemD1Ev

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Managed<mbed::Dir>::close()
        16   -- Indirect call
        16   -> mbed::Dir::close()
       8   Managed<mbed::Dir>::deleter ~Managed()
         8   -> mbed::Dir::subobject ~Dir()
         8   -> operator delete(void *)
       8   Managed<mbed::Dir>::~Managed()
         8   -> mbed::Dir::subobject ~Dir()
      16   Managed<mbed::File>::close()
        16   -- Indirect call
        16   -> mbed::File::close()
       8   Managed<mbed::File>::deleter ~Managed()
         8   -> mbed::File::subobject ~File()
         8   -> operator delete(void *)
       8   Managed<mbed::File>::~Managed()
         8   -> mbed::File::subobject ~File()
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
         8   -- Indirect call
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       0   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
       8   mbed::DirHandle::closedir()
         8   -- Indirect call
       8   mbed::DirHandle::readdir()
         8   -- Indirect call
       8   mbed::DirHandle::rewinddir()
         8   -- Indirect call
       8   mbed::DirHandle::seekdir(off_t)
         8   -- Indirect call
       8   mbed::DirHandle::telldir()
         8   -- Indirect call
       8   mbed::FileHandle::flen()
         8   -- Indirect call
       8   mbed::FileHandle::fsync()
         8   -- Indirect call
       8   mbed::FileHandle::lseek(off_t, int)
         8   -- Indirect call
       0   mbed::FileHandle::poll(short) const
       0   mbed::FileHandle::set_blocking(bool)
       0   mbed::FileHandle::sigio(mbed::Callback<void ()>)
       0   mbed::FileSystem::FileSystem(char const *)
         8   -> mbed::FileBase::subobject FileBase(char const *, mbed::PathType)
       0   mbed::FileSystem::deleter ~FileSystem for FileBase/-4/()
         0   -> mbed::FileSystem::deleter ~FileSystem()
       8   mbed::FileSystem::deleter ~FileSystem()
         8   -> mbed::FileBase::subobject ~FileBase()
         8   -> operator delete(void *)
       0   mbed::FileSystem::dir_close(void *)
       0   mbed::FileSystem::dir_open(void * *, char const *)
       0   mbed::FileSystem::dir_read(void *, dirent *)
       8   mbed::FileSystem::dir_rewind(void *)
         8   -- Indirect call
       0   mbed::FileSystem::dir_seek(void *, off_t)
      24   mbed::FileSystem::dir_size(void *)
        24   -- Indirect call
        24   -> operator delete(void *)
        24   -> operator new(std::size_t)
       0   mbed::FileSystem::dir_tell(void *)
       0   mbed::FileSystem::file_isatty(void *)
       8   mbed::FileSystem::file_rewind(void *)
         8   -- Indirect call
      24   mbed::FileSystem::file_size(void *)
        24   -- Indirect call
       0   mbed::FileSystem::file_sync(void *)
       8   mbed::FileSystem::file_tell(void *)
         8   -- Indirect call
       0   mbed::FileSystem::mkdir(char const *, mode_t)
      24   mbed::FileSystem::open(mbed::DirHandle **, char const *)
        24   -- Indirect call
        24   -> mbed::Dir::subobject Dir()
        24   -> operator new(std::size_t)
      24   mbed::FileSystem::open(mbed::FileHandle **, char const *, int)
        24   -- Indirect call
        24   -> mbed::File::subobject File()
        24   -> operator new(std::size_t)
       0   mbed::FileSystem::reformat(BlockDevice *)
       0   mbed::FileSystem::remove(char const *)
       0   mbed::FileSystem::rename(char const *, char const *)
       0   mbed::FileSystem::stat(char const *, stat *)
       8   mbed::FileSystem::subobject FileSystem(char const *)
         8   -> mbed::FileBase::subobject FileBase(char const *, mbed::PathType)
       0   mbed::FileSystem::~FileSystem for FileBase/-4/()
         0   -> mbed::FileSystem::~FileSystem()
       8   mbed::FileSystem::~FileSystem()
         8   -> mbed::FileBase::subobject ~FileBase()
       0   mbed::FileSystemLike::deleter ~FileSystemLike for FileBase/-4/()
         0   -> mbed::FileSystemLike::deleter ~FileSystemLike()
       8   mbed::FileSystemLike::deleter ~FileSystemLike()
         8   -> mbed::FileBase::subobject ~FileBase()
         8   -> operator delete(void *)
       0   mbed::FileSystemLike::~FileSystemLike for FileBase/-4/()
         0   -> mbed::FileSystemLike::~FileSystemLike()
       8   mbed::FileSystemLike::~FileSystemLike()
         8   -> mbed::FileBase::subobject ~FileBase()
      12   mbed::callback<>(void (*)(void *), void *)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
      38  ?Subroutine0
      10  ?Subroutine1
      26  Managed<mbed::Dir>::close()
      16  Managed<mbed::Dir>::deleter ~Managed()
      12  Managed<mbed::Dir>::~Managed()
      26  Managed<mbed::File>::close()
      16  Managed<mbed::File>::deleter ~Managed()
      12  Managed<mbed::File>::~Managed()
     260  ent
      12  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
      10  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      10  mbed::DirHandle::closedir()
      28  mbed::DirHandle::readdir()
      10  mbed::DirHandle::rewinddir()
      10  mbed::DirHandle::seekdir(off_t)
      10  mbed::DirHandle::telldir()
      10  mbed::FileHandle::flen()
      10  mbed::FileHandle::fsync()
      10  mbed::FileHandle::lseek(off_t, int)
       4  mbed::FileHandle::poll(short) const
       6  mbed::FileHandle::set_blocking(bool)
       2  mbed::FileHandle::sigio(mbed::Callback<void ()>)
       2  mbed::FileSystem::FileSystem(char const *)
      12  mbed::FileSystem::deleter ~FileSystem for FileBase/-4/()
      18  mbed::FileSystem::deleter ~FileSystem()
       6  mbed::FileSystem::dir_close(void *)
       6  mbed::FileSystem::dir_open(void * *, char const *)
       6  mbed::FileSystem::dir_read(void *, dirent *)
      12  mbed::FileSystem::dir_rewind(void *)
       2  mbed::FileSystem::dir_seek(void *, off_t)
      76  mbed::FileSystem::dir_size(void *)
       4  mbed::FileSystem::dir_tell(void *)
       4  mbed::FileSystem::file_isatty(void *)
       4  mbed::FileSystem::file_rewind(void *)
      48  mbed::FileSystem::file_size(void *)
       4  mbed::FileSystem::file_sync(void *)
       6  mbed::FileSystem::file_tell(void *)
       6  mbed::FileSystem::mkdir(char const *, mode_t)
      68  mbed::FileSystem::open(mbed::DirHandle **, char const *)
      70  mbed::FileSystem::open(mbed::FileHandle **, char const *, int)
       6  mbed::FileSystem::reformat(BlockDevice *)
       6  mbed::FileSystem::remove(char const *)
       6  mbed::FileSystem::rename(char const *, char const *)
       6  mbed::FileSystem::stat(char const *, stat *)
       4  mbed::FileSystem::subobject FileSystem(char const *)
      12  mbed::FileSystem::~FileSystem for FileBase/-4/()
      14  mbed::FileSystem::~FileSystem()
      12  mbed::FileSystemLike::deleter ~FileSystemLike for FileBase/-4/()
      18  mbed::FileSystemLike::deleter ~FileSystemLike()
      12  mbed::FileSystemLike::~FileSystemLike for FileBase/-4/()
      14  mbed::FileSystemLike::~FileSystemLike()
      32  mbed::callback<>(void (*)(void *), void *)
      12  ops
     840  -- Other

 
 260 bytes in section .bss
 852 bytes in section .rodata
 802 bytes in section .text
 
 416 bytes of CODE  memory (+ 386 bytes shared)
   0 bytes of CONST memory (+ 852 bytes shared)
   0 bytes of DATA  memory (+ 260 bytes shared)

Errors: none
Warnings: none
