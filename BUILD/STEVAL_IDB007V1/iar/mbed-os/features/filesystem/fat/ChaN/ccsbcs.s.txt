###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Mar/2018  13:33:16
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  .\mbed-os\features\filesystem\fat\ChaN\ccsbcs.cpp
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --c++ --no_rtti --no_exceptions --guard_calls
#        --no_static_destruction -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DMBED_BUILD_TIMESTAMP=1521462769.94 -DTARGET_CORTEX_M -DDEVICE_SPI=1
#        -DTARGET_LIKE_MBED -DARM_MATH_CM0 -DTARGET_RELEASE -D__CORTEX_M0
#        -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0 -DTOOLCHAIN_object
#        -DDEVICE_SERIAL=1 -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -DFEATURE_BLE=1 -f
#        .\BUILD\STEVAL_IDB007V1\IAR\.includes_dcedd7aa577106f9c79229685e6ddb41.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/FEATURE_BLE -I./mbed-os/features/FEATURE_BLE/ble
#        -I./mbed-os/features/FEATURE_BLE/ble/generic
#        -I./mbed-os/features/FEATURE_BLE/ble/pal
#        -I./mbed-os/features/FEATURE_BLE/ble/services
#        -I./mbed-os/features/FEATURE_BLE/source
#        -I./mbed-os/features/FEATURE_BLE/source/generic
#        -I./mbed-os/features/FEATURE_BLE/source/services
#        -I./mbed-os/features/FEATURE_BLE/targets
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN -I./mbed-os/features/mbedtls
#        -I./mbed-os/features/mbedtls/importer -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\IAR\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\fat\ChaN\ccsbcs.d
#        -l
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\fat\ChaN\ccsbcs.s.txt
#        -o
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\fat\ChaN\ccsbcs.o
#        .\mbed-os\features\filesystem\fat\ChaN\ccsbcs.cpp
#    Locale       =  Italian_Italy.1252
#    List file    =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\fat\ChaN\ccsbcs.s.txt
#    Object file  =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\features\filesystem\fat\ChaN\ccsbcs.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\features\filesystem\fat\ChaN\ccsbcs.cpp
      1          /*------------------------------------------------------------------------*/
      2          /* Unicode - Local code bidirectional converter  (C)ChaN, 2015            */
      3          /* (SBCS code pages)                                                      */
      4          /*------------------------------------------------------------------------*/
      5          /*  437   U.S.
      6          /   720   Arabic
      7          /   737   Greek
      8          /   771   KBL
      9          /   775   Baltic
     10          /   850   Latin 1
     11          /   852   Latin 2
     12          /   855   Cyrillic
     13          /   857   Turkish
     14          /   860   Portuguese
     15          /   861   Icelandic
     16          /   862   Hebrew
     17          /   863   Canadian French
     18          /   864   Arabic
     19          /   865   Nordic
     20          /   866   Russian
     21          /   869   Greek 2
     22          */
     23          
     24          #include "ff.h"
     25          
     26          
     27          #if _CODE_PAGE == 437
     28          #define _TBLDEF 1
     29          static
     30          const WCHAR Tbl[] = {	/*  CP437(0x80-0xFF) to Unicode conversion table */
     31          	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E5, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x00EE, 0x00EC, 0x00C4, 0x00C5,
     32          	0x00C9, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00F2, 0x00FB, 0x00F9, 0x00FF, 0x00D6, 0x00DC, 0x00A2, 0x00A3, 0x00A5, 0x20A7, 0x0192,
     33          	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x2310, 0x00AC, 0x00BD, 0x00BC, 0x00A1, 0x00AB, 0x00BB,
     34          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x255B, 0x2510,
     35          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
     36          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
     37          	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x221E, 0x03C6, 0x03B5, 0x2229,
     38          	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x207F, 0x00B2, 0x25A0, 0x00A0
     39          };
     40          
     41          #elif _CODE_PAGE == 720
     42          #define _TBLDEF 1
     43          static
     44          const WCHAR Tbl[] = {	/*  CP720(0x80-0xFF) to Unicode conversion table */
     45          	0x0000, 0x0000, 0x00E9, 0x00E2, 0x0000, 0x00E0, 0x0000, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x00EE, 0x0000, 0x0000, 0x0000,
     46          	0x0000, 0x0651, 0x0652, 0x00F4, 0x00A4, 0x0640, 0x00FB, 0x00F9, 0x0621, 0x0622, 0x0623, 0x0624, 0x00A3, 0x0625, 0x0626, 0x0627,
     47          	0x0628, 0x0629, 0x062A, 0x062B, 0x062C, 0x062D, 0x062E, 0x062F, 0x0630, 0x0631, 0x0632, 0x0633, 0x0634, 0x0635, 0x00AB, 0x00BB,
     48          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x255B, 0x2510,
     49          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
     50          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
     51          	0x0636, 0x0637, 0x0638, 0x0639, 0x063A, 0x0641, 0x00B5, 0x0642, 0x0643, 0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649, 0x064A,
     52          	0x2261, 0x064B, 0x064C, 0x064D, 0x064E, 0x064F, 0x0650, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x207F, 0x00B2, 0x25A0, 0x00A0
     53          };
     54          
     55          #elif _CODE_PAGE == 737
     56          #define _TBLDEF 1
     57          static
     58          const WCHAR Tbl[] = {	/*  CP737(0x80-0xFF) to Unicode conversion table */
     59          	0x0391, 0x0392, 0x0393, 0x0394, 0x0395, 0x0396, 0x0397, 0x0398, 0x0399, 0x039A, 0x039B, 0x039C, 0x039D, 0x039E, 0x039F, 0x03A0,
     60          	0x03A1, 0x03A3, 0x03A4, 0x03A5, 0x03A6, 0x03A7, 0x03A8, 0x03A9, 0x03B1, 0x03B2, 0x03B3, 0x03B4, 0x03B5, 0x03B6, 0x03B7, 0x03B8,
     61          	0x03B9, 0x03BA, 0x03BB, 0x03BC, 0x03BD, 0x03BE, 0x03BF, 0x03C0, 0x03C1, 0x03C3, 0x03C2, 0x03C4, 0x03C5, 0x03C6, 0x03C7, 0x03C8,
     62          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x255B, 0x2510,
     63          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
     64          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
     65          	0x03C9, 0x03AC, 0x03AD, 0x03AE, 0x03CA, 0x03AF, 0x03CC, 0x03CD, 0x03CB, 0x03CE, 0x0386, 0x0388, 0x0389, 0x038A, 0x038C, 0x038E,
     66          	0x038F, 0x00B1, 0x2265, 0x2264, 0x03AA, 0x03AB, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x207F, 0x00B2, 0x25A0, 0x00A0
     67          };
     68          
     69          #elif _CODE_PAGE == 771
     70          #define _TBLDEF 1
     71          static
     72          const WCHAR Tbl[] = {	/*  CP771(0x80-0xFF) to Unicode conversion table */
     73          	0x0410, 0x0411, 0x0412, 0x0413, 0x0414, 0x0415, 0x0416, 0x0417, 0x0418, 0x0419, 0x041A, 0x041B, 0x041C, 0x041D, 0x041E, 0x041F,
     74          	0x0420, 0x0421, 0x0422, 0x0423, 0x0424, 0x0425, 0x0426, 0x0427, 0x0428, 0x0429, 0x042A, 0x042B, 0x042C, 0x042D, 0x042E, 0x042F,
     75          	0x0430, 0x0431, 0x0432, 0x0433, 0x0434, 0x0435, 0x0436, 0x0437, 0x0438, 0x0439, 0x043A, 0x043B, 0x043C, 0x043D, 0x043E, 0x043F,
     76          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x2558, 0x2510,
     77          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
     78          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x0104, 0x0105, 0x010C, 0x010D,
     79          	0x0440, 0x0441, 0x0442, 0x0443, 0x0444, 0x0445, 0x0446, 0x0447, 0x0448, 0x0449, 0x044A, 0x044B, 0x044C, 0x044D, 0x044E, 0x044F,
     80          	0x0118, 0x0119, 0x0116, 0x0117, 0x012E, 0x012F, 0x0160, 0x0161, 0x0172, 0x0173, 0x016A, 0x016B, 0x017D, 0x017E, 0x25A0, 0x00A0
     81          };
     82          
     83          #elif _CODE_PAGE == 775
     84          #define _TBLDEF 1
     85          static
     86          const WCHAR Tbl[] = {	/*  CP775(0x80-0xFF) to Unicode conversion table */
     87          	0x0106, 0x00FC, 0x00E9, 0x0101, 0x00E4, 0x0123, 0x00E5, 0x0107, 0x0142, 0x0113, 0x0156, 0x0157, 0x012B, 0x0179, 0x00C4, 0x00C5,
     88          	0x00C9, 0x00E6, 0x00C6, 0x014D, 0x00F6, 0x0122, 0x00A2, 0x015A, 0x015B, 0x00D6, 0x00DC, 0x00F8, 0x00A3, 0x00D8, 0x00D7, 0x00A4,
     89          	0x0100, 0x012A, 0x00F3, 0x017B, 0x017C, 0x017A, 0x201D, 0x00A6, 0x00A9, 0x00AE, 0x00AC, 0x00BD, 0x00BC, 0x0141, 0x00AB, 0x00BB,
     90          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x0104, 0x010C, 0x0118, 0x0116, 0x2563, 0x2551, 0x2557, 0x255D, 0x012E, 0x0160, 0x2510,
     91          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x0172, 0x016A, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x017D,
     92          	0x0105, 0x010D, 0x0119, 0x0117, 0x012F, 0x0161, 0x0173, 0x016B, 0x017E, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
     93          	0x00D3, 0x00DF, 0x014C, 0x0143, 0x00F5, 0x00D5, 0x00B5, 0x0144, 0x0136, 0x0137, 0x013B, 0x013C, 0x0146, 0x0112, 0x0145, 0x2019,
     94          	0x00AD, 0x00B1, 0x201C, 0x00BE, 0x00B6, 0x00A7, 0x00F7, 0x201E, 0x00B0, 0x2219, 0x00B7, 0x00B9, 0x00B3, 0x00B2, 0x25A0, 0x00A0
     95          };
     96          
     97          #elif _CODE_PAGE == 850
     98          #define _TBLDEF 1
     99          static

   \                                 In section .text, align 4, keep-with-next
    100          const WCHAR Tbl[] = {	/*  CP850(0x80-0xFF) to Unicode conversion table */
   \                     Tbl:
   \   00000000   0x00C7 0x00FC      DC16 199, 252, 233, 226, 228, 224, 229, 231, 234, 235, 232, 239, 238
   \              0x00E9 0x00E2
   \              0x00E4 0x00E0
   \              0x00E5 0x00E7
   \              0x00EA 0x00EB
   \              0x00E8 0x00EF
   \              0x00EE       
   \   0000001A   0x00EC 0x00C4      DC16 236, 196, 197, 201, 230, 198, 244, 246, 242, 251, 249, 255, 214
   \              0x00C5 0x00C9
   \              0x00E6 0x00C6
   \              0x00F4 0x00F6
   \              0x00F2 0x00FB
   \              0x00F9 0x00FF
   \              0x00D6       
   \   00000034   0x00DC 0x00F8      DC16 220, 248, 163, 216, 215, 402, 225, 237, 243, 250, 241, 209, 170
   \              0x00A3 0x00D8
   \              0x00D7 0x0192
   \              0x00E1 0x00ED
   \              0x00F3 0x00FA
   \              0x00F1 0x00D1
   \              0x00AA       
   \   0000004E   0x00BA 0x00BF      DC16 186, 191, 174, 172, 189, 188, 161, 171, 187, 9617, 9618, 9619
   \              0x00AE 0x00AC
   \              0x00BD 0x00BC
   \              0x00A1 0x00AB
   \              0x00BB 0x2591
   \              0x2592 0x2593
   \   00000066   0x2502 0x2524      DC16 9474, 9508, 193, 194, 192, 169, 9571, 9553, 9559, 9565, 162, 165
   \              0x00C1 0x00C2
   \              0x00C0 0x00A9
   \              0x2563 0x2551
   \              0x2557 0x255D
   \              0x00A2 0x00A5
   \   0000007E   0x2510 0x2514      DC16 9488, 9492, 9524, 9516, 9500, 9472, 9532, 227, 195, 9562, 9556
   \              0x2534 0x252C
   \              0x251C 0x2500
   \              0x253C 0x00E3
   \              0x00C3 0x255A
   \              0x2554       
   \   00000094   0x2569 0x2566      DC16 9577, 9574, 9568, 9552, 9580, 164, 240, 208, 202, 203, 200, 305
   \              0x2560 0x2550
   \              0x256C 0x00A4
   \              0x00F0 0x00D0
   \              0x00CA 0x00CB
   \              0x00C8 0x0131
   \   000000AC   0x00CD 0x00CE      DC16 205, 206, 207, 9496, 9484, 9608, 9604, 166, 204, 9600, 211, 223
   \              0x00CF 0x2518
   \              0x250C 0x2588
   \              0x2584 0x00A6
   \              0x00CC 0x2580
   \              0x00D3 0x00DF
   \   000000C4   0x00D4 0x00D2      DC16 212, 210, 245, 213, 181, 254, 222, 218, 219, 217, 253, 221, 175
   \              0x00F5 0x00D5
   \              0x00B5 0x00FE
   \              0x00DE 0x00DA
   \              0x00DB 0x00D9
   \              0x00FD 0x00DD
   \              0x00AF       
   \   000000DE   0x00B4 0x00AD      DC16 180, 173, 177, 8215, 190, 182, 167, 247, 184, 176, 168, 183, 185
   \              0x00B1 0x2017
   \              0x00BE 0x00B6
   \              0x00A7 0x00F7
   \              0x00B8 0x00B0
   \              0x00A8 0x00B7
   \              0x00B9       
   \   000000F8   0x00B3 0x00B2      DC16 179, 178, 9632, 160
   \              0x25A0 0x00A0
    101          	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E5, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x00EE, 0x00EC, 0x00C4, 0x00C5,
    102          	0x00C9, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00F2, 0x00FB, 0x00F9, 0x00FF, 0x00D6, 0x00DC, 0x00F8, 0x00A3, 0x00D8, 0x00D7, 0x0192,
    103          	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x00AE, 0x00AC, 0x00BD, 0x00BC, 0x00A1, 0x00AB, 0x00BB,
    104          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x00C1, 0x00C2, 0x00C0, 0x00A9, 0x2563, 0x2551, 0x2557, 0x255D, 0x00A2, 0x00A5, 0x2510,
    105          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x00E3, 0x00C3, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x00A4,
    106          	0x00F0, 0x00D0, 0x00CA, 0x00CB, 0x00C8, 0x0131, 0x00CD, 0x00CE, 0x00CF, 0x2518, 0x250C, 0x2588, 0x2584, 0x00A6, 0x00CC, 0x2580,
    107          	0x00D3, 0x00DF, 0x00D4, 0x00D2, 0x00F5, 0x00D5, 0x00B5, 0x00FE, 0x00DE, 0x00DA, 0x00DB, 0x00D9, 0x00FD, 0x00DD, 0x00AF, 0x00B4,
    108          	0x00AD, 0x00B1, 0x2017, 0x00BE, 0x00B6, 0x00A7, 0x00F7, 0x00B8, 0x00B0, 0x00A8, 0x00B7, 0x00B9, 0x00B3, 0x00B2, 0x25A0, 0x00A0
    109          };
    110          
    111          #elif _CODE_PAGE == 852
    112          #define _TBLDEF 1
    113          static
    114          const WCHAR Tbl[] = {	/*  CP852(0x80-0xFF) to Unicode conversion table */
    115          	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x016F, 0x0107, 0x00E7, 0x0142, 0x00EB, 0x0150, 0x0151, 0x00EE, 0x0179, 0x00C4, 0x0106,
    116          	0x00C9, 0x0139, 0x013A, 0x00F4, 0x00F6, 0x013D, 0x013E, 0x015A, 0x015B, 0x00D6, 0x00DC, 0x0164, 0x0165, 0x0141, 0x00D7, 0x010D,
    117          	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x0104, 0x0105, 0x017D, 0x017E, 0x0118, 0x0119, 0x00AC, 0x017A, 0x010C, 0x015F, 0x00AB, 0x00BB,
    118          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x00C1, 0x00C2, 0x011A, 0x015E, 0x2563, 0x2551, 0x2557, 0x255D, 0x017B, 0x017C, 0x2510,
    119          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x0102, 0x0103, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x00A4,
    120          	0x0111, 0x0110, 0x010E, 0x00CB, 0x010F, 0x0147, 0x00CD, 0x00CE, 0x011B, 0x2518, 0x250C, 0x2588, 0x2584, 0x0162, 0x016E, 0x2580,
    121          	0x00D3, 0x00DF, 0x00D4, 0x0143, 0x0144, 0x0148, 0x0160, 0x0161, 0x0154, 0x00DA, 0x0155, 0x0170, 0x00FD, 0x00DD, 0x0163, 0x00B4,
    122          	0x00AD, 0x02DD, 0x02DB, 0x02C7, 0x02D8, 0x00A7, 0x00F7, 0x00B8, 0x00B0, 0x00A8, 0x02D9, 0x0171, 0x0158, 0x0159, 0x25A0, 0x00A0
    123          };
    124          
    125          #elif _CODE_PAGE == 855
    126          #define _TBLDEF 1
    127          static
    128          const WCHAR Tbl[] = {	/*  CP855(0x80-0xFF) to Unicode conversion table */
    129          	0x0452, 0x0402, 0x0453, 0x0403, 0x0451, 0x0401, 0x0454, 0x0404, 0x0455, 0x0405, 0x0456, 0x0406, 0x0457, 0x0407, 0x0458, 0x0408,
    130          	0x0459, 0x0409, 0x045A, 0x040A, 0x045B, 0x040B, 0x045C, 0x040C, 0x045E, 0x040E, 0x045F, 0x040F, 0x044E, 0x042E, 0x044A, 0x042A,
    131          	0x0430, 0x0410, 0x0431, 0x0411, 0x0446, 0x0426, 0x0434, 0x0414, 0x0435, 0x0415, 0x0444, 0x0424, 0x0433, 0x0413, 0x00AB, 0x00BB,
    132          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x0445, 0x0425, 0x0438, 0x0418, 0x2563, 0x2551, 0x2557, 0x255D, 0x0439, 0x0419, 0x2510,
    133          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x043A, 0x041A, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x00A4,
    134          	0x043B, 0x041B, 0x043C, 0x041C, 0x043D, 0x041D, 0x043E, 0x041E, 0x043F, 0x2518, 0x250C, 0x2588, 0x2584, 0x041F, 0x044F, 0x2580,
    135          	0x042F, 0x0440, 0x0420, 0x0441, 0x0421, 0x0442, 0x0422, 0x0443, 0x0423, 0x0436, 0x0416, 0x0432, 0x0412, 0x044C, 0x042C, 0x2116,
    136          	0x00AD, 0x044B, 0x042B, 0x0437, 0x0417, 0x0448, 0x0428, 0x044D, 0x042D, 0x0449, 0x0429, 0x0447, 0x0427, 0x00A7, 0x25A0, 0x00A0
    137          };
    138          
    139          #elif _CODE_PAGE == 857
    140          #define _TBLDEF 1
    141          static
    142          const WCHAR Tbl[] = {	/*  CP857(0x80-0xFF) to Unicode conversion table */
    143          	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E5, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x00EE, 0x0131, 0x00C4, 0x00C5,
    144          	0x00C9, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00F2, 0x00FB, 0x00F9, 0x0130, 0x00D6, 0x00DC, 0x00F8, 0x00A3, 0x00D8, 0x015E, 0x015F,
    145          	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x011E, 0x011F, 0x00BF, 0x00AE, 0x00AC, 0x00BD, 0x00BC, 0x00A1, 0x00AB, 0x00BB,
    146          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x00C1, 0x00C2, 0x00C0, 0x00A9, 0x2563, 0x2551, 0x2557, 0x255D, 0x00A2, 0x00A5, 0x2510,
    147          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x00E3, 0x00C3, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x00A4,
    148          	0x00BA, 0x00AA, 0x00CA, 0x00CB, 0x00C8, 0x0000, 0x00CD, 0x00CE, 0x00CF, 0x2518, 0x250C, 0x2588, 0x2584, 0x00A6, 0x00CC, 0x2580,
    149          	0x00D3, 0x00DF, 0x00D4, 0x00D2, 0x00F5, 0x00D5, 0x00B5, 0x0000, 0x00D7, 0x00DA, 0x00DB, 0x00D9, 0x00EC, 0x00FF, 0x00AF, 0x00B4,
    150          	0x00AD, 0x00B1, 0x0000, 0x00BE, 0x00B6, 0x00A7, 0x00F7, 0x00B8, 0x00B0, 0x00A8, 0x00B7, 0x00B9, 0x00B3, 0x00B2, 0x25A0, 0x00A0
    151          };
    152          
    153          #elif _CODE_PAGE == 860
    154          #define _TBLDEF 1
    155          static
    156          const WCHAR Tbl[] = {	/*  CP860(0x80-0xFF) to Unicode conversion table */
    157          	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E3, 0x00E0, 0x00C1, 0x00E7, 0x00EA, 0x00CA, 0x00E8, 0x00CD, 0x00D4, 0x00EC, 0x00C3, 0x00C2,
    158          	0x00C9, 0x00C0, 0x00C8, 0x00F4, 0x00F5, 0x00F2, 0x00DA, 0x00F9, 0x00CC, 0x00D5, 0x00DC, 0x00A2, 0x00A3, 0x00D9, 0x20A7, 0x00D3,
    159          	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x00D2, 0x00AC, 0x00BD, 0x00BC, 0x00A1, 0x00AB, 0x00BB,
    160          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x2558, 0x2510,
    161          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
    162          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
    163          	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x221E, 0x03C6, 0x03B5, 0x2229,
    164          	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x207F, 0x00B2, 0x25A0, 0x00A0
    165          };
    166          
    167          #elif _CODE_PAGE == 861
    168          #define _TBLDEF 1
    169          static
    170          const WCHAR Tbl[] = {	/*  CP861(0x80-0xFF) to Unicode conversion table */
    171          	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E6, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00D0, 0x00F0, 0x00DE, 0x00C4, 0x00C5,
    172          	0x00C9, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00FE, 0x00FB, 0x00DD, 0x00FD, 0x00D6, 0x00DC, 0x00F8, 0x00A3, 0x00D8, 0x20A7, 0x0192,
    173          	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00C1, 0x00CD, 0x00D3, 0x00DA, 0x00BF, 0x2310, 0x00AC, 0x00BD, 0x00BC, 0x00A1, 0x00AB, 0x00BB,
    174          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x255B, 0x2510,
    175          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
    176          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
    177          	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x221E, 0x03C6, 0x03B5, 0x2229,
    178          	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x207F, 0x00B2, 0x25A0, 0x00A0
    179          };
    180          
    181          #elif _CODE_PAGE == 862
    182          #define _TBLDEF 1
    183          static
    184          const WCHAR Tbl[] = {	/*  CP862(0x80-0xFF) to Unicode conversion table */
    185          	0x05D0, 0x05D1, 0x05D2, 0x05D3, 0x05D4, 0x05D5, 0x05D6, 0x05D7, 0x05D8, 0x05D9, 0x05DA, 0x05DB, 0x05DC, 0x05DD, 0x05DE, 0x05DF,
    186          	0x05E0, 0x05E1, 0x05E2, 0x05E3, 0x05E4, 0x05E5, 0x05E6, 0x05E7, 0x05E8, 0x05E9, 0x05EA, 0x00A2, 0x00A3, 0x00A5, 0x20A7, 0x0192,
    187          	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x2310, 0x00AC, 0x00BD, 0x00BC, 0x00A1, 0x00AB, 0x00BB,
    188          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x255B, 0x2510,
    189          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
    190          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
    191          	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x221E, 0x03C6, 0x03B5, 0x2229,
    192          	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x207F, 0x00B2, 0x25A0, 0x00A0
    193          };
    194          
    195          #elif _CODE_PAGE == 863
    196          #define _TBLDEF 1
    197          static
    198          const WCHAR Tbl[] = {	/*  CP863(0x80-0xFF) to Unicode conversion table */
    199          	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00C2, 0x00E0, 0x00B6, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x00EE, 0x00EC, 0x2017, 0x00C0,
    200          	0x00C9, 0x00C8, 0x00CA, 0x00F4, 0x00CB, 0x00CF, 0x00FB, 0x00F9, 0x00A4, 0x00D4, 0x00DC, 0x00A2, 0x00A3, 0x00D9, 0x00DB, 0x0192,
    201          	0x00A6, 0x00B4, 0x00F3, 0x00FA, 0x00A8, 0x00BB, 0x00B3, 0x00AF, 0x00CE, 0x3210, 0x00AC, 0x00BD, 0x00BC, 0x00BE, 0x00AB, 0x00BB,
    202          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x255B, 0x2510,
    203          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
    204          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
    205          	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x221E, 0x03C6, 0x03B5, 0x2219,
    206          	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x207F, 0x00B2, 0x25A0, 0x00A0
    207          };
    208          
    209          #elif _CODE_PAGE == 864
    210          #define _TBLDEF 1
    211          static
    212          const WCHAR Tbl[] = {	/*  CP864(0x80-0xFF) to Unicode conversion table */
    213          	0x00B0, 0x00B7, 0x2219, 0x221A, 0x2592, 0x2500, 0x2502, 0x253C, 0x2524, 0x252C, 0x251C, 0x2534, 0x2510, 0x250C, 0x2514, 0x2518,
    214          	0x03B2, 0x221E, 0x03C6, 0x00B1, 0x00BD, 0x00BC, 0x2248, 0x00AB, 0x00BB, 0xFEF7, 0xFEF8, 0x0000, 0x0000, 0xFEFB, 0xFEFC, 0x0000,
    215          	0x00A0, 0x00AD, 0xFE82, 0x00A3, 0x00A4, 0xFE84, 0x0000, 0x20AC, 0xFE8E, 0xFE8F, 0xFE95, 0xFE99, 0x060C, 0xFE9D, 0xFEA1, 0xFEA5,
    216          	0x0660, 0x0661, 0x0662, 0x0663, 0x0664, 0x0665, 0x0666, 0x0667, 0x0668, 0x0669, 0xFED1, 0x061B, 0xFEB1, 0xFEB5, 0xFEB9, 0x061F,
    217          	0x00A2, 0xFE80, 0xFE81, 0xFE83, 0xFE85, 0xFECA, 0xFE8B, 0xFE8D, 0xFE91, 0xFE93, 0xFE97, 0xFE9B, 0xFE9F, 0xFEA3, 0xFEA7, 0xFEA9,
    218          	0xFEAB, 0xFEAD, 0xFEAF, 0xFEB3, 0xFEB7, 0xFEBB, 0xFEBF, 0xFEC1, 0xFEC5, 0xFECB, 0xFECF, 0x00A6, 0x00AC, 0x00F7, 0x00D7, 0xFEC9,
    219          	0x0640, 0xFED3, 0xFED7, 0xFEDB, 0xFEDF, 0xFEE3, 0xFEE7, 0xFEEB, 0xFEED, 0xFEEF, 0xFEF3, 0xFEBD, 0xFECC, 0xFECE, 0xFECD, 0xFEE1,
    220          	0xFE7D, 0x0651, 0xFEE5, 0xFEE9, 0xFEEC, 0xFEF0, 0xFEF2, 0xFED0, 0xFED5, 0xFEF5, 0xFEF6, 0xFEDD, 0xFED9, 0xFEF1, 0x25A0, 0x0000
    221          };
    222          
    223          #elif _CODE_PAGE == 865
    224          #define _TBLDEF 1
    225          static
    226          const WCHAR Tbl[] = {	/*  CP865(0x80-0xFF) to Unicode conversion table */
    227          	0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E5, 0x00E7, 0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x00EE, 0x00EC, 0x00C4, 0x00C5,
    228          	0x00C5, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00F2, 0x00FB, 0x00F9, 0x00FF, 0x00D6, 0x00DC, 0x00F8, 0x00A3, 0x00D8, 0x20A7, 0x0192,
    229          	0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 0x00BF, 0x2310, 0x00AC, 0x00BD, 0x00BC, 0x00A1, 0x00AB, 0x00A4,
    230          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x2558, 0x2510,
    231          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
    232          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
    233          	0x03B1, 0x00DF, 0x0393, 0x03C0, 0x03A3, 0x03C3, 0x00B5, 0x03C4, 0x03A6, 0x0398, 0x03A9, 0x03B4, 0x221E, 0x03C6, 0x03B5, 0x2229,
    234          	0x2261, 0x00B1, 0x2265, 0x2264, 0x2320, 0x2321, 0x00F7, 0x2248, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x207F, 0x00B2, 0x25A0, 0x00A0
    235          };
    236          
    237          #elif _CODE_PAGE == 866
    238          #define _TBLDEF 1
    239          static
    240          const WCHAR Tbl[] = {	/*  CP866(0x80-0xFF) to Unicode conversion table */
    241          	0x0410, 0x0411, 0x0412, 0x0413, 0x0414, 0x0415, 0x0416, 0x0417, 0x0418, 0x0419, 0x041A, 0x041B, 0x041C, 0x041D, 0x041E, 0x041F,
    242          	0x0420, 0x0421, 0x0422, 0x0423, 0x0424, 0x0425, 0x0426, 0x0427, 0x0428, 0x0429, 0x042A, 0x042B, 0x042C, 0x042D, 0x042E, 0x042F,
    243          	0x0430, 0x0431, 0x0432, 0x0433, 0x0434, 0x0435, 0x0436, 0x0437, 0x0438, 0x0439, 0x043A, 0x043B, 0x043C, 0x043D, 0x043E, 0x043F,
    244          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x2561, 0x2562, 0x2556, 0x2555, 0x2563, 0x2551, 0x2557, 0x255D, 0x255C, 0x255B, 0x2510,
    245          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x255E, 0x255F, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x2567,
    246          	0x2568, 0x2564, 0x2565, 0x2559, 0x2558, 0x2552, 0x2553, 0x256B, 0x256A, 0x2518, 0x250C, 0x2588, 0x2584, 0x258C, 0x2590, 0x2580,
    247          	0x0440, 0x0441, 0x0442, 0x0443, 0x0444, 0x0445, 0x0446, 0x0447, 0x0448, 0x0449, 0x044A, 0x044B, 0x044C, 0x044D, 0x044E, 0x044F,
    248          	0x0401, 0x0451, 0x0404, 0x0454, 0x0407, 0x0457, 0x040E, 0x045E, 0x00B0, 0x2219, 0x00B7, 0x221A, 0x2116, 0x00A4, 0x25A0, 0x00A0
    249          };
    250          
    251          #elif _CODE_PAGE == 869
    252          #define _TBLDEF 1
    253          static
    254          const WCHAR Tbl[] = {	/*  CP869(0x80-0xFF) to Unicode conversion table */
    255          	0x00B7, 0x00B7, 0x00B7, 0x00B7, 0x00B7, 0x00B7, 0x0386, 0x00B7, 0x00B7, 0x00AC, 0x00A6, 0x2018, 0x2019, 0x0388, 0x2015, 0x0389,
    256          	0x038A, 0x03AA, 0x038C, 0x00B7, 0x00B7, 0x038E, 0x03AB, 0x00A9, 0x038F, 0x00B2, 0x00B3, 0x03AC, 0x00A3, 0x03AD, 0x03AE, 0x03AF,
    257          	0x03CA, 0x0390, 0x03CC, 0x03CD, 0x0391, 0x0392, 0x0393, 0x0394, 0x0395, 0x0396, 0x0397, 0x00BD, 0x0398, 0x0399, 0x00AB, 0x00BB,
    258          	0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x039A, 0x039B, 0x039C, 0x039D, 0x2563, 0x2551, 0x2557, 0x255D, 0x039E, 0x039F, 0x2510,
    259          	0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x0A30, 0x03A1, 0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x03A3,
    260          	0x03A4, 0x03A5, 0x03A6, 0x03A7, 0x03A8, 0x03A9, 0x03B1, 0x03B2, 0x03B3, 0x2518, 0x250C, 0x2588, 0x2584, 0x03B4, 0x03B5, 0x2580,
    261          	0x03B6, 0x03B7, 0x03B8, 0x03B9, 0x03BA, 0x03BB, 0x03BC, 0x03BD, 0x03BE, 0x03BF, 0x03C0, 0x03C1, 0x03C3, 0x03C2, 0x03C4, 0x0384,
    262          	0x00AD, 0x00B1, 0x03C5, 0x03C6, 0x03C7, 0x00A7, 0x03C8, 0x0385, 0x00B0, 0x00A8, 0x03C9, 0x03CB, 0x03B0, 0x03CE, 0x25A0, 0x00A0
    263          };
    264          
    265          #endif
    266          
    267          
    268          #if !_TBLDEF || !_USE_LFN
    269          #error This file is not needed at current configuration. Remove from the project.
    270          #endif
    271          
    272          
    273          
    274          

   \                                 In section .text, align 4, keep-with-next
    275          WCHAR ff_convert (	/* Converted character, Returns zero on error */
    276          	WCHAR	chr,	/* Character code to be converted */
    277          	UINT	dir		/* 0: Unicode to OEM code, 1: OEM code to Unicode */
    278          )
    279          {
    280          	WCHAR c;
    281          
    282          
    283          	if (chr < 0x80) {	/* ASCII */
   \                     ff_convert: (+1)
   \   00000000   0x0002             MOVS     R2,R0
   \   00000002   0x2A80             CMP      R2,#+128
   \   00000004   0xDA00             BGE      ??ff_convert_0
   \   00000006   0x4770             BX       LR
    284          		c = chr;
    285          
    286          	} else {
    287          		if (dir) {		/* OEM code to Unicode */
   \                     ??ff_convert_0: (+1)
   \   00000008   0xB410             PUSH     {R4}
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD00B             BEQ      ??ff_convert_1
    288          			c = (chr >= 0x100) ? 0 : Tbl[chr - 0x80];
   \   0000000E   0x2AFF             CMP      R2,#+255
   \   00000010   0xDD01             BLE      ??ff_convert_2
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xE01F             B        ??ff_convert_3
   \                     ??ff_convert_2: (+1)
   \   00000016   0xBF00             Nop      
   \   00000018   0x....             ADR.N    R0,Tbl
   \   0000001A   0x0051             LSLS     R1,R2,#+1
   \   0000001C   0x1840             ADDS     R0,R0,R1
   \   0000001E   0x21FF             MOVS     R1,#+255
   \   00000020   0x43C9             MVNS     R1,R1            ;; #-256
   \   00000022   0x5A40             LDRH     R0,[R0, R1]
   \   00000024   0xE017             B        ??ff_convert_3
    289          
    290          		} else {		/* Unicode to OEM code */
    291          			for (c = 0; c < 0x80; c++) {
   \                     ??ff_convert_1: (+1)
   \   00000026   0x2200             MOVS     R2,#+0
   \   00000028   0x....             ADR.N    R1,Tbl
    292          				if (chr == Tbl[c]) break;
   \                     ??ff_convert_4: (+1)
   \   0000002A   0x880C             LDRH     R4,[R1, #+0]
   \   0000002C   0x42A0             CMP      R0,R4
   \   0000002E   0xD010             BEQ      ??ff_convert_5
   \   00000030   0x1C52             ADDS     R2,R2,#+1
   \   00000032   0x884C             LDRH     R4,[R1, #+2]
   \   00000034   0x42A0             CMP      R0,R4
   \   00000036   0xD00C             BEQ      ??ff_convert_5
   \   00000038   0x1C52             ADDS     R2,R2,#+1
   \   0000003A   0x888C             LDRH     R4,[R1, #+4]
   \   0000003C   0x42A0             CMP      R0,R4
   \   0000003E   0xD008             BEQ      ??ff_convert_5
   \   00000040   0x1C52             ADDS     R2,R2,#+1
   \   00000042   0x88CC             LDRH     R4,[R1, #+6]
   \   00000044   0x42A0             CMP      R0,R4
   \   00000046   0xD004             BEQ      ??ff_convert_5
    293          			}
   \   00000048   0x1C52             ADDS     R2,R2,#+1
   \   0000004A   0x3108             ADDS     R1,R1,#+8
   \   0000004C   0xB292             UXTH     R2,R2
   \   0000004E   0x2A80             CMP      R2,#+128
   \   00000050   0xDBEB             BLT      ??ff_convert_4
    294          			c = (c + 0x80) & 0xFF;
   \                     ??ff_convert_5: (+1)
   \   00000052   0x3280             ADDS     R2,R2,#+128
   \   00000054   0xB2D0             UXTB     R0,R2
    295          		}
    296          	}
    297          
    298          	return c;
   \                     ??ff_convert_3: (+1)
   \   00000056   0xBC10             POP      {R4}
   \   00000058   0x4770             BX       LR               ;; return
    299          }
    300          
    301          
    302          
    303          

   \                                 In section .text, align 4, keep-with-next
    304          WCHAR ff_wtoupper (	/* Returns upper converted character */
    305          	WCHAR chr		/* Unicode character to be upper converted */
    306          )
    307          {
   \                     ff_wtoupper: (+1)
   \   00000000   0xB478             PUSH     {R3-R6}
    308          	static const WCHAR lower[] = {	/* Lower case characters to be converted */
    309          	/* Latin Supplement */			0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF,
    310          	/* Latin Extended-A */			0x101,0x103,0x105,0x107,0x109,0x10B,0x10D,0x10F,0x111,0x113,0x115,0x117,0x119,0x11B,0x11D,0x11F,0x121,0x123,0x125,0x127,0x129,0x12B,0x12D,0x12F,0x131,0x133,0x135,0x137,0x13A,0x13C,0x13E,0x140,0x142,0x144,0x146,0x148,0x14B,0x14D,0x14F,0x151,0x153,0x155,0x157,0x159,0x15B,0x15D,0x15F,0x161,0x163,0x165,0x167,0x169,0x16B,0x16D,0x16F,0x171,0x173,0x175,0x177,0x17A,0x17C,0x17E,
    311          	/* Latin Extended-B */			0x183,0x185,0x188,0x18C,0x192,0x199,0x1A1,0x1A3,0x1A8,0x1AD,0x1B0,0x1B4,0x1B6,0x1B9,0x1BD,0x1C6,0x1C9,0x1CC,0x1CE,0x1D0,0x1D2,0x1D4,0x1D6,0x1D8,0x1DA,0x1DC,0x1DD,0x1DF,0x1E1,0x1E3,0x1E5,0x1E7,0x1E9,0x1EB,0x1ED,0x1EF,0x1F3,0x1F5,0x1FB,0x1FD,0x1FF,0x201,0x203,0x205,0x207,0x209,0x20B,0x20D,0x20F,0x211,0x213,0x215,0x217,
    312          	/* Greek, Coptic */				0x3B1,0x3B2,0x3B3,0x3B4,0x3B5,0x3B6,0x3B7,0x3B8,0x3B9,0x3BA,0x3BB,0x3BC,0x3BD,0x3BE,0x3BF,0x3C0,0x3C1,0x3C3,0x3C4,0x3C5,0x3C6,0x3C7,0x3C8,0x3C9,0x3CA,0x3CB,0x3CC,0x3CD,0x3CE,0x3E3,0x3E5,0x3E7,0x3E9,0x3EB,
    313          	/* Cyrillic */					0x430,0x431,0x432,0x433,0x434,0x435,0x436,0x437,0x438,0x439,0x43A,0x43B,0x43C,0x43D,0x43E,0x43F,0x440,0x441,0x442,0x443,0x444,0x445,0x446,0x447,0x448,0x449,0x44A,0x44B,0x44C,0x44D,0x44E,0x44F,0x452,0x453,0x454,0x455,0x456,0x457,0x458,0x459,0x45A,0x45B,0x45C,0x45E,0x45F,0x461,0x463,0x465,0x467,0x469,0x46B,0x46D,0x46F,0x471,0x473,0x475,0x477,0x479,0x47B,0x47D,0x47F,0x481,0x491,0x493,0x495,0x497,0x499,0x49B,0x49D,0x49F,0x4A1,0x4A3,0x4A5,0x4A7,0x4A9,0x4AB,0x4AD,0x4AF,0x4B1,0x4B3,0x4B5,0x4B7,0x4B9,0x4BB,0x4BD,0x4BF,0x4C2,0x4C4,0x4C8,0x4D1,0x4D3,0x4D5,0x4D7,0x4D9,0x4DB,0x4DD,0x4DF,0x4E1,0x4E3,0x4E5,0x4E7,0x4E9,0x4EB,0x4ED,0x4EF,0x4F1,0x4F3,0x4F5,0x4F9,
    314          	/* Armenian */					0x561,0x562,0x563,0x564,0x565,0x566,0x567,0x568,0x569,0x56A,0x56B,0x56C,0x56D,0x56E,0x56F,0x570,0x571,0x572,0x573,0x574,0x575,0x576,0x577,0x578,0x579,0x57A,0x57B,0x57C,0x57D,0x57E,0x57F,0x580,0x581,0x582,0x583,0x584,0x585,0x586,
    315          	/* Latin Extended Additional */	0x1E01,0x1E03,0x1E05,0x1E07,0x1E09,0x1E0B,0x1E0D,0x1E0F,0x1E11,0x1E13,0x1E15,0x1E17,0x1E19,0x1E1B,0x1E1D,0x1E1F,0x1E21,0x1E23,0x1E25,0x1E27,0x1E29,0x1E2B,0x1E2D,0x1E2F,0x1E31,0x1E33,0x1E35,0x1E37,0x1E39,0x1E3B,0x1E3D,0x1E3F,0x1E41,0x1E43,0x1E45,0x1E47,0x1E49,0x1E4B,0x1E4D,0x1E4F,0x1E51,0x1E53,0x1E55,0x1E57,0x1E59,0x1E5B,0x1E5D,0x1E5F,0x1E61,0x1E63,0x1E65,0x1E67,0x1E69,0x1E6B,0x1E6D,0x1E6F,0x1E71,0x1E73,0x1E75,0x1E77,0x1E79,0x1E7B,0x1E7D,0x1E7F,0x1E81,0x1E83,0x1E85,0x1E87,0x1E89,0x1E8B,0x1E8D,0x1E8F,0x1E91,0x1E93,0x1E95,0x1E97,0x1E99,0x1E9B,0x1E9D,0x1E9F,0x1EA1,0x1EA3,0x1EA5,0x1EA7,0x1EA9,0x1EAB,0x1EAD,0x1EAF,0x1EB1,0x1EB3,0x1EB5,0x1EB7,0x1EB9,0x1EBB,0x1EBD,0x1EBF,0x1EC1,0x1EC3,0x1EC5,0x1EC7,0x1EC9,0x1ECB,0x1ECD,0x1ECF,0x1ED1,0x1ED3,0x1ED5,0x1ED7,0x1ED9,0x1EDB,0x1EDD,0x1EDF,0x1EE1,0x1EE3,0x1EE5,0x1EE7,0x1EE9,0x1EEB,0x1EED,0x1EEF,0x1EF1,0x1EF3,0x1EF5,0x1EF7,0x1EF9,
    316          	/* Number forms */				0x2170,0x2171,0x2172,0x2173,0x2174,0x2175,0x2176,0x2177,0x2178,0x2179,0x217A,0x217B,0x217C,0x217D,0x217E,0x217F,
    317          	/* Full-width */				0xFF41,0xFF42,0xFF43,0xFF44,0xFF45,0xFF46,0xFF47,0xFF48,0xFF49,0xFF4A,0xFF4B,0xFF4C,0xFF4D,0xFF4E,0xFF4F,0xFF50,0xFF51,0xFF52,0xFF53,0xFF54,0xFF55,0xFF56,0xFF57,0xFF58,0xFF59,0xFF5A
    318          	};
    319          	static const WCHAR upper[] = {	/* Upper case characters correspond to lower[] */
    320          									0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0x178,
    321          									0x100,0x102,0x104,0x106,0x108,0x10A,0x10C,0x10E,0x110,0x112,0x114,0x116,0x118,0x11A,0x11C,0x11E,0x120,0x122,0x124,0x126,0x128,0x12A,0x12C,0x12E,0x130,0x132,0x134,0x136,0x139,0x13B,0x13D,0x13F,0x141,0x143,0x145,0x147,0x14A,0x14C,0x14E,0x150,0x152,0x154,0x156,0x158,0x15A,0x15C,0x15E,0x160,0x162,0x164,0x166,0x168,0x16A,0x16C,0x16E,0x170,0x172,0x174,0x176,0x179,0x17B,0x17D,
    322          									0x182,0x184,0x187,0x18B,0x191,0x198,0x1A0,0x1A2,0x1A7,0x1AC,0x1AF,0x1B3,0x1B5,0x1B8,0x1BC,0x1C4,0x1C7,0x1CA,0x1CD,0x1CF,0x1D1,0x1D3,0x1D5,0x1D7,0x1D9,0x1DB,0x18E,0x1DE,0x1E0,0x1E2,0x1E4,0x1E6,0x1E8,0x1EA,0x1EC,0x1EE,0x1F1,0x1F4,0x1FA,0x1FC,0x1FE,0x200,0x202,0x204,0x206,0x208,0x20A,0x20C,0x20E,0x210,0x212,0x214,0x216,
    323          									0x391,0x392,0x393,0x394,0x395,0x396,0x397,0x398,0x399,0x39A,0x39B,0x39C,0x39D,0x39E,0x39F,0x3A0,0x3A1,0x3A3,0x3A4,0x3A5,0x3A6,0x3A7,0x3A8,0x3A9,0x3AA,0x3AB,0x38C,0x38E,0x38F,0x3E2,0x3E4,0x3E6,0x3E8,0x3EA,
    324          									0x410,0x411,0x412,0x413,0x414,0x415,0x416,0x417,0x418,0x419,0x41A,0x41B,0x41C,0x41D,0x41E,0x41F,0x420,0x421,0x422,0x423,0x424,0x425,0x426,0x427,0x428,0x429,0x42A,0x42B,0x42C,0x42D,0x42E,0x42F,0x402,0x403,0x404,0x405,0x406,0x407,0x408,0x409,0x40A,0x40B,0x40C,0x40E,0x40F,0x460,0x462,0x464,0x466,0x468,0x46A,0x46C,0x46E,0x470,0x472,0x474,0x476,0x478,0x47A,0x47C,0x47E,0x480,0x490,0x492,0x494,0x496,0x498,0x49A,0x49C,0x49E,0x4A0,0x4A2,0x4A4,0x4A6,0x4A8,0x4AA,0x4AC,0x4AE,0x4B0,0x4B2,0x4B4,0x4B6,0x4B8,0x4BA,0x4BC,0x4BE,0x4C1,0x4C3,0x5C7,0x4D0,0x4D2,0x4D4,0x4D6,0x4D8,0x4DA,0x4DC,0x4DE,0x4E0,0x4E2,0x4E4,0x4E6,0x4E8,0x4EA,0x4EC,0x4EE,0x4F0,0x4F2,0x4F4,0x4F8,
    325          									0x531,0x532,0x533,0x534,0x535,0x536,0x537,0x538,0x539,0x53A,0x53B,0x53C,0x53D,0x53E,0x53F,0x540,0x541,0x542,0x543,0x544,0x545,0x546,0x547,0x548,0x549,0x54A,0x54B,0x54C,0x54D,0x54E,0x54F,0x550,0x551,0x552,0x553,0x554,0x555,0x556,
    326          									0x1E00,0x1E02,0x1E04,0x1E06,0x1E08,0x1E0A,0x1E0C,0x1E0E,0x1E10,0x1E12,0x1E14,0x1E16,0x1E18,0x1E1A,0x1E1C,0x1E1E,0x1E20,0x1E22,0x1E24,0x1E26,0x1E28,0x1E2A,0x1E2C,0x1E2E,0x1E30,0x1E32,0x1E34,0x1E36,0x1E38,0x1E3A,0x1E3C,0x1E3E,0x1E40,0x1E42,0x1E44,0x1E46,0x1E48,0x1E4A,0x1E4C,0x1E4E,0x1E50,0x1E52,0x1E54,0x1E56,0x1E58,0x1E5A,0x1E5C,0x1E5E,0x1E60,0x1E62,0x1E64,0x1E66,0x1E68,0x1E6A,0x1E6C,0x1E6E,0x1E70,0x1E72,0x1E74,0x1E76,0x1E78,0x1E7A,0x1E7C,0x1E7E,0x1E80,0x1E82,0x1E84,0x1E86,0x1E88,0x1E8A,0x1E8C,0x1E8E,0x1E90,0x1E92,0x1E94,0x1E96,0x1E98,0x1E9A,0x1E9C,0x1E9E,0x1EA0,0x1EA2,0x1EA4,0x1EA6,0x1EA8,0x1EAA,0x1EAC,0x1EAE,0x1EB0,0x1EB2,0x1EB4,0x1EB6,0x1EB8,0x1EBA,0x1EBC,0x1EBE,0x1EC0,0x1EC2,0x1EC4,0x1EC6,0x1EC8,0x1ECA,0x1ECC,0x1ECE,0x1ED0,0x1ED2,0x1ED4,0x1ED6,0x1ED8,0x1EDA,0x1EDC,0x1EDE,0x1EE0,0x1EE2,0x1EE4,0x1EE6,0x1EE8,0x1EEA,0x1EEC,0x1EEE,0x1EF0,0x1EF2,0x1EF4,0x1EF6,0x1EF8,
    327          									0x2160,0x2161,0x2162,0x2163,0x2164,0x2165,0x2166,0x2167,0x2168,0x2169,0x216A,0x216B,0x216C,0x216D,0x216E,0x216F,
    328          									0xFF21,0xFF22,0xFF23,0xFF24,0xFF25,0xFF26,0xFF27,0xFF28,0xFF29,0xFF2A,0xFF2B,0xFF2C,0xFF2D,0xFF2E,0xFF2F,0xFF30,0xFF31,0xFF32,0xFF33,0xFF34,0xFF35,0xFF36,0xFF37,0xFF38,0xFF39,0xFF3A
    329          	};
    330          	UINT i, n, hi, li;
    331          
    332          
    333          	if (chr < 0x80) {	/* ASCII characters (acceleration) */
   \   00000002   0x2880             CMP      R0,#+128
   \   00000004   0xDA05             BGE      ??ff_wtoupper_0
    334          		if (chr >= 0x61 && chr <= 0x7A) chr -= 0x20;
   \   00000006   0x0001             MOVS     R1,R0
   \   00000008   0x3961             SUBS     R1,R1,#+97
   \   0000000A   0x291A             CMP      R1,#+26
   \   0000000C   0xD21B             BCS      ??ff_wtoupper_1
   \   0000000E   0x3820             SUBS     R0,R0,#+32
   \   00000010   0xE019             B        ??ff_wtoupper_1
    335          
    336          	} else {			/* Non ASCII characters (table search) */
    337          		n = 12; li = 0; hi = sizeof lower / sizeof lower[0];
   \                     ??ff_wtoupper_0: (+1)
   \   00000012   0x210C             MOVS     R1,#+12
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x23F7             MOVS     R3,#+247
   \   00000018   0x005B             LSLS     R3,R3,#+1        ;; #+494
    338          		do {
    339          			i = li + (hi - li) / 2;
   \                     ??ff_wtoupper_2: (+1)
   \   0000001A   0x1A9C             SUBS     R4,R3,R2
   \   0000001C   0x0864             LSRS     R4,R4,#+1
   \   0000001E   0x1914             ADDS     R4,R2,R4
    340          			if (chr == lower[i]) break;
   \   00000020   0x0065             LSLS     R5,R4,#+1
   \   00000022   0x9500             STR      R5,[SP, #+0]
   \   00000024   0x....             ADR.N    R5,`ff_wtoupper::lower`
   \   00000026   0x9E00             LDR      R6,[SP, #+0]
   \   00000028   0x5BAD             LDRH     R5,[R5, R6]
   \   0000002A   0x42A8             CMP      R0,R5
   \   0000002C   0xD007             BEQ      ??ff_wtoupper_3
    341          			if (chr > lower[i]) li = i; else hi = i;
   \   0000002E   0x4285             CMP      R5,R0
   \   00000030   0xD201             BCS      ??ff_wtoupper_4
   \   00000032   0x0022             MOVS     R2,R4
   \   00000034   0xE000             B        ??ff_wtoupper_5
   \                     ??ff_wtoupper_4: (+1)
   \   00000036   0x0023             MOVS     R3,R4
    342          		} while (--n);
   \                     ??ff_wtoupper_5: (+1)
   \   00000038   0x1E49             SUBS     R1,R1,#+1
   \   0000003A   0xD004             BEQ      ??ff_wtoupper_1
   \   0000003C   0xE7ED             B        ??ff_wtoupper_2
    343          		if (n) chr = upper[i];
   \                     ??ff_wtoupper_3: (+1)
   \   0000003E   0x2900             CMP      R1,#+0
   \   00000040   0xD001             BEQ      ??ff_wtoupper_1
   \   00000042   0x....             LDR      R0,??DataTable3
   \   00000044   0x5B80             LDRH     R0,[R0, R6]
    344          	}
    345          
    346          	return chr;
   \                     ??ff_wtoupper_1: (+1)
   \   00000046   0xB280             UXTH     R0,R0
   \   00000048   0xBC72             POP      {R1,R4-R6}
   \   0000004A   0x4770             BX       LR               ;; return
    347          }

   \                                 In section .text, align 4, keep-with-next
   \                     `ff_wtoupper::lower`:
   \   00000000   0x00E0 0x00E1      DC16 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236
   \              0x00E2 0x00E3
   \              0x00E4 0x00E5
   \              0x00E6 0x00E7
   \              0x00E8 0x00E9
   \              0x00EA 0x00EB
   \              0x00EC       
   \   0000001A   0x00ED 0x00EE      DC16 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250
   \              0x00EF 0x00F0
   \              0x00F1 0x00F2
   \              0x00F3 0x00F4
   \              0x00F5 0x00F6
   \              0x00F8 0x00F9
   \              0x00FA       
   \   00000034   0x00FB 0x00FC      DC16 251, 252, 253, 254, 255, 257, 259, 261, 263, 265, 267, 269, 271
   \              0x00FD 0x00FE
   \              0x00FF 0x0101
   \              0x0103 0x0105
   \              0x0107 0x0109
   \              0x010B 0x010D
   \              0x010F       
   \   0000004E   0x0111 0x0113      DC16 273, 275, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 297
   \              0x0115 0x0117
   \              0x0119 0x011B
   \              0x011D 0x011F
   \              0x0121 0x0123
   \              0x0125 0x0127
   \              0x0129       
   \   00000068   0x012B 0x012D      DC16 299, 301, 303, 305, 307, 309, 311, 314, 316, 318, 320, 322, 324
   \              0x012F 0x0131
   \              0x0133 0x0135
   \              0x0137 0x013A
   \              0x013C 0x013E
   \              0x0140 0x0142
   \              0x0144       
   \   00000082   0x0146 0x0148      DC16 326, 328, 331, 333, 335, 337, 339, 341, 343, 345, 347, 349, 351
   \              0x014B 0x014D
   \              0x014F 0x0151
   \              0x0153 0x0155
   \              0x0157 0x0159
   \              0x015B 0x015D
   \              0x015F       
   \   0000009C   0x0161 0x0163      DC16 353, 355, 357, 359, 361, 363, 365, 367, 369, 371, 373, 375, 378
   \              0x0165 0x0167
   \              0x0169 0x016B
   \              0x016D 0x016F
   \              0x0171 0x0173
   \              0x0175 0x0177
   \              0x017A       
   \   000000B6   0x017C 0x017E      DC16 380, 382, 387, 389, 392, 396, 402, 409, 417, 419, 424, 429, 432
   \              0x0183 0x0185
   \              0x0188 0x018C
   \              0x0192 0x0199
   \              0x01A1 0x01A3
   \              0x01A8 0x01AD
   \              0x01B0       
   \   000000D0   0x01B4 0x01B6      DC16 436, 438, 441, 445, 454, 457, 460, 462, 464, 466, 468, 470, 472
   \              0x01B9 0x01BD
   \              0x01C6 0x01C9
   \              0x01CC 0x01CE
   \              0x01D0 0x01D2
   \              0x01D4 0x01D6
   \              0x01D8       
   \   000000EA   0x01DA 0x01DC      DC16 474, 476, 477, 479, 481, 483, 485, 487, 489, 491, 493, 495, 499
   \              0x01DD 0x01DF
   \              0x01E1 0x01E3
   \              0x01E5 0x01E7
   \              0x01E9 0x01EB
   \              0x01ED 0x01EF
   \              0x01F3       
   \   00000104   0x01F5 0x01FB      DC16 501, 507, 509, 511, 513, 515, 517, 519, 521, 523, 525, 527, 529
   \              0x01FD 0x01FF
   \              0x0201 0x0203
   \              0x0205 0x0207
   \              0x0209 0x020B
   \              0x020D 0x020F
   \              0x0211       
   \   0000011E   0x0213 0x0215      DC16 531, 533, 535, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954
   \              0x0217 0x03B1
   \              0x03B2 0x03B3
   \              0x03B4 0x03B5
   \              0x03B6 0x03B7
   \              0x03B8 0x03B9
   \              0x03BA       
   \   00000138   0x03BB 0x03BC      DC16 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968
   \              0x03BD 0x03BE
   \              0x03BF 0x03C0
   \              0x03C1 0x03C3
   \              0x03C4 0x03C5
   \              0x03C6 0x03C7
   \              0x03C8       
   \   00000152   0x03C9 0x03CA      DC16 969, 970, 971, 972, 973, 974, 995, 997, 999, 1001, 1003, 1072
   \              0x03CB 0x03CC
   \              0x03CD 0x03CE
   \              0x03E3 0x03E5
   \              0x03E7 0x03E9
   \              0x03EB 0x0430
   \   0000016A   0x0431 0x0432      DC16 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083
   \              0x0433 0x0434
   \              0x0435 0x0436
   \              0x0437 0x0438
   \              0x0439 0x043A
   \              0x043B       
   \   00000180   0x043C 0x043D      DC16 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094
   \              0x043E 0x043F
   \              0x0440 0x0441
   \              0x0442 0x0443
   \              0x0444 0x0445
   \              0x0446       
   \   00000196   0x0447 0x0448      DC16 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1106, 1107
   \              0x0449 0x044A
   \              0x044B 0x044C
   \              0x044D 0x044E
   \              0x044F 0x0452
   \              0x0453       
   \   000001AC   0x0454 0x0455      DC16 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119
   \              0x0456 0x0457
   \              0x0458 0x0459
   \              0x045A 0x045B
   \              0x045C 0x045E
   \              0x045F       
   \   000001C2   0x0461 0x0463      DC16 1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 1137, 1139, 1141
   \              0x0465 0x0467
   \              0x0469 0x046B
   \              0x046D 0x046F
   \              0x0471 0x0473
   \              0x0475       
   \   000001D8   0x0477 0x0479      DC16 1143, 1145, 1147, 1149, 1151, 1153, 1169, 1171, 1173, 1175, 1177
   \              0x047B 0x047D
   \              0x047F 0x0481
   \              0x0491 0x0493
   \              0x0495 0x0497
   \              0x0499       
   \   000001EE   0x049B 0x049D      DC16 1179, 1181, 1183, 1185, 1187, 1189, 1191, 1193, 1195, 1197, 1199
   \              0x049F 0x04A1
   \              0x04A3 0x04A5
   \              0x04A7 0x04A9
   \              0x04AB 0x04AD
   \              0x04AF       
   \   00000204   0x04B1 0x04B3      DC16 1201, 1203, 1205, 1207, 1209, 1211, 1213, 1215, 1218, 1220, 1224
   \              0x04B5 0x04B7
   \              0x04B9 0x04BB
   \              0x04BD 0x04BF
   \              0x04C2 0x04C4
   \              0x04C8       
   \   0000021A   0x04D1 0x04D3      DC16 1233, 1235, 1237, 1239, 1241, 1243, 1245, 1247, 1249, 1251, 1253
   \              0x04D5 0x04D7
   \              0x04D9 0x04DB
   \              0x04DD 0x04DF
   \              0x04E1 0x04E3
   \              0x04E5       
   \   00000230   0x04E7 0x04E9      DC16 1255, 1257, 1259, 1261, 1263, 1265, 1267, 1269, 1273, 1377, 1378
   \              0x04EB 0x04ED
   \              0x04EF 0x04F1
   \              0x04F3 0x04F5
   \              0x04F9 0x0561
   \              0x0562       
   \   00000246   0x0563 0x0564      DC16 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389
   \              0x0565 0x0566
   \              0x0567 0x0568
   \              0x0569 0x056A
   \              0x056B 0x056C
   \              0x056D       
   \   0000025C   0x056E 0x056F      DC16 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400
   \              0x0570 0x0571
   \              0x0572 0x0573
   \              0x0574 0x0575
   \              0x0576 0x0577
   \              0x0578       
   \   00000272   0x0579 0x057A      DC16 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411
   \              0x057B 0x057C
   \              0x057D 0x057E
   \              0x057F 0x0580
   \              0x0581 0x0582
   \              0x0583       
   \   00000288   0x0584 0x0585      DC16 1412, 1413, 1414, 7681, 7683, 7685, 7687, 7689, 7691, 7693, 7695
   \              0x0586 0x1E01
   \              0x1E03 0x1E05
   \              0x1E07 0x1E09
   \              0x1E0B 0x1E0D
   \              0x1E0F       
   \   0000029E   0x1E11 0x1E13      DC16 7697, 7699, 7701, 7703, 7705, 7707, 7709, 7711, 7713, 7715, 7717
   \              0x1E15 0x1E17
   \              0x1E19 0x1E1B
   \              0x1E1D 0x1E1F
   \              0x1E21 0x1E23
   \              0x1E25       
   \   000002B4   0x1E27 0x1E29      DC16 7719, 7721, 7723, 7725, 7727, 7729, 7731, 7733, 7735, 7737, 7739
   \              0x1E2B 0x1E2D
   \              0x1E2F 0x1E31
   \              0x1E33 0x1E35
   \              0x1E37 0x1E39
   \              0x1E3B       
   \   000002CA   0x1E3D 0x1E3F      DC16 7741, 7743, 7745, 7747, 7749, 7751, 7753, 7755, 7757, 7759, 7761
   \              0x1E41 0x1E43
   \              0x1E45 0x1E47
   \              0x1E49 0x1E4B
   \              0x1E4D 0x1E4F
   \              0x1E51       
   \   000002E0   0x1E53 0x1E55      DC16 7763, 7765, 7767, 7769, 7771, 7773, 7775, 7777, 7779, 7781, 7783
   \              0x1E57 0x1E59
   \              0x1E5B 0x1E5D
   \              0x1E5F 0x1E61
   \              0x1E63 0x1E65
   \              0x1E67       
   \   000002F6   0x1E69 0x1E6B      DC16 7785, 7787, 7789, 7791, 7793, 7795, 7797, 7799, 7801, 7803, 7805
   \              0x1E6D 0x1E6F
   \              0x1E71 0x1E73
   \              0x1E75 0x1E77
   \              0x1E79 0x1E7B
   \              0x1E7D       
   \   0000030C   0x1E7F 0x1E81      DC16 7807, 7809, 7811, 7813, 7815, 7817, 7819, 7821, 7823, 7825, 7827
   \              0x1E83 0x1E85
   \              0x1E87 0x1E89
   \              0x1E8B 0x1E8D
   \              0x1E8F 0x1E91
   \              0x1E93       
   \   00000322   0x1E95 0x1E97      DC16 7829, 7831, 7833, 7835, 7837, 7839, 7841, 7843, 7845, 7847, 7849
   \              0x1E99 0x1E9B
   \              0x1E9D 0x1E9F
   \              0x1EA1 0x1EA3
   \              0x1EA5 0x1EA7
   \              0x1EA9       
   \   00000338   0x1EAB 0x1EAD      DC16 7851, 7853, 7855, 7857, 7859, 7861, 7863, 7865, 7867, 7869, 7871
   \              0x1EAF 0x1EB1
   \              0x1EB3 0x1EB5
   \              0x1EB7 0x1EB9
   \              0x1EBB 0x1EBD
   \              0x1EBF       
   \   0000034E   0x1EC1 0x1EC3      DC16 7873, 7875, 7877, 7879, 7881, 7883, 7885, 7887, 7889, 7891, 7893
   \              0x1EC5 0x1EC7
   \              0x1EC9 0x1ECB
   \              0x1ECD 0x1ECF
   \              0x1ED1 0x1ED3
   \              0x1ED5       
   \   00000364   0x1ED7 0x1ED9      DC16 7895, 7897, 7899, 7901, 7903, 7905, 7907, 7909, 7911, 7913, 7915
   \              0x1EDB 0x1EDD
   \              0x1EDF 0x1EE1
   \              0x1EE3 0x1EE5
   \              0x1EE7 0x1EE9
   \              0x1EEB       
   \   0000037A   0x1EED 0x1EEF      DC16 7917, 7919, 7921, 7923, 7925, 7927, 7929, 8560, 8561, 8562, 8563
   \              0x1EF1 0x1EF3
   \              0x1EF5 0x1EF7
   \              0x1EF9 0x2170
   \              0x2171 0x2172
   \              0x2173       
   \   00000390   0x2174 0x2175      DC16 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574
   \              0x2176 0x2177
   \              0x2178 0x2179
   \              0x217A 0x217B
   \              0x217C 0x217D
   \              0x217E       
   \   000003A6   0x217F 0xFF41      DC16 8575, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352
   \              0xFF42 0xFF43
   \              0xFF44 0xFF45
   \              0xFF46 0xFF47
   \              0xFF48       
   \   000003B8   0xFF49 0xFF4A      DC16 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361
   \              0xFF4B 0xFF4C
   \              0xFF4D 0xFF4E
   \              0xFF4F 0xFF50
   \              0xFF51       
   \   000003CA   0xFF52 0xFF53      DC16 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370
   \              0xFF54 0xFF55
   \              0xFF56 0xFF57
   \              0xFF58 0xFF59
   \              0xFF5A       

   \                                 In section .rodata, align 4, keep-with-next
   \                     `ff_wtoupper::upper`:
   \   00000000   0x00C0 0x00C1      DC16 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204
   \              0x00C2 0x00C3
   \              0x00C4 0x00C5
   \              0x00C6 0x00C7
   \              0x00C8 0x00C9
   \              0x00CA 0x00CB
   \              0x00CC       
   \   0000001A   0x00CD 0x00CE      DC16 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218
   \              0x00CF 0x00D0
   \              0x00D1 0x00D2
   \              0x00D3 0x00D4
   \              0x00D5 0x00D6
   \              0x00D8 0x00D9
   \              0x00DA       
   \   00000034   0x00DB 0x00DC      DC16 219, 220, 221, 222, 376, 256, 258, 260, 262, 264, 266, 268, 270
   \              0x00DD 0x00DE
   \              0x0178 0x0100
   \              0x0102 0x0104
   \              0x0106 0x0108
   \              0x010A 0x010C
   \              0x010E       
   \   0000004E   0x0110 0x0112      DC16 272, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294, 296
   \              0x0114 0x0116
   \              0x0118 0x011A
   \              0x011C 0x011E
   \              0x0120 0x0122
   \              0x0124 0x0126
   \              0x0128       
   \   00000068   0x012A 0x012C      DC16 298, 300, 302, 304, 306, 308, 310, 313, 315, 317, 319, 321, 323
   \              0x012E 0x0130
   \              0x0132 0x0134
   \              0x0136 0x0139
   \              0x013B 0x013D
   \              0x013F 0x0141
   \              0x0143       
   \   00000082   0x0145 0x0147      DC16 325, 327, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350
   \              0x014A 0x014C
   \              0x014E 0x0150
   \              0x0152 0x0154
   \              0x0156 0x0158
   \              0x015A 0x015C
   \              0x015E       
   \   0000009C   0x0160 0x0162      DC16 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 377
   \              0x0164 0x0166
   \              0x0168 0x016A
   \              0x016C 0x016E
   \              0x0170 0x0172
   \              0x0174 0x0176
   \              0x0179       
   \   000000B6   0x017B 0x017D      DC16 379, 381, 386, 388, 391, 395, 401, 408, 416, 418, 423, 428, 431
   \              0x0182 0x0184
   \              0x0187 0x018B
   \              0x0191 0x0198
   \              0x01A0 0x01A2
   \              0x01A7 0x01AC
   \              0x01AF       
   \   000000D0   0x01B3 0x01B5      DC16 435, 437, 440, 444, 452, 455, 458, 461, 463, 465, 467, 469, 471
   \              0x01B8 0x01BC
   \              0x01C4 0x01C7
   \              0x01CA 0x01CD
   \              0x01CF 0x01D1
   \              0x01D3 0x01D5
   \              0x01D7       
   \   000000EA   0x01D9 0x01DB      DC16 473, 475, 398, 478, 480, 482, 484, 486, 488, 490, 492, 494, 497
   \              0x018E 0x01DE
   \              0x01E0 0x01E2
   \              0x01E4 0x01E6
   \              0x01E8 0x01EA
   \              0x01EC 0x01EE
   \              0x01F1       
   \   00000104   0x01F4 0x01FA      DC16 500, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528
   \              0x01FC 0x01FE
   \              0x0200 0x0202
   \              0x0204 0x0206
   \              0x0208 0x020A
   \              0x020C 0x020E
   \              0x0210       
   \   0000011E   0x0212 0x0214      DC16 530, 532, 534, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922
   \              0x0216 0x0391
   \              0x0392 0x0393
   \              0x0394 0x0395
   \              0x0396 0x0397
   \              0x0398 0x0399
   \              0x039A       
   \   00000138   0x039B 0x039C      DC16 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936
   \              0x039D 0x039E
   \              0x039F 0x03A0
   \              0x03A1 0x03A3
   \              0x03A4 0x03A5
   \              0x03A6 0x03A7
   \              0x03A8       
   \   00000152   0x03A9 0x03AA      DC16 937, 938, 939, 908, 910, 911, 994, 996, 998, 1000, 1002, 1040
   \              0x03AB 0x038C
   \              0x038E 0x038F
   \              0x03E2 0x03E4
   \              0x03E6 0x03E8
   \              0x03EA 0x0410
   \   0000016A   0x0411 0x0412      DC16 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051
   \              0x0413 0x0414
   \              0x0415 0x0416
   \              0x0417 0x0418
   \              0x0419 0x041A
   \              0x041B       
   \   00000180   0x041C 0x041D      DC16 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062
   \              0x041E 0x041F
   \              0x0420 0x0421
   \              0x0422 0x0423
   \              0x0424 0x0425
   \              0x0426       
   \   00000196   0x0427 0x0428      DC16 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1026, 1027
   \              0x0429 0x042A
   \              0x042B 0x042C
   \              0x042D 0x042E
   \              0x042F 0x0402
   \              0x0403       
   \   000001AC   0x0404 0x0405      DC16 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039
   \              0x0406 0x0407
   \              0x0408 0x0409
   \              0x040A 0x040B
   \              0x040C 0x040E
   \              0x040F       
   \   000001C2   0x0460 0x0462      DC16 1120, 1122, 1124, 1126, 1128, 1130, 1132, 1134, 1136, 1138, 1140
   \              0x0464 0x0466
   \              0x0468 0x046A
   \              0x046C 0x046E
   \              0x0470 0x0472
   \              0x0474       
   \   000001D8   0x0476 0x0478      DC16 1142, 1144, 1146, 1148, 1150, 1152, 1168, 1170, 1172, 1174, 1176
   \              0x047A 0x047C
   \              0x047E 0x0480
   \              0x0490 0x0492
   \              0x0494 0x0496
   \              0x0498       
   \   000001EE   0x049A 0x049C      DC16 1178, 1180, 1182, 1184, 1186, 1188, 1190, 1192, 1194, 1196, 1198
   \              0x049E 0x04A0
   \              0x04A2 0x04A4
   \              0x04A6 0x04A8
   \              0x04AA 0x04AC
   \              0x04AE       
   \   00000204   0x04B0 0x04B2      DC16 1200, 1202, 1204, 1206, 1208, 1210, 1212, 1214, 1217, 1219, 1479
   \              0x04B4 0x04B6
   \              0x04B8 0x04BA
   \              0x04BC 0x04BE
   \              0x04C1 0x04C3
   \              0x05C7       
   \   0000021A   0x04D0 0x04D2      DC16 1232, 1234, 1236, 1238, 1240, 1242, 1244, 1246, 1248, 1250, 1252
   \              0x04D4 0x04D6
   \              0x04D8 0x04DA
   \              0x04DC 0x04DE
   \              0x04E0 0x04E2
   \              0x04E4       
   \   00000230   0x04E6 0x04E8      DC16 1254, 1256, 1258, 1260, 1262, 1264, 1266, 1268, 1272, 1329, 1330
   \              0x04EA 0x04EC
   \              0x04EE 0x04F0
   \              0x04F2 0x04F4
   \              0x04F8 0x0531
   \              0x0532       
   \   00000246   0x0533 0x0534      DC16 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341
   \              0x0535 0x0536
   \              0x0537 0x0538
   \              0x0539 0x053A
   \              0x053B 0x053C
   \              0x053D       
   \   0000025C   0x053E 0x053F      DC16 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352
   \              0x0540 0x0541
   \              0x0542 0x0543
   \              0x0544 0x0545
   \              0x0546 0x0547
   \              0x0548       
   \   00000272   0x0549 0x054A      DC16 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363
   \              0x054B 0x054C
   \              0x054D 0x054E
   \              0x054F 0x0550
   \              0x0551 0x0552
   \              0x0553       
   \   00000288   0x0554 0x0555      DC16 1364, 1365, 1366, 7680, 7682, 7684, 7686, 7688, 7690, 7692, 7694
   \              0x0556 0x1E00
   \              0x1E02 0x1E04
   \              0x1E06 0x1E08
   \              0x1E0A 0x1E0C
   \              0x1E0E       
   \   0000029E   0x1E10 0x1E12      DC16 7696, 7698, 7700, 7702, 7704, 7706, 7708, 7710, 7712, 7714, 7716
   \              0x1E14 0x1E16
   \              0x1E18 0x1E1A
   \              0x1E1C 0x1E1E
   \              0x1E20 0x1E22
   \              0x1E24       
   \   000002B4   0x1E26 0x1E28      DC16 7718, 7720, 7722, 7724, 7726, 7728, 7730, 7732, 7734, 7736, 7738
   \              0x1E2A 0x1E2C
   \              0x1E2E 0x1E30
   \              0x1E32 0x1E34
   \              0x1E36 0x1E38
   \              0x1E3A       
   \   000002CA   0x1E3C 0x1E3E      DC16 7740, 7742, 7744, 7746, 7748, 7750, 7752, 7754, 7756, 7758, 7760
   \              0x1E40 0x1E42
   \              0x1E44 0x1E46
   \              0x1E48 0x1E4A
   \              0x1E4C 0x1E4E
   \              0x1E50       
   \   000002E0   0x1E52 0x1E54      DC16 7762, 7764, 7766, 7768, 7770, 7772, 7774, 7776, 7778, 7780, 7782
   \              0x1E56 0x1E58
   \              0x1E5A 0x1E5C
   \              0x1E5E 0x1E60
   \              0x1E62 0x1E64
   \              0x1E66       
   \   000002F6   0x1E68 0x1E6A      DC16 7784, 7786, 7788, 7790, 7792, 7794, 7796, 7798, 7800, 7802, 7804
   \              0x1E6C 0x1E6E
   \              0x1E70 0x1E72
   \              0x1E74 0x1E76
   \              0x1E78 0x1E7A
   \              0x1E7C       
   \   0000030C   0x1E7E 0x1E80      DC16 7806, 7808, 7810, 7812, 7814, 7816, 7818, 7820, 7822, 7824, 7826
   \              0x1E82 0x1E84
   \              0x1E86 0x1E88
   \              0x1E8A 0x1E8C
   \              0x1E8E 0x1E90
   \              0x1E92       
   \   00000322   0x1E94 0x1E96      DC16 7828, 7830, 7832, 7834, 7836, 7838, 7840, 7842, 7844, 7846, 7848
   \              0x1E98 0x1E9A
   \              0x1E9C 0x1E9E
   \              0x1EA0 0x1EA2
   \              0x1EA4 0x1EA6
   \              0x1EA8       
   \   00000338   0x1EAA 0x1EAC      DC16 7850, 7852, 7854, 7856, 7858, 7860, 7862, 7864, 7866, 7868, 7870
   \              0x1EAE 0x1EB0
   \              0x1EB2 0x1EB4
   \              0x1EB6 0x1EB8
   \              0x1EBA 0x1EBC
   \              0x1EBE       
   \   0000034E   0x1EC0 0x1EC2      DC16 7872, 7874, 7876, 7878, 7880, 7882, 7884, 7886, 7888, 7890, 7892
   \              0x1EC4 0x1EC6
   \              0x1EC8 0x1ECA
   \              0x1ECC 0x1ECE
   \              0x1ED0 0x1ED2
   \              0x1ED4       
   \   00000364   0x1ED6 0x1ED8      DC16 7894, 7896, 7898, 7900, 7902, 7904, 7906, 7908, 7910, 7912, 7914
   \              0x1EDA 0x1EDC
   \              0x1EDE 0x1EE0
   \              0x1EE2 0x1EE4
   \              0x1EE6 0x1EE8
   \              0x1EEA       
   \   0000037A   0x1EEC 0x1EEE      DC16 7916, 7918, 7920, 7922, 7924, 7926, 7928, 8544, 8545, 8546, 8547
   \              0x1EF0 0x1EF2
   \              0x1EF4 0x1EF6
   \              0x1EF8 0x2160
   \              0x2161 0x2162
   \              0x2163       
   \   00000390   0x2164 0x2165      DC16 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558
   \              0x2166 0x2167
   \              0x2168 0x2169
   \              0x216A 0x216B
   \              0x216C 0x216D
   \              0x216E       
   \   000003A6   0x216F 0xFF21      DC16 8559, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320
   \              0xFF22 0xFF23
   \              0xFF24 0xFF25
   \              0xFF26 0xFF27
   \              0xFF28       
   \   000003B8   0xFF29 0xFF2A      DC16 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329
   \              0xFF2B 0xFF2C
   \              0xFF2D 0xFF2E
   \              0xFF2F 0xFF30
   \              0xFF31       
   \   000003CA   0xFF32 0xFF33      DC16 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338
   \              0xFF34 0xFF35
   \              0xFF36 0xFF37
   \              0xFF38 0xFF39
   \              0xFF3A       

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     `ff_wtoupper::upper`
    348          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   ff_convert
      16   ff_wtoupper


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
     256  Tbl
      90  ff_convert
      76  ff_wtoupper
     988  lower
     988  upper

 
   988 bytes in section .rodata
 1 414 bytes in section .text
 
 1 414 bytes of CODE  memory
   988 bytes of CONST memory

Errors: none
Warnings: none
