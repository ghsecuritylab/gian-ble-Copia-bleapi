###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       16/Mar/2018  12:16:15
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        .\mbed-os\features\frameworks\utest\source\utest_default_handlers.cpp
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --c++ --no_rtti --no_exceptions --guard_calls
#        --no_static_destruction -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DDEVICE_SERIAL=1 -DTARGET_CORTEX_M -DDEVICE_SPI=1 -DTARGET_LIKE_MBED
#        -DMBED_BUILD_TIMESTAMP=1521198946.13 -DARM_MATH_CM0 -DTARGET_RELEASE
#        -D__CORTEX_M0 -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0
#        -DTOOLCHAIN_object -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -f
#        .\BUILD\STEVAL_IDB007V1\iar\.includes_fc2e77952737cb4522ab0dffe8cfd8aa.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN
#        -I./mbed-os/features/frameworks
#        -I./mbed-os/features/frameworks/greentea-client
#        -I./mbed-os/features/frameworks/greentea-client/greentea-client
#        -I./mbed-os/features/frameworks/greentea-client/source
#        -I./mbed-os/features/frameworks/unity
#        -I./mbed-os/features/frameworks/unity/source
#        -I./mbed-os/features/frameworks/unity/unity
#        -I./mbed-os/features/frameworks/utest
#        -I./mbed-os/features/frameworks/utest/source
#        -I./mbed-os/features/frameworks/utest/utest
#        -I./mbed-os/features/mbedtls -I./mbed-os/features/mbedtls/importer
#        -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/features/netsocket
#        -I./mbed-os/features/netsocket/cellular
#        -I./mbed-os/features/netsocket/cellular/generic_modem_driver
#        -I./mbed-os/features/netsocket/cellular/utils
#        -I./mbed-os/features/storage -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\iar\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_default_handlers.d
#        -l
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_default_handlers.s.txt
#        -o
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_default_handlers.o
#        .\mbed-os\features\frameworks\utest\source\utest_default_handlers.cpp
#    Locale       =  Italian_Italy.1252
#    List file    =  
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_default_handlers.s.txt
#    Object file  =  
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_default_handlers.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia\mbed-os\features\frameworks\utest\source\utest_default_handlers.cpp
      1          /****************************************************************************
      2           * Copyright (c) 2015, ARM Limited, All Rights Reserved
      3           * SPDX-License-Identifier: Apache-2.0
      4           *
      5           * Licensed under the Apache License, Version 2.0 (the "License"); you may
      6           * not use this file except in compliance with the License.
      7           * You may obtain a copy of the License at
      8           *
      9           * http://www.apache.org/licenses/LICENSE-2.0
     10           *
     11           * Unless required by applicable law or agreed to in writing, software
     12           * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     13           * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     14           * See the License for the specific language governing permissions and
     15           * limitations under the License.
     16           ****************************************************************************
     17           */
     18          
     19          #include "utest/utest_default_handlers.h"

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::function_context<void (*)(void *), void> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x6848             LDR      R0,[R1, #+4]
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x4788             BLX      R1
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD001             BEQ      ??function_move_0
   \   00000004   0xC90C             LDM      R1!,{R2,R3}
   \   00000006   0xC00C             STM      R0!,{R2,R3}
   \                     ??function_move_0: (+1)
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4
   \   __interwork __softfp void mbed::callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8callbackIvvvEENS_8CallbackIFT1_vEEEPFS2_PT_EPT0_: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xC078             STM      R0!,{R3-R6}
   \   0000000C   0x3810             SUBS     R0,R0,#+16
   \   0000000E   0xD001             BEQ      ??callback_0
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x6042             STR      R2,[R0, #+4]
   \                     ??callback_0: (+1)
   \   00000014   0x4901             LDR      R1,??callback_1
   \   00000016   0x60C1             STR      R1,[R0, #+12]
   \   00000018   0xBC70             POP      {R4-R6}
   \   0000001A   0x4770             BX       LR               ;; return
   \                     ??callback_1:
   \   0000001C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops

   \                                 In section .text, align 4
   \   __interwork __softfp GreenteaSerial *SingletonPtr<GreenteaSerial>::operator->()
   \                     _ZN12SingletonPtrI14GreenteaSerialEptEv: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x6820             LDR      R0,[R4, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD110             BNE      `??operator->_0`
   \   0000000A   0x4D0E             LDR      R5,`??operator->_1`
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x43C9             MVNS     R1,R1            ;; #-1
   \   00000010   0x6828             LDR      R0,[R5, #+0]
   \   00000012   0x.... 0x....      BL       osMutexAcquire
   \   00000016   0x6820             LDR      R0,[R4, #+0]
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD104             BNE      `??operator->_2`
   \   0000001C   0x1D20             ADDS     R0,R4,#+4
   \   0000001E   0xD001             BEQ      `??operator->_3`
   \   00000020   0x.... 0x....      BL       _ZN14GreenteaSerialC1Ev
   \                     `??operator->_3`: (+1)
   \   00000024   0x6020             STR      R0,[R4, #+0]
   \                     `??operator->_2`: (+1)
   \   00000026   0x6828             LDR      R0,[R5, #+0]
   \   00000028   0x.... 0x....      BL       osMutexRelease
   \                     `??operator->_0`: (+1)
   \   0000002C   0x6820             LDR      R0,[R4, #+0]
   \   0000002E   0x1D21             ADDS     R1,R4,#+4
   \   00000030   0x4288             CMP      R0,R1
   \   00000032   0xD004             BEQ      `??operator->_4`
   \   00000034   0x225D             MOVS     R2,#+93
   \   00000036   0x4904             LDR      R1,`??operator->_1`+0x4
   \   00000038   0x4804             LDR      R0,`??operator->_1`+0x8
   \   0000003A   0x.... 0x....      BL       mbed_assert_internal
   \                     `??operator->_4`: (+1)
   \   0000003E   0x6820             LDR      R0,[R4, #+0]
   \   00000040   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   \   00000042   0xBF00             Nop      
   \                     `??operator->_1`:
   \   00000044   0x........         DC32     singleton_mutex_id
   \   00000048   0x........         DC32     _ZZN12SingletonPtrI14GreenteaSerialE3getEvEs_0
   \   0000004C   0x........         DC32     _ZZN12SingletonPtrI14GreenteaSerialE3getEvEs
     20          #include "utest/utest_case.h"
     21          #include "utest/utest_stack_trace.h"
     22          #include "utest/utest_serial.h"
     23          
     24          using namespace utest::v1;
     25          
     26          static void test_failure_handler(const failure_t failure);
     27          

   \                                 In section .rodata, align 4, keep-with-next
     28          const handlers_t utest::v1::verbose_continue_handlers = {
   \                     _ZN5utest2v125verbose_continue_handlersE:
   \   00000000   0x........         DC32 _ZN5utest2v126verbose_test_setup_handlerEj
   \   00000004   0x........         DC32 _ZN5utest2v129verbose_test_teardown_handlerEjjNS0_9failure_tE
   \   00000008   0x........         DC32 _Z20test_failure_handlerN5utest2v19failure_tE
   \   0000000C   0x........         DC32 _ZN5utest2v126verbose_case_setup_handlerEPKNS0_4CaseEj
   \   00000010   0x........         DC32 _ZN5utest2v129verbose_case_teardown_handlerEPKNS0_4CaseEjjNS0_9failure_tE
   \   00000014   0x........         DC32 _ZN5utest2v128verbose_case_failure_handlerEPKNS0_4CaseENS0_9failure_tE
     29              verbose_test_setup_handler,
     30              verbose_test_teardown_handler,
     31              test_failure_handler,
     32              verbose_case_setup_handler,
     33              verbose_case_teardown_handler,
     34              verbose_case_failure_handler
     35          };
     36          

   \                                 In section .rodata, align 4, keep-with-next
     37          const handlers_t& utest::v1::default_handlers = greentea_abort_handlers;
   \                     _ZN5utest2v116default_handlersE:
   \   00000000   0x........         DC32 _ZN5utest2v123greentea_abort_handlersE
     38          
     39          // --- SPECIAL HANDLERS ---

   \                                 In section .text, align 4, keep-with-next
     40          static void test_failure_handler(const failure_t failure) {
   \                     _Z20test_failure_handlerN5utest2v19failure_tE: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     41              UTEST_LOG_FUNCTION();
     42              if (failure.location == LOCATION_TEST_SETUP || failure.location == LOCATION_TEST_TEARDOWN) {
   \   00000002   0x7881             LDRB     R1,[R0, #+2]
   \   00000004   0x2901             CMP      R1,#+1
   \   00000006   0xD001             BEQ      ??test_failure_handler_0
   \   00000008   0x2902             CMP      R1,#+2
   \   0000000A   0xD119             BNE      ??test_failure_handler_1
     43                  verbose_test_failure_handler(failure);
   \                     ??test_failure_handler_0: (+1)
   \   0000000C   0x8804             LDRH     R4,[R0, #+0]
   \   0000000E   0x0008             MOVS     R0,R1
   \   00000010   0x.... 0x....      BL       _ZN5utest2v19stringifyENS0_10location_tE
   \   00000014   0x0006             MOVS     R6,R0
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0x.... 0x....      BL       _ZN5utest2v19stringifyENS0_16failure_reason_tE
   \   0000001C   0x0005             MOVS     R5,R0
   \   0000001E   0x....             LDR      R4,??DataTable17
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   00000026   0x0033             MOVS     R3,R6
   \   00000028   0x002A             MOVS     R2,R5
   \   0000002A   0xBF00             Nop      
   \   0000002C   0x....             ADR.N    R1,?_6
   \   0000002E   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     44                  utest_printf("{{failure}}\n{{end}}\n");
   \   00000032   0x0020             MOVS     R0,R4
   \   00000034   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   00000038   0x....             ADR.N    R1,?_0
   \   0000003A   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     45                  while(1) ;
   \                     ??test_failure_handler_2: (+1)
   \   0000003E   0xE7FE             B        ??test_failure_handler_2
     46              }
     47          }
   \                     ??test_failure_handler_1: (+1)
   \   00000040   0xBD70             POP      {R4-R6,PC}       ;; return
     48          
     49          // --- VERBOSE TEST HANDLERS ---

   \                                 In section .text, align 4, keep-with-next
     50          utest::v1::status_t utest::v1::verbose_test_setup_handler(const size_t number_of_cases)
     51          {
   \                     _ZN5utest2v126verbose_test_setup_handlerEj: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     52              UTEST_LOG_FUNCTION();
     53              utest_printf(">>> Running %u test cases...\n", number_of_cases);
   \   00000004   0x....             LDR      R0,??DataTable17
   \   00000006   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   0000000A   0x0022             MOVS     R2,R4
   \   0000000C   0x....             ADR.N    R1,?_1
   \   0000000E   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     54              return STATUS_CONTINUE;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
     55          }
     56          

   \                                 In section .text, align 4, keep-with-next
     57          void utest::v1::verbose_test_teardown_handler(const size_t passed, const size_t failed, const failure_t failure)
     58          {
   \                     _ZN5utest2v129verbose_test_teardown_handlerEjjNS0_9failure_tE: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0007             MOVS     R7,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0016             MOVS     R6,R2
     59              UTEST_LOG_FUNCTION();
     60              utest_printf("\n>>> Test cases: %u passed, %u failed", passed, failed);
   \   00000008   0x....             LDR      R5,??DataTable17
   \   0000000A   0x0028             MOVS     R0,R5
   \   0000000C   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   00000010   0x0023             MOVS     R3,R4
   \   00000012   0x003A             MOVS     R2,R7
   \   00000014   0x....             ADR.N    R1,?_2
   \   00000016   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     61              if (failure.reason == REASON_NONE) {
   \   0000001A   0x8830             LDRH     R0,[R6, #+0]
   \   0000001C   0x0001             MOVS     R1,R0
   \   0000001E   0xD106             BNE      ??verbose_test_teardown_handler_0
     62                  utest_printf("\n");
   \   00000020   0x0028             MOVS     R0,R5
   \   00000022   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   00000026   0x....             ADR      R1,??DataTable17_1  ;; "\n"
   \   00000028   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
   \   0000002C   0xE009             B        ??verbose_test_teardown_handler_1
     63              } else  {
     64                  utest_printf(" with reason '%s'\n", stringify(failure.reason));
   \                     ??verbose_test_teardown_handler_0: (+1)
   \   0000002E   0x.... 0x....      BL       _ZN5utest2v19stringifyENS0_16failure_reason_tE
   \   00000032   0x0006             MOVS     R6,R0
   \   00000034   0x0028             MOVS     R0,R5
   \   00000036   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   0000003A   0x0032             MOVS     R2,R6
   \   0000003C   0x....             ADR.N    R1,?_4
   \   0000003E   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     65              }
     66              if (failed) utest_printf(">>> TESTS FAILED!\n");
   \                     ??verbose_test_teardown_handler_1: (+1)
   \   00000042   0x2C00             CMP      R4,#+0
   \   00000044   0xD005             BEQ      ??verbose_test_teardown_handler_2
   \   00000046   0x0028             MOVS     R0,R5
   \   00000048   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   0000004C   0x....             ADR.N    R1,?_5
   \   0000004E   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     67          }
   \                     ??verbose_test_teardown_handler_2: (+1)
   \   00000052   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
     68          

   \                                 In section .text, align 4, keep-with-next
     69          void utest::v1::verbose_test_failure_handler(const failure_t failure)
     70          {
   \                     _ZN5utest2v128verbose_test_failure_handlerENS0_9failure_tE: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     71              utest_printf(">>> failure with reason '%s' during '%s'\n", stringify(failure.reason), stringify(failure.location));
   \   00000004   0x78A0             LDRB     R0,[R4, #+2]
   \   00000006   0x.... 0x....      BL       _ZN5utest2v19stringifyENS0_10location_tE
   \   0000000A   0x0005             MOVS     R5,R0
   \   0000000C   0x8820             LDRH     R0,[R4, #+0]
   \   0000000E   0x.... 0x....      BL       _ZN5utest2v19stringifyENS0_16failure_reason_tE
   \   00000012   0x0004             MOVS     R4,R0
   \   00000014   0x....             LDR      R0,??DataTable17
   \   00000016   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   0000001A   0x002B             MOVS     R3,R5
   \   0000001C   0x0022             MOVS     R2,R4
   \   0000001E   0xBF00             Nop      
   \   00000020   0x....             ADR.N    R1,?_6
   \   00000022   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     72             
     73          }
   \   00000026   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     74          
     75          // --- VERBOSE CASE HANDLERS ---

   \                                 In section .text, align 4, keep-with-next
     76          utest::v1::status_t utest::v1::verbose_case_setup_handler(const Case *const source, const size_t index_of_case)
     77          {
   \                     _ZN5utest2v126verbose_case_setup_handlerEPKNS0_4CaseEj: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
     78              UTEST_LOG_FUNCTION();
     79              utest_printf("\n>>> Running case #%u: '%s'...\n", index_of_case + 1, source->get_description());
   \   00000004   0x.... 0x....      BL       _ZNK5utest2v14Case15get_descriptionEv
   \   00000008   0x0005             MOVS     R5,R0
   \   0000000A   0x....             LDR      R0,??DataTable17
   \   0000000C   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   00000010   0x002B             MOVS     R3,R5
   \   00000012   0x1C62             ADDS     R2,R4,#+1
   \   00000014   0x....             ADR.N    R1,?_7
   \   00000016   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     80              return STATUS_CONTINUE;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000001E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     81          }
     82          

   \                                 In section .text, align 4, keep-with-next
     83          utest::v1::status_t utest::v1::verbose_case_teardown_handler(const Case *const source, const size_t passed, const size_t failed, const failure_t failure)
     84          {
   \                     _ZN5utest2v129verbose_case_teardown_handlerEPKNS0_4CaseEjjNS0_9failure_tE: (+1)
   \   00000000   0xB5F2             PUSH     {R1,R4-R7,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0017             MOVS     R7,R2
   \   00000006   0x001E             MOVS     R6,R3
     85              UTEST_LOG_FUNCTION();
     86              utest_printf(">>> '%s': %u passed, %u failed", source->get_description(), passed, failed);
   \   00000008   0x.... 0x....      BL       _ZNK5utest2v14Case15get_descriptionEv
   \   0000000C   0x0005             MOVS     R5,R0
   \   0000000E   0x....             LDR      R4,??DataTable17
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   00000016   0x9700             STR      R7,[SP, #+0]
   \   00000018   0x9B02             LDR      R3,[SP, #+8]
   \   0000001A   0x002A             MOVS     R2,R5
   \   0000001C   0x....             ADR.N    R1,?_8
   \   0000001E   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     87              if (failure.reason == REASON_NONE) {
   \   00000022   0x8830             LDRH     R0,[R6, #+0]
   \   00000024   0x0001             MOVS     R1,R0
   \   00000026   0xD106             BNE      ??verbose_case_teardown_handler_0
     88                  utest_printf("\n");
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   0000002E   0x....             ADR      R1,??DataTable17_1  ;; "\n"
   \   00000030   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
   \   00000034   0xE009             B        ??verbose_case_teardown_handler_1
     89              } else  {
     90                  utest_printf(" with reason '%s'\n", stringify(failure.reason));
   \                     ??verbose_case_teardown_handler_0: (+1)
   \   00000036   0x.... 0x....      BL       _ZN5utest2v19stringifyENS0_16failure_reason_tE
   \   0000003A   0x0005             MOVS     R5,R0
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   00000042   0x002A             MOVS     R2,R5
   \   00000044   0x....             ADR.N    R1,?_4
   \   00000046   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
     91              }
     92              return STATUS_CONTINUE;
   \                     ??verbose_case_teardown_handler_1: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x43C0             MVNS     R0,R0            ;; #-1
   \   0000004E   0xB003             ADD      SP,SP,#+12
   \   00000050   0xBDF0             POP      {R4-R7,PC}       ;; return
     93          }
     94          

   \                                 In section .text, align 4, keep-with-next
     95          utest::v1::status_t utest::v1::verbose_case_failure_handler(const Case *const /*source*/, const failure_t failure)
     96          {
   \                     _ZN5utest2v128verbose_case_failure_handlerEPKNS0_4CaseENS0_9failure_tE: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x000C             MOVS     R4,R1
     97              UTEST_LOG_FUNCTION();
     98              if (!(failure.reason & REASON_ASSERTION)) {
   \   00000004   0x8825             LDRH     R5,[R4, #+0]
   \   00000006   0x06E8             LSLS     R0,R5,#+27
   \   00000008   0xD40F             BMI      ??verbose_case_failure_handler_0
     99                  verbose_test_failure_handler(failure);
   \   0000000A   0x78A0             LDRB     R0,[R4, #+2]
   \   0000000C   0x.... 0x....      BL       _ZN5utest2v19stringifyENS0_10location_tE
   \   00000010   0x0006             MOVS     R6,R0
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0x.... 0x....      BL       _ZN5utest2v19stringifyENS0_16failure_reason_tE
   \   00000018   0x0005             MOVS     R5,R0
   \   0000001A   0x....             LDR      R0,??DataTable17
   \   0000001C   0x.... 0x....      BL       _ZN12SingletonPtrI14GreenteaSerialEptEv
   \   00000020   0x0033             MOVS     R3,R6
   \   00000022   0x002A             MOVS     R2,R5
   \   00000024   0x....             ADR.N    R1,?_6
   \   00000026   0x.... 0x....      BL       _ZN4mbed9RawSerial6printfEPKcz
    100              }
    101              if (failure.reason & (REASON_TEST_TEARDOWN | REASON_CASE_TEARDOWN)) return STATUS_ABORT;
   \                     ??verbose_case_failure_handler_0: (+1)
   \   0000002A   0x8820             LDRH     R0,[R4, #+0]
   \   0000002C   0x2190             MOVS     R1,#+144
   \   0000002E   0x0089             LSLS     R1,R1,#+2        ;; #+576
   \   00000030   0x4208             TST      R0,R1
   \   00000032   0xD001             BEQ      ??verbose_case_failure_handler_1
   \   00000034   0x2002             MOVS     R0,#+2
   \   00000036   0xE004             B        ??verbose_case_failure_handler_2
    102              if (failure.reason & REASON_IGNORE) return STATUS_IGNORE;
   \                     ??verbose_case_failure_handler_1: (+1)
   \   00000038   0x0400             LSLS     R0,R0,#+16
   \   0000003A   0xD501             BPL      ??verbose_case_failure_handler_3
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xE000             B        ??verbose_case_failure_handler_2
    103              return STATUS_CONTINUE;
   \                     ??verbose_case_failure_handler_3: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \                     ??verbose_case_failure_handler_2: (+1)
   \   00000042   0x43C0             MVNS     R0,R0            ;; #-1
   \   00000044   0xBD70             POP      {R4-R6,PC}       ;; return
    104          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     greentea_serial

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x0A 0x00          DC8      "\n",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x7B 0x7B          DC8 "{{failure}}\012{{end}}\012"
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x75 0x72    
   \              0x65 0x7D    
   \              0x7D 0x0A    
   \              0x7B 0x7B    
   \              0x65 0x6E    
   \              0x64 0x7D    
   \              0x7D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x3E 0x3E          DC8 ">>> Running %u test cases...\012"
   \              0x3E 0x20    
   \              0x52 0x75    
   \              0x6E 0x6E    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x25 0x75    
   \              0x20 0x74    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x63 0x61    
   \              0x73 0x65    
   \              0x73 0x2E    
   \              0x2E 0x2E    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x0A 0x3E          DC8 "\012>>> Test cases: %u passed, %u failed"
   \              0x3E 0x3E    
   \              0x20 0x54    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x63 0x61    
   \              0x73 0x65    
   \              0x73 0x3A    
   \              0x20 0x25    
   \              0x75 0x20    
   \              0x70 0x61    
   \              0x73 0x73    
   \              0x65 0x64    
   \              0x2C 0x20    
   \              0x25 0x75    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x20 0x77          DC8 " with reason '%s'\012"
   \              0x69 0x74    
   \              0x68 0x20    
   \              0x72 0x65    
   \              0x61 0x73    
   \              0x6F 0x6E    
   \              0x20 0x27    
   \              0x25 0x73    
   \              0x27 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x3E 0x3E          DC8 ">>> TESTS FAILED!\012"
   \              0x3E 0x20    
   \              0x54 0x45    
   \              0x53 0x54    
   \              0x53 0x20    
   \              0x46 0x41    
   \              0x49 0x4C    
   \              0x45 0x44    
   \              0x21 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x3E 0x3E          DC8 ">>> failure with reason '%s' during '%s'\012"
   \              0x3E 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x75 0x72    
   \              0x65 0x20    
   \              0x77 0x69    
   \              0x74 0x68    
   \              0x20 0x72    
   \              0x65 0x61    
   \              0x73 0x6F    
   \              0x6E 0x20    
   \              0x27 0x25    
   \              0x73 0x27    
   \              0x20 0x64    
   \              0x75 0x72    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x27 0x25    
   \              0x73 0x27    
   \              0x0A 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x0A 0x3E          DC8 "\012>>> Running case #%u: '%s'...\012"
   \              0x3E 0x3E    
   \              0x20 0x52    
   \              0x75 0x6E    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x20 0x63    
   \              0x61 0x73    
   \              0x65 0x20    
   \              0x23 0x25    
   \              0x75 0x3A    
   \              0x20 0x27    
   \              0x25 0x73    
   \              0x27 0x2E    
   \              0x2E 0x2E    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x3E 0x3E          DC8 ">>> '%s': %u passed, %u failed"
   \              0x3E 0x20    
   \              0x27 0x25    
   \              0x73 0x27    
   \              0x3A 0x20    
   \              0x25 0x75    
   \              0x20 0x70    
   \              0x61 0x73    
   \              0x73 0x65    
   \              0x64 0x2C    
   \              0x20 0x25    
   \              0x75 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   0000001F   0x00               DC8 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_3:
   \   00000000   0x0A 0x00          DC8 "\012"

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   SingletonPtr<GreenteaSerial>::operator->()
        16   -> GreenteaSerial::GreenteaSerial()
        16   -> mbed_assert_internal
        16   -> osMutexAcquire
        16   -> osMutexRelease
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
         8   -- Indirect call
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       0   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      12   mbed::callback<>(void (*)(void *), void *)
      16   test_failure_handler(utest::v1::failure_t)
        16   -> SingletonPtr<GreenteaSerial>::operator->()
        16   -> mbed::RawSerial::printf(char const *, ...)
        16   -> utest::v1::stringify(utest::v1::failure_reason_t)
        16   -> utest::v1::stringify(utest::v1::location_t)
      16   utest::v1::verbose_case_failure_handler(utest::v1::Case const *, utest::v1::failure_t)
        16   -> SingletonPtr<GreenteaSerial>::operator->()
        16   -> mbed::RawSerial::printf(char const *, ...)
        16   -> utest::v1::stringify(utest::v1::failure_reason_t)
        16   -> utest::v1::stringify(utest::v1::location_t)
      16   utest::v1::verbose_case_setup_handler(utest::v1::Case const *, std::size_t)
        16   -> SingletonPtr<GreenteaSerial>::operator->()
        16   -> mbed::RawSerial::printf(char const *, ...)
        16   -> utest::v1::Case::get_description() const
      32   utest::v1::verbose_case_teardown_handler(utest::v1::Case const *, std::size_t, std::size_t, utest::v1::failure_t)
        32   -> SingletonPtr<GreenteaSerial>::operator->()
        32   -> mbed::RawSerial::printf(char const *, ...)
        32   -> utest::v1::Case::get_description() const
        32   -> utest::v1::stringify(utest::v1::failure_reason_t)
      16   utest::v1::verbose_test_failure_handler(utest::v1::failure_t)
        16   -> SingletonPtr<GreenteaSerial>::operator->()
        16   -> mbed::RawSerial::printf(char const *, ...)
        16   -> utest::v1::stringify(utest::v1::failure_reason_t)
        16   -> utest::v1::stringify(utest::v1::location_t)
       8   utest::v1::verbose_test_setup_handler(std::size_t)
         8   -> SingletonPtr<GreenteaSerial>::operator->()
         8   -> mbed::RawSerial::printf(char const *, ...)
      24   utest::v1::verbose_test_teardown_handler(std::size_t, std::size_t, utest::v1::failure_t)
        24   -> SingletonPtr<GreenteaSerial>::operator->()
        24   -> mbed::RawSerial::printf(char const *, ...)
        24   -> utest::v1::stringify(utest::v1::failure_reason_t)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable17
       4  ??DataTable17_1
      24  ?_0
      32  ?_1
      40  ?_2
       2  ?_3
      20  ?_4
      20  ?_5
      44  ?_6
      32  ?_7
      32  ?_8
      80  SingletonPtr<GreenteaSerial>::operator->()
      12  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
      10  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      32  mbed::callback<>(void (*)(void *), void *)
      12  ops
      66  test_failure_handler(utest::v1::failure_t)
       4  utest::v1::default_handlers
      70  utest::v1::verbose_case_failure_handler(utest::v1::Case const *, utest::v1::failure_t)
      32  utest::v1::verbose_case_setup_handler(utest::v1::Case const *, std::size_t)
      82  utest::v1::verbose_case_teardown_handler(utest::v1::Case const *, std::size_t, std::size_t, utest::v1::failure_t)
      24  utest::v1::verbose_continue_handlers
      40  utest::v1::verbose_test_failure_handler(utest::v1::failure_t)
      24  utest::v1::verbose_test_setup_handler(std::size_t)
      84  utest::v1::verbose_test_teardown_handler(std::size_t, std::size_t, utest::v1::failure_t)
     388  -- Other

 
 430 bytes in section .rodata
 786 bytes in section .text
 
 650 bytes of CODE  memory (+ 136 bytes shared)
  30 bytes of CONST memory (+ 400 bytes shared)

Errors: none
Warnings: none
