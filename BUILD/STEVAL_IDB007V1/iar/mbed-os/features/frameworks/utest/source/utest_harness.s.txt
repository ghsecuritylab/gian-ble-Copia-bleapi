###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       16/Mar/2018  12:16:18
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        .\mbed-os\features\frameworks\utest\source\utest_harness.cpp
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --c++ --no_rtti --no_exceptions --guard_calls
#        --no_static_destruction -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DDEVICE_SERIAL=1 -DTARGET_CORTEX_M -DDEVICE_SPI=1 -DTARGET_LIKE_MBED
#        -DMBED_BUILD_TIMESTAMP=1521198946.13 -DARM_MATH_CM0 -DTARGET_RELEASE
#        -D__CORTEX_M0 -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0
#        -DTOOLCHAIN_object -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -f
#        .\BUILD\STEVAL_IDB007V1\iar\.includes_fc2e77952737cb4522ab0dffe8cfd8aa.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN
#        -I./mbed-os/features/frameworks
#        -I./mbed-os/features/frameworks/greentea-client
#        -I./mbed-os/features/frameworks/greentea-client/greentea-client
#        -I./mbed-os/features/frameworks/greentea-client/source
#        -I./mbed-os/features/frameworks/unity
#        -I./mbed-os/features/frameworks/unity/source
#        -I./mbed-os/features/frameworks/unity/unity
#        -I./mbed-os/features/frameworks/utest
#        -I./mbed-os/features/frameworks/utest/source
#        -I./mbed-os/features/frameworks/utest/utest
#        -I./mbed-os/features/mbedtls -I./mbed-os/features/mbedtls/importer
#        -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/features/netsocket
#        -I./mbed-os/features/netsocket/cellular
#        -I./mbed-os/features/netsocket/cellular/generic_modem_driver
#        -I./mbed-os/features/netsocket/cellular/utils
#        -I./mbed-os/features/storage -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\iar\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_harness.d
#        -l
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_harness.s.txt
#        -o
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_harness.o
#        .\mbed-os\features\frameworks\utest\source\utest_harness.cpp
#    Locale       =  Italian_Italy.1252
#    List file    =  
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_harness.s.txt
#    Object file  =  
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_harness.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia\mbed-os\features\frameworks\utest\source\utest_harness.cpp
      1          /****************************************************************************
      2           * Copyright (c) 2015, ARM Limited, All Rights Reserved
      3           * SPDX-License-Identifier: Apache-2.0
      4           *
      5           * Licensed under the Apache License, Version 2.0 (the "License"); you may
      6           * not use this file except in compliance with the License.
      7           * You may obtain a copy of the License at
      8           *
      9           * http://www.apache.org/licenses/LICENSE-2.0
     10           *
     11           * Unless required by applicable law or agreed to in writing, software
     12           * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     13           * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     14           * See the License for the specific language governing permissions and
     15           * limitations under the License.
     16           ****************************************************************************
     17           */
     18          
     19          #include "utest/utest_harness.h"

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::function_context<void (*)(void *), void> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x6848             LDR      R0,[R1, #+4]
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x4788             BLX      R1
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD001             BEQ      ??function_move_0
   \   00000004   0xC90C             LDM      R1!,{R2,R3}
   \   00000006   0xC00C             STM      R0!,{R2,R3}
   \                     ??function_move_0: (+1)
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4
   \   __interwork __softfp void mbed::callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8callbackIvvvEENS_8CallbackIFT1_vEEEPFS2_PT_EPT0_: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xC078             STM      R0!,{R3-R6}
   \   0000000C   0x3810             SUBS     R0,R0,#+16
   \   0000000E   0xD001             BEQ      ??callback_0
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x6042             STR      R2,[R0, #+4]
   \                     ??callback_0: (+1)
   \   00000014   0x4901             LDR      R1,??callback_1
   \   00000016   0x60C1             STR      R1,[R0, #+12]
   \   00000018   0xBC70             POP      {R4-R6}
   \   0000001A   0x4770             BX       LR               ;; return
   \                     ??callback_1:
   \   0000001C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops

   \                                 In section .text, align 4
   \   __interwork __softfp <unnamed>::DefaultHandlers *SingletonPtr<<unnamed>::DefaultHandlers>::get()
   \                     _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x6820             LDR      R0,[R4, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD114             BNE      ??get_0
   \   0000000A   0x4D10             LDR      R5,??get_1
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x43C9             MVNS     R1,R1            ;; #-1
   \   00000010   0x6828             LDR      R0,[R5, #+0]
   \   00000012   0x.... 0x....      BL       osMutexAcquire
   \   00000016   0x6820             LDR      R0,[R4, #+0]
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD108             BNE      ??get_2
   \   0000001C   0x1D20             ADDS     R0,R4,#+4
   \   0000001E   0xD005             BEQ      ??get_3
   \   00000020   0x490B             LDR      R1,??get_1+0x4
   \   00000022   0x6809             LDR      R1,[R1, #+0]
   \   00000024   0x2218             MOVS     R2,#+24
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002A   0x1D20             ADDS     R0,R4,#+4
   \                     ??get_3: (+1)
   \   0000002C   0x6020             STR      R0,[R4, #+0]
   \                     ??get_2: (+1)
   \   0000002E   0x6828             LDR      R0,[R5, #+0]
   \   00000030   0x.... 0x....      BL       osMutexRelease
   \                     ??get_0: (+1)
   \   00000034   0x6820             LDR      R0,[R4, #+0]
   \   00000036   0x1D21             ADDS     R1,R4,#+4
   \   00000038   0x4288             CMP      R0,R1
   \   0000003A   0xD004             BEQ      ??get_4
   \   0000003C   0x225D             MOVS     R2,#+93
   \   0000003E   0x4905             LDR      R1,??get_1+0x8
   \   00000040   0x4805             LDR      R0,??get_1+0xC
   \   00000042   0x.... 0x....      BL       mbed_assert_internal
   \                     ??get_4: (+1)
   \   00000046   0x6820             LDR      R0,[R4, #+0]
   \   00000048   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   \   0000004A   0xBF00             Nop      
   \                     ??get_1:
   \   0000004C   0x........         DC32     singleton_mutex_id
   \   00000050   0x........         DC32     _ZN5utest2v116default_handlersE
   \   00000054   0x........         DC32     _ZZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEvEs_0
   \   00000058   0x........         DC32     _ZZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEvEs
     20          #include "utest/utest_stack_trace.h"
     21          #include "utest/utest_serial.h"
     22          
     23          #include <stdlib.h>
     24          
     25          using namespace utest::v1;
     26          
     27          namespace
     28          {

   \                                 In section .data, align 4
     29              const Case *test_cases = NULL;
     30              size_t test_length = 0;
     31          
     32              size_t test_index_of_case = 0;
     33          
     34              size_t test_passed = 0;
     35              size_t test_failed = 0;
     36          
     37              const Case *case_current = NULL;
     38              size_t case_index = 0;
     39              base_control_t case_control =  { REPEAT_SETUP_TEARDOWN, TIMEOUT_UNDECLR };
     40              size_t case_repeat_count = 1;
     41          
     42              void *case_timeout_handle = NULL;
     43              size_t case_validation_count = 0;
     44              bool case_timeout_occurred = false;
     45          
     46              size_t case_passed = 0;
     47              size_t case_failed = 0;
     48              size_t case_failed_before = 0;
     49          
     50              struct DefaultHandlers : public handlers_t { 
     51                  DefaultHandlers() : handlers_t(default_handlers) { }
     52                  DefaultHandlers(const handlers_t& other) : handlers_t(other) { }
     53              };
     54          
     55              SingletonPtr<DefaultHandlers> defaults;
     56              SingletonPtr<DefaultHandlers> handlers;
     57          
     58              location_t location = LOCATION_UNKNOWN;
     59          
     60              utest_v1_scheduler_t scheduler = {NULL, NULL, NULL, NULL};
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd799schedulerE:
   \   00000000   0x00000000         DC32 0H, 0H, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7921case_timeout_occurredE:
   \   00000010   0x00               DC8 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd798locationE:
   \   00000011   0x06               DC8 6
   \   00000012   0x00 0x00          DC8 0, 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7910test_casesE:
   \   00000014   0x00000000         DC32 0H
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7911test_lengthE:
   \   00000018   0x00000000         DC32 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7918test_index_of_caseE:
   \   0000001C   0x00000000         DC32 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7911test_passedE:
   \   00000020   0x00000000         DC32 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7911test_failedE:
   \   00000024   0x00000000         DC32 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7912case_currentE:
   \   00000028   0x00000000         DC32 0H
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7910case_indexE:
   \   0000002C   0x00000000         DC32 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7917case_repeat_countE:
   \   00000030   0x00000001         DC32 1
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7919case_timeout_handleE:
   \   00000034   0x00000000         DC32 0H
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7921case_validation_countE:
   \   00000038   0x00000000         DC32 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7911case_passedE:
   \   0000003C   0x00000000         DC32 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7911case_failedE:
   \   00000040   0x00000000         DC32 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7918case_failed_beforeE:
   \   00000044   0x00000000         DC32 0
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd798defaultsE:
   \   00000048   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000058   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd798handlersE:
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .data, align 4
   \                     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7912case_controlE:
   \   00000000   0x10 0x00          DC8 16, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0xFFFFFFFE         DC32 4294967294
     61          }
     62          
     63          static void die() {
     64              UTEST_LOG_FUNCTION();
     65              while(1) ;
     66          }
     67          

   \                                 In section .text, align 2, keep-with-next
     68          static bool is_scheduler_valid(const utest_v1_scheduler_t scheduler)
     69          {
   \                     _Z18is_scheduler_valid20utest_v1_scheduler_t: (+1)
   \   00000000   0xB40F             PUSH     {R0-R3}
     70              UTEST_LOG_FUNCTION();
     71              return (scheduler.init && scheduler.post && scheduler.cancel && scheduler.run);
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD007             BEQ      ??is_scheduler_valid_0
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD005             BEQ      ??is_scheduler_valid_0
   \   0000000A   0x2A00             CMP      R2,#+0
   \   0000000C   0xD003             BEQ      ??is_scheduler_valid_0
   \   0000000E   0x2B00             CMP      R3,#+0
   \   00000010   0xD001             BEQ      ??is_scheduler_valid_0
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xE000             B        ??is_scheduler_valid_1
   \                     ??is_scheduler_valid_0: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \                     ??is_scheduler_valid_1: (+1)
   \   00000018   0xB004             ADD      SP,SP,#+16
   \   0000001A   0x4770             BX       LR               ;; return
     72          }
     73          

   \                                 In section .text, align 2, keep-with-next
     74          bool Harness::set_scheduler(const utest_v1_scheduler_t scheduler)
     75          {
   \                     _ZN5utest2v17Harness13set_schedulerE20utest_v1_scheduler_t: (+1)
   \   00000000   0xB50F             PUSH     {R0-R3,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     76              UTEST_LOG_FUNCTION();
     77              if (is_scheduler_valid(scheduler)) {
   \   00000004   0xA801             ADD      R0,SP,#+4
   \   00000006   0xC80F             LDM      R0,{R0-R3}
   \   00000008   0x.... 0x....      BL       _Z18is_scheduler_valid20utest_v1_scheduler_t
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD005             BEQ      ??set_scheduler_0
     78                  ::scheduler = scheduler;
   \   00000010   0x....             LDR      R0,??DataTable2
   \   00000012   0xA901             ADD      R1,SP,#+4
   \   00000014   0x2210             MOVS     R2,#+16
   \   00000016   0x.... 0x....      BL       __aeabi_memcpy4
     79                  return true;
   \   0000001A   0x2001             MOVS     R0,#+1
     80              }
     81              return false;
   \                     ??set_scheduler_0: (+1)
   \   0000001C   0xB005             ADD      SP,SP,#+20
   \   0000001E   0xBD00             POP      {PC}             ;; return
     82          }
     83          
     84          

   \                                 In section .text, align 2, keep-with-next
     85          void Harness::notify_testcases()
     86          {
   \                     _ZN5utest2v17Harness16notify_testcasesEv: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     87              for(unsigned i = 0; i < test_length; i++) {
   \   00000002   0x2500             MOVS     R5,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0xE007             B        ??notify_testcases_0
     88                  utest::v1::greentea_testcase_notification_handler(test_cases[i].get_description());
   \                     ??notify_testcases_1: (+1)
   \   00000008   0x6940             LDR      R0,[R0, #+20]
   \   0000000A   0x1900             ADDS     R0,R0,R4
   \   0000000C   0x.... 0x....      BL       _ZNK5utest2v14Case15get_descriptionEv
   \   00000010   0x.... 0x....      BL       _ZN5utest2v138greentea_testcase_notification_handlerEPKc
     89              }
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
   \   00000016   0x341C             ADDS     R4,R4,#+28
   \                     ??notify_testcases_0: (+1)
   \   00000018   0x....             LDR      R0,??DataTable2
   \   0000001A   0x6981             LDR      R1,[R0, #+24]
   \   0000001C   0x428D             CMP      R5,R1
   \   0000001E   0xD3F3             BCC      ??notify_testcases_1
     90          }
   \   00000020   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     91          

   \                                 In section .text, align 2, keep-with-next
     92          bool Harness::run(const Specification& specification, size_t)
     93          {
   \                     _ZN5utest2v17Harness3runERKNS0_13SpecificationEj: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     94              UTEST_LOG_FUNCTION();
     95              return run(specification);
   \   00000002   0x.... 0x....      BL       _ZN5utest2v17Harness3runERKNS0_13SpecificationE
   \   00000006   0xBD02             POP      {R1,PC}          ;; return
     96          }
     97          

   \                                 In section .text, align 2, keep-with-next
     98          bool Harness::run(const Specification& specification)
     99          {
   \                     _ZN5utest2v17Harness3runERKNS0_13SpecificationE: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
   \   00000004   0x0005             MOVS     R5,R0
    100              UTEST_LOG_FUNCTION();
    101              // check if a specification is currently running
    102              if (is_busy())
   \   00000006   0x.... 0x....      BL       _ZN5utest2v17Harness7is_busyEv
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD118             BNE      ??run_0
    103                  return false;
    104          
    105              // if the scheduler is invalid, this is the first time we are calling
    106              if (!is_scheduler_valid(scheduler))
   \   0000000E   0x....             LDR      R4,??DataTable2
   \   00000010   0xCC0F             LDM      R4!,{R0-R3}
   \   00000012   0x3C10             SUBS     R4,R4,#+16
   \   00000014   0x.... 0x....      BL       _Z18is_scheduler_valid20utest_v1_scheduler_t
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD107             BNE      ??run_1
    107                  scheduler = utest_v1_get_scheduler();
   \   0000001C   0xA802             ADD      R0,SP,#+8
   \   0000001E   0x.... 0x....      BL       utest_v1_get_scheduler
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0xA902             ADD      R1,SP,#+8
   \   00000026   0x2210             MOVS     R2,#+16
   \   00000028   0x.... 0x....      BL       __aeabi_memcpy4
    108          
    109              // if the scheduler is still invalid, abort
    110              if (!is_scheduler_valid(scheduler))
   \                     ??run_1: (+1)
   \   0000002C   0xCC0F             LDM      R4!,{R0-R3}
   \   0000002E   0x3C10             SUBS     R4,R4,#+16
   \   00000030   0x.... 0x....      BL       _Z18is_scheduler_valid20utest_v1_scheduler_t
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD003             BEQ      ??run_0
    111                  return false;
    112          
    113              // if the scheduler failed to initialize, abort
    114              if (scheduler.init() != 0)
   \   00000038   0x6820             LDR      R0,[R4, #+0]
   \   0000003A   0x4780             BLX      R0
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD001             BEQ      ??run_2
    115                  return false;
   \                     ??run_0: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0xE0D3             B        ??run_3
    116              test_cases  = specification.cases;
   \                     ??run_2: (+1)
   \   00000044   0x68E8             LDR      R0,[R5, #+12]
   \   00000046   0x6160             STR      R0,[R4, #+20]
    117              test_length = specification.length;
   \   00000048   0x6928             LDR      R0,[R5, #+16]
   \   0000004A   0x61A0             STR      R0,[R4, #+24]
    118              *defaults.get()    = specification.defaults;
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0x3048             ADDS     R0,R0,#+72
   \   00000050   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000054   0x0006             MOVS     R6,R0
   \   00000056   0xA806             ADD      R0,SP,#+24
   \   00000058   0x0029             MOVS     R1,R5
   \   0000005A   0x3114             ADDS     R1,R1,#+20
   \   0000005C   0x2218             MOVS     R2,#+24
   \   0000005E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000062   0x0030             MOVS     R0,R6
   \   00000064   0xA906             ADD      R1,SP,#+24
   \   00000066   0x2218             MOVS     R2,#+24
   \   00000068   0x.... 0x....      BL       __aeabi_memcpy4
    119              handlers->test_setup    = defaults->get_handler(specification.setup_handler);
   \   0000006C   0x0020             MOVS     R0,R4
   \   0000006E   0x3064             ADDS     R0,R0,#+100
   \   00000070   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000074   0x0006             MOVS     R6,R0
   \   00000076   0x0020             MOVS     R0,R4
   \   00000078   0x3048             ADDS     R0,R0,#+72
   \   0000007A   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000007E   0x6829             LDR      R1,[R5, #+0]
   \   00000080   0x2901             CMP      R1,#+1
   \   00000082   0xD100             BNE      ??run_4
   \   00000084   0x6801             LDR      R1,[R0, #+0]
   \                     ??run_4: (+1)
   \   00000086   0x6031             STR      R1,[R6, #+0]
    120              handlers->test_teardown = defaults->get_handler(specification.teardown_handler);
   \   00000088   0x0020             MOVS     R0,R4
   \   0000008A   0x3064             ADDS     R0,R0,#+100
   \   0000008C   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000090   0x0006             MOVS     R6,R0
   \   00000092   0x0020             MOVS     R0,R4
   \   00000094   0x3048             ADDS     R0,R0,#+72
   \   00000096   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000009A   0x6869             LDR      R1,[R5, #+4]
   \   0000009C   0x2901             CMP      R1,#+1
   \   0000009E   0xD100             BNE      ??run_5
   \   000000A0   0x6841             LDR      R1,[R0, #+4]
   \                     ??run_5: (+1)
   \   000000A2   0x6071             STR      R1,[R6, #+4]
    121              handlers->test_failure  = defaults->get_handler(specification.failure_handler);
   \   000000A4   0x0020             MOVS     R0,R4
   \   000000A6   0x3064             ADDS     R0,R0,#+100
   \   000000A8   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000000AC   0x0006             MOVS     R6,R0
   \   000000AE   0x0020             MOVS     R0,R4
   \   000000B0   0x3048             ADDS     R0,R0,#+72
   \   000000B2   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000000B6   0x68A9             LDR      R1,[R5, #+8]
   \   000000B8   0x2901             CMP      R1,#+1
   \   000000BA   0xD100             BNE      ??run_6
   \   000000BC   0x6881             LDR      R1,[R0, #+8]
   \                     ??run_6: (+1)
   \   000000BE   0x60B1             STR      R1,[R6, #+8]
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x61E0             STR      R0,[R4, #+28]
    122          
    123              test_index_of_case = 0;
    124              test_passed = 0;
   \   000000C4   0x6220             STR      R0,[R4, #+32]
    125              test_failed = 0;
   \   000000C6   0x6260             STR      R0,[R4, #+36]
    126          
    127              case_passed = 0;
   \   000000C8   0x63E0             STR      R0,[R4, #+60]
    128              case_failed = 0;
   \   000000CA   0x6420             STR      R0,[R4, #+64]
    129              case_failed_before = 0;
   \   000000CC   0x6460             STR      R0,[R4, #+68]
    130          
    131              location = LOCATION_TEST_SETUP;
   \   000000CE   0x2701             MOVS     R7,#+1
   \   000000D0   0x7467             STRB     R7,[R4, #+17]
    132              int setup_status = 0;
   \   000000D2   0x9000             STR      R0,[SP, #+0]
    133              failure_t failure(REASON_NONE, location);
    134          
    135              if (handlers->test_setup) {
   \   000000D4   0x0020             MOVS     R0,R4
   \   000000D6   0x3064             ADDS     R0,R0,#+100
   \   000000D8   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x2800             CMP      R0,#+0
   \   000000E0   0xD00F             BEQ      ??run_7
    136                  setup_status = handlers->test_setup(test_length);
   \   000000E2   0x0020             MOVS     R0,R4
   \   000000E4   0x3064             ADDS     R0,R0,#+100
   \   000000E6   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000000EA   0x0001             MOVS     R1,R0
   \   000000EC   0x69A0             LDR      R0,[R4, #+24]
   \   000000EE   0x6809             LDR      R1,[R1, #+0]
   \   000000F0   0x4788             BLX      R1
   \   000000F2   0x9000             STR      R0,[SP, #+0]
    137                  if (setup_status == STATUS_CONTINUE) setup_status = 0;
   \   000000F4   0x2000             MOVS     R0,#+0
   \   000000F6   0x43C0             MVNS     R0,R0            ;; #-1
   \   000000F8   0x9900             LDR      R1,[SP, #+0]
   \   000000FA   0x4281             CMP      R1,R0
   \   000000FC   0xD104             BNE      ??run_8
   \   000000FE   0x2000             MOVS     R0,#+0
   \   00000100   0x9000             STR      R0,[SP, #+0]
    138                  else if (setup_status < STATUS_CONTINUE)     failure.reason = REASON_TEST_SETUP;
    139                  else if (setup_status > signed(test_length)) failure.reason = REASON_CASE_INDEX;
    140              }
    141          
    142              if (failure.reason != REASON_NONE) {
    143                  if (handlers->test_failure) handlers->test_failure(failure);
    144                  if (handlers->test_teardown) handlers->test_teardown(0, 0, failure);
    145                  test_cases = NULL;
    146                  exit(1);
    147              }
    148          
    149              notify_testcases();
   \                     ??run_7: (+1)
   \   00000102   0x2500             MOVS     R5,#+0
   \   00000104   0x2600             MOVS     R6,#+0
   \   00000106   0xE030             B        ??run_9
   \                     ??run_8: (+1)
   \   00000108   0xDA01             BGE      ??run_10
   \   0000010A   0x2520             MOVS     R5,#+32
   \   0000010C   0xE003             B        ??run_11
   \                     ??run_10: (+1)
   \   0000010E   0x69A0             LDR      R0,[R4, #+24]
   \   00000110   0x4288             CMP      R0,R1
   \   00000112   0xDAF6             BGE      ??run_7
   \   00000114   0x02BD             LSLS     R5,R7,#+10
   \                     ??run_11: (+1)
   \   00000116   0x0020             MOVS     R0,R4
   \   00000118   0x3064             ADDS     R0,R0,#+100
   \   0000011A   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000011E   0x6880             LDR      R0,[R0, #+8]
   \   00000120   0x2800             CMP      R0,#+0
   \   00000122   0xD00A             BEQ      ??run_12
   \   00000124   0xA801             ADD      R0,SP,#+4
   \   00000126   0x8005             STRH     R5,[R0, #+0]
   \   00000128   0x7087             STRB     R7,[R0, #+2]
   \   0000012A   0x0020             MOVS     R0,R4
   \   0000012C   0x3064             ADDS     R0,R0,#+100
   \   0000012E   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000132   0x0001             MOVS     R1,R0
   \   00000134   0xA801             ADD      R0,SP,#+4
   \   00000136   0x6889             LDR      R1,[R1, #+8]
   \   00000138   0x4788             BLX      R1
   \                     ??run_12: (+1)
   \   0000013A   0x0020             MOVS     R0,R4
   \   0000013C   0x3064             ADDS     R0,R0,#+100
   \   0000013E   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000142   0x6840             LDR      R0,[R0, #+4]
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xD04B             BEQ      ??run_13
   \   00000148   0xA801             ADD      R0,SP,#+4
   \   0000014A   0x8005             STRH     R5,[R0, #+0]
   \   0000014C   0x7087             STRB     R7,[R0, #+2]
   \   0000014E   0x0020             MOVS     R0,R4
   \   00000150   0x3064             ADDS     R0,R0,#+100
   \   00000152   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000156   0x0003             MOVS     R3,R0
   \   00000158   0xAA01             ADD      R2,SP,#+4
   \   0000015A   0xE03D             B        ??run_14
   \                     ??run_15: (+1)
   \   0000015C   0x1980             ADDS     R0,R0,R6
   \   0000015E   0x.... 0x....      BL       _ZNK5utest2v14Case15get_descriptionEv
   \   00000162   0x.... 0x....      BL       _ZN5utest2v138greentea_testcase_notification_handlerEPKc
   \   00000166   0x1C6D             ADDS     R5,R5,#+1
   \   00000168   0x361C             ADDS     R6,R6,#+28
   \                     ??run_9: (+1)
   \   0000016A   0x6960             LDR      R0,[R4, #+20]
   \   0000016C   0x69A1             LDR      R1,[R4, #+24]
   \   0000016E   0x428D             CMP      R5,R1
   \   00000170   0xD3F4             BCC      ??run_15
    150          
    151              case_index = setup_status;
   \   00000172   0x9900             LDR      R1,[SP, #+0]
   \   00000174   0x62E1             STR      R1,[R4, #+44]
    152              case_current = &test_cases[case_index];
   \   00000176   0x00CA             LSLS     R2,R1,#+3
   \   00000178   0x1A51             SUBS     R1,R2,R1
   \   0000017A   0x0089             LSLS     R1,R1,#+2
   \   0000017C   0x1840             ADDS     R0,R0,R1
   \   0000017E   0x62A0             STR      R0,[R4, #+40]
    153          
    154              scheduler.post(run_next_case, 0);
   \   00000180   0x2100             MOVS     R1,#+0
   \   00000182   0x....             LDR      R0,??DataTable5
   \   00000184   0x6862             LDR      R2,[R4, #+4]
   \   00000186   0x4790             BLX      R2
    155              if (scheduler.run() != 0) {
   \   00000188   0x68E0             LDR      R0,[R4, #+12]
   \   0000018A   0x4780             BLX      R0
   \   0000018C   0x2800             CMP      R0,#+0
   \   0000018E   0xD02C             BEQ      ??run_16
    156                  failure.reason = REASON_SCHEDULER;
    157                  if (handlers->test_failure) handlers->test_failure(failure);
   \   00000190   0x0020             MOVS     R0,R4
   \   00000192   0x3064             ADDS     R0,R0,#+100
   \   00000194   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000198   0x6880             LDR      R0,[R0, #+8]
   \   0000019A   0x2800             CMP      R0,#+0
   \   0000019C   0xD00B             BEQ      ??run_17
   \   0000019E   0x4668             MOV      R0,SP
   \   000001A0   0x02F9             LSLS     R1,R7,#+11
   \   000001A2   0x8001             STRH     R1,[R0, #+0]
   \   000001A4   0x7087             STRB     R7,[R0, #+2]
   \   000001A6   0x0020             MOVS     R0,R4
   \   000001A8   0x3064             ADDS     R0,R0,#+100
   \   000001AA   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000001AE   0x0001             MOVS     R1,R0
   \   000001B0   0x4668             MOV      R0,SP
   \   000001B2   0x6889             LDR      R1,[R1, #+8]
   \   000001B4   0x4788             BLX      R1
    158                  if (handlers->test_teardown) handlers->test_teardown(0, 0, failure);
   \                     ??run_17: (+1)
   \   000001B6   0x0020             MOVS     R0,R4
   \   000001B8   0x3064             ADDS     R0,R0,#+100
   \   000001BA   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000001BE   0x6840             LDR      R0,[R0, #+4]
   \   000001C0   0x2800             CMP      R0,#+0
   \   000001C2   0xD00D             BEQ      ??run_13
   \   000001C4   0x4668             MOV      R0,SP
   \   000001C6   0x02F9             LSLS     R1,R7,#+11
   \   000001C8   0x8001             STRH     R1,[R0, #+0]
   \   000001CA   0x7087             STRB     R7,[R0, #+2]
   \   000001CC   0x0020             MOVS     R0,R4
   \   000001CE   0x3064             ADDS     R0,R0,#+100
   \   000001D0   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000001D4   0x0003             MOVS     R3,R0
   \   000001D6   0x466A             MOV      R2,SP
   \                     ??run_14: (+1)
   \   000001D8   0x2100             MOVS     R1,#+0
   \   000001DA   0x2000             MOVS     R0,#+0
   \   000001DC   0x685B             LDR      R3,[R3, #+4]
   \   000001DE   0x4798             BLX      R3
    159                  test_cases = NULL;
   \                     ??run_13: (+1)
   \   000001E0   0x2000             MOVS     R0,#+0
   \   000001E2   0x6160             STR      R0,[R4, #+20]
    160                  exit(1);
   \   000001E4   0x2001             MOVS     R0,#+1
   \   000001E6   0x.... 0x....      BL       exit
    161              }
    162              return true;
   \                     ??run_16: (+1)
   \   000001EA   0x2001             MOVS     R0,#+1
   \                     ??run_3: (+1)
   \   000001EC   0xB00D             ADD      SP,SP,#+52
   \   000001EE   0xBDF0             POP      {R4-R7,PC}       ;; return
    163          }
    164          

   \                                 In section .text, align 2, keep-with-next
    165          void Harness::raise_failure(const failure_reason_t reason)
    166          {
   \                     _ZN5utest2v17Harness13raise_failureENS0_16failure_reason_tE: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x0006             MOVS     R6,R0
    167              UTEST_LOG_FUNCTION();
    168              // ignore a failure, if the Harness has not been initialized.
    169              // this allows using unity assertion macros without setting up utest.
    170              if (test_cases == NULL) return;
   \   00000006   0x....             LDR      R4,??DataTable3
   \   00000008   0x6960             LDR      R0,[R4, #+20]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD100             BNE      .+4
   \   0000000E   0xE09F             B        ??raise_failure_0
   \   00000010   0x2502             MOVS     R5,#+2
   \   00000012   0x43ED             MVNS     R5,R5            ;; #-3
    171          
    172              utest::v1::status_t fail_status = STATUS_ABORT;
    173              if (handlers->test_failure) handlers->test_failure(failure_t(reason, location));
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0x3064             ADDS     R0,R0,#+100
   \   00000018   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000001C   0x6880             LDR      R0,[R0, #+8]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD00B             BEQ      ??raise_failure_1
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x8006             STRH     R6,[R0, #+0]
   \   00000026   0x7C61             LDRB     R1,[R4, #+17]
   \   00000028   0x7081             STRB     R1,[R0, #+2]
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0x3064             ADDS     R0,R0,#+100
   \   0000002E   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000032   0x0001             MOVS     R1,R0
   \   00000034   0x4668             MOV      R0,SP
   \   00000036   0x6889             LDR      R1,[R1, #+8]
   \   00000038   0x4788             BLX      R1
    174              if (handlers->case_failure) fail_status = handlers->case_failure(case_current, failure_t(reason, location));
   \                     ??raise_failure_1: (+1)
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0x3064             ADDS     R0,R0,#+100
   \   0000003E   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000042   0x6940             LDR      R0,[R0, #+20]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD00D             BEQ      ??raise_failure_2
   \   00000048   0x4668             MOV      R0,SP
   \   0000004A   0x8006             STRH     R6,[R0, #+0]
   \   0000004C   0x7C61             LDRB     R1,[R4, #+17]
   \   0000004E   0x7081             STRB     R1,[R0, #+2]
   \   00000050   0x0020             MOVS     R0,R4
   \   00000052   0x3064             ADDS     R0,R0,#+100
   \   00000054   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000058   0x0002             MOVS     R2,R0
   \   0000005A   0x4669             MOV      R1,SP
   \   0000005C   0x6AA0             LDR      R0,[R4, #+40]
   \   0000005E   0x6952             LDR      R2,[R2, #+20]
   \   00000060   0x4790             BLX      R2
   \   00000062   0x0005             MOVS     R5,R0
    175          
    176              {
    177                  UTEST_ENTER_CRITICAL_SECTION;
   \                     ??raise_failure_2: (+1)
   \   00000064   0x.... 0x....      BL       utest_v1_enter_critical_section
    178          
    179                  if (fail_status != STATUS_IGNORE) case_failed++;
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x43C0             MVNS     R0,R0            ;; #-2
   \   0000006C   0x4285             CMP      R5,R0
   \   0000006E   0xD00D             BEQ      ??raise_failure_3
   \   00000070   0x6C20             LDR      R0,[R4, #+64]
   \   00000072   0x1C40             ADDS     R0,R0,#+1
   \   00000074   0x6420             STR      R0,[R4, #+64]
    180          
    181                  if ((fail_status == STATUS_ABORT) && case_timeout_handle)
   \   00000076   0x2002             MOVS     R0,#+2
   \   00000078   0x43C0             MVNS     R0,R0            ;; #-3
   \   0000007A   0x4285             CMP      R5,R0
   \   0000007C   0xD106             BNE      ??raise_failure_3
   \   0000007E   0x6B60             LDR      R0,[R4, #+52]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD003             BEQ      ??raise_failure_3
    182                  {
    183                      scheduler.cancel(case_timeout_handle);
   \   00000084   0x68A1             LDR      R1,[R4, #+8]
   \   00000086   0x4788             BLX      R1
    184                      case_timeout_handle = NULL;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x6360             STR      R0,[R4, #+52]
    185                  }
    186                  UTEST_LEAVE_CRITICAL_SECTION;
   \                     ??raise_failure_3: (+1)
   \   0000008C   0x.... 0x....      BL       utest_v1_leave_critical_section
    187              }
    188          
    189              if (fail_status == STATUS_ABORT || reason & REASON_CASE_SETUP) {
   \   00000090   0x2002             MOVS     R0,#+2
   \   00000092   0x43C0             MVNS     R0,R0            ;; #-3
   \   00000094   0x4285             CMP      R5,R0
   \   00000096   0xD001             BEQ      ??raise_failure_4
   \   00000098   0x0630             LSLS     R0,R6,#+24
   \   0000009A   0xD559             BPL      ??raise_failure_0
    190                  if (handlers->case_teardown && location != LOCATION_CASE_TEARDOWN) {
   \                     ??raise_failure_4: (+1)
   \   0000009C   0x0020             MOVS     R0,R4
   \   0000009E   0x3064             ADDS     R0,R0,#+100
   \   000000A0   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000000A4   0x6900             LDR      R0,[R0, #+16]
   \   000000A6   0x2800             CMP      R0,#+0
   \   000000A8   0xD031             BEQ      ??raise_failure_5
   \   000000AA   0x7C60             LDRB     R0,[R4, #+17]
   \   000000AC   0x2805             CMP      R0,#+5
   \   000000AE   0xD02E             BEQ      ??raise_failure_5
    191                      location_t fail_loc(location);
   \   000000B0   0x4669             MOV      R1,SP
   \   000000B2   0x7108             STRB     R0,[R1, #+4]
    192                      location = LOCATION_CASE_TEARDOWN;
   \   000000B4   0x2005             MOVS     R0,#+5
   \   000000B6   0x7460             STRB     R0,[R4, #+17]
    193          
    194                      utest::v1::status_t teardown_status = handlers->case_teardown(case_current, case_passed, case_failed, failure_t(reason, fail_loc));
   \   000000B8   0x4668             MOV      R0,SP
   \   000000BA   0x8006             STRH     R6,[R0, #+0]
   \   000000BC   0x7909             LDRB     R1,[R1, #+4]
   \   000000BE   0x7081             STRB     R1,[R0, #+2]
   \   000000C0   0x0020             MOVS     R0,R4
   \   000000C2   0x3064             ADDS     R0,R0,#+100
   \   000000C4   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000000C8   0x0007             MOVS     R7,R0
   \   000000CA   0x466B             MOV      R3,SP
   \   000000CC   0x6C22             LDR      R2,[R4, #+64]
   \   000000CE   0x6BE1             LDR      R1,[R4, #+60]
   \   000000D0   0x6AA0             LDR      R0,[R4, #+40]
   \   000000D2   0x693F             LDR      R7,[R7, #+16]
   \   000000D4   0x47B8             BLX      R7
    195                      if (teardown_status < STATUS_CONTINUE) raise_failure(REASON_CASE_TEARDOWN);
   \   000000D6   0x2100             MOVS     R1,#+0
   \   000000D8   0x43C9             MVNS     R1,R1            ;; #-1
   \   000000DA   0x4288             CMP      R0,R1
   \   000000DC   0xDA02             BGE      ??raise_failure_6
   \   000000DE   0x2080             MOVS     R0,#+128
   \   000000E0   0x0080             LSLS     R0,R0,#+2        ;; #+512
   \   000000E2   0xE004             B.N      ??raise_failure_7
    196                      else if (teardown_status > signed(test_length)) raise_failure(REASON_CASE_INDEX);
   \                     ??raise_failure_6: (+1)
   \   000000E4   0x69A1             LDR      R1,[R4, #+24]
   \   000000E6   0x4281             CMP      R1,R0
   \   000000E8   0xDA04             BGE      ??raise_failure_8
   \   000000EA   0x2080             MOVS     R0,#+128
   \   000000EC   0x00C0             LSLS     R0,R0,#+3        ;; #+1024
   \                     ??raise_failure_7: (+1)
   \   000000EE   0xF7FF 0xFF87      BL       _ZN5utest2v17Harness13raise_failureENS0_16failure_reason_tE
   \   000000F2   0xE003             B        ??raise_failure_9
    197                      else if (teardown_status >= 0) case_index = teardown_status - 1;
   \                     ??raise_failure_8: (+1)
   \   000000F4   0x2800             CMP      R0,#+0
   \   000000F6   0xD401             BMI      ??raise_failure_9
   \   000000F8   0x1E40             SUBS     R0,R0,#+1
   \   000000FA   0x62E0             STR      R0,[R4, #+44]
    198          
    199                      // Restore case failure location once we have dealt with case teardown
    200                      location = fail_loc;
   \                     ??raise_failure_9: (+1)
   \   000000FC   0x4668             MOV      R0,SP
   \   000000FE   0x7900             LDRB     R0,[R0, #+4]
   \   00000100   0x7460             STRB     R0,[R4, #+17]
    201                      handlers->case_teardown = NULL;
   \   00000102   0x0020             MOVS     R0,R4
   \   00000104   0x3064             ADDS     R0,R0,#+100
   \   00000106   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000010A   0x2100             MOVS     R1,#+0
   \   0000010C   0x6101             STR      R1,[R0, #+16]
    202                  }
    203              }
    204              if (fail_status == STATUS_ABORT) {
   \                     ??raise_failure_5: (+1)
   \   0000010E   0x2002             MOVS     R0,#+2
   \   00000110   0x43C0             MVNS     R0,R0            ;; #-3
   \   00000112   0x4285             CMP      R5,R0
   \   00000114   0xD11C             BNE      ??raise_failure_0
    205                  test_failed++;
   \   00000116   0x6A60             LDR      R0,[R4, #+36]
   \   00000118   0x1C40             ADDS     R0,R0,#+1
   \   0000011A   0x6260             STR      R0,[R4, #+36]
    206                  failure_t fail(reason, location);
   \   0000011C   0x7C65             LDRB     R5,[R4, #+17]
    207                  location = LOCATION_TEST_TEARDOWN;
   \   0000011E   0x2002             MOVS     R0,#+2
   \   00000120   0x7460             STRB     R0,[R4, #+17]
    208                  if (handlers->test_teardown) handlers->test_teardown(test_passed, test_failed, fail);
   \   00000122   0x0020             MOVS     R0,R4
   \   00000124   0x3064             ADDS     R0,R0,#+100
   \   00000126   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000012A   0x6840             LDR      R0,[R0, #+4]
   \   0000012C   0x2800             CMP      R0,#+0
   \   0000012E   0xD00C             BEQ      ??raise_failure_10
   \   00000130   0x4668             MOV      R0,SP
   \   00000132   0x8006             STRH     R6,[R0, #+0]
   \   00000134   0x7085             STRB     R5,[R0, #+2]
   \   00000136   0x0020             MOVS     R0,R4
   \   00000138   0x3064             ADDS     R0,R0,#+100
   \   0000013A   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000013E   0x0003             MOVS     R3,R0
   \   00000140   0x466A             MOV      R2,SP
   \   00000142   0x6A61             LDR      R1,[R4, #+36]
   \   00000144   0x6A20             LDR      R0,[R4, #+32]
   \   00000146   0x685B             LDR      R3,[R3, #+4]
   \   00000148   0x4798             BLX      R3
    209                  exit(test_failed);
   \                     ??raise_failure_10: (+1)
   \   0000014A   0x6A60             LDR      R0,[R4, #+36]
   \   0000014C   0x.... 0x....      BL       exit
    210                  die();
    211              }
    212          }
   \                     ??raise_failure_0: (+1)
   \   00000150   0xB003             ADD      SP,SP,#+12
   \   00000152   0xBDF0             POP      {R4-R7,PC}       ;; return
    213          

   \                                 In section .text, align 2, keep-with-next
    214          void Harness::schedule_next_case()
    215          {
   \                     _ZN5utest2v17Harness18schedule_next_caseEv: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    216              UTEST_LOG_FUNCTION();
    217              if (!case_timeout_occurred && case_failed_before == case_failed) {
   \   00000004   0x....             LDR      R4,??DataTable7
   \   00000006   0x7C20             LDRB     R0,[R4, #+16]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD106             BNE      ??schedule_next_case_0
   \   0000000C   0x6C60             LDR      R0,[R4, #+68]
   \   0000000E   0x6C21             LDR      R1,[R4, #+64]
   \   00000010   0x4288             CMP      R0,R1
   \   00000012   0xD102             BNE      ??schedule_next_case_0
    218                  case_passed++;
   \   00000014   0x6BE0             LDR      R0,[R4, #+60]
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \   00000018   0x63E0             STR      R0,[R4, #+60]
    219              }
    220          
    221              if (case_control.repeat & REPEAT_SETUP_TEARDOWN || !(case_control.repeat & (REPEAT_ON_TIMEOUT | REPEAT_ON_VALIDATE))) {
   \                     ??schedule_next_case_0: (+1)
   \   0000001A   0x....             LDR      R6,??DataTable7_1
   \   0000001C   0x7830             LDRB     R0,[R6, #+0]
   \   0000001E   0x2510             MOVS     R5,#+16
   \   00000020   0x4228             TST      R0,R5
   \   00000022   0xD102             BNE      ??schedule_next_case_1
   \   00000024   0x2106             MOVS     R1,#+6
   \   00000026   0x4208             TST      R0,R1
   \   00000028   0xD12E             BNE      ??schedule_next_case_2
    222                  location = LOCATION_CASE_TEARDOWN;
   \                     ??schedule_next_case_1: (+1)
   \   0000002A   0x2005             MOVS     R0,#+5
   \   0000002C   0x7460             STRB     R0,[R4, #+17]
    223          
    224                  if (handlers->case_teardown) {
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x3064             ADDS     R0,R0,#+100
   \   00000032   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000036   0x6900             LDR      R0,[R0, #+16]
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD025             BEQ      ??schedule_next_case_2
    225                      utest::v1::status_t status = handlers->case_teardown(case_current, case_passed, case_failed,
    226                                                               case_failed ? failure_t(REASON_CASES, LOCATION_UNKNOWN) : failure_t(REASON_NONE));
   \   0000003C   0x4668             MOV      R0,SP
   \   0000003E   0x6C21             LDR      R1,[R4, #+64]
   \   00000040   0x2900             CMP      R1,#+0
   \   00000042   0xD003             BEQ      ??schedule_next_case_3
   \   00000044   0x2102             MOVS     R1,#+2
   \   00000046   0x8001             STRH     R1,[R0, #+0]
   \   00000048   0x2106             MOVS     R1,#+6
   \   0000004A   0xE000             B        ??schedule_next_case_4
   \                     ??schedule_next_case_3: (+1)
   \   0000004C   0x8001             STRH     R1,[R0, #+0]
   \                     ??schedule_next_case_4: (+1)
   \   0000004E   0x7081             STRB     R1,[R0, #+2]
   \   00000050   0x0020             MOVS     R0,R4
   \   00000052   0x3064             ADDS     R0,R0,#+100
   \   00000054   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000058   0x0007             MOVS     R7,R0
   \   0000005A   0x466B             MOV      R3,SP
   \   0000005C   0x6C22             LDR      R2,[R4, #+64]
   \   0000005E   0x6BE1             LDR      R1,[R4, #+60]
   \   00000060   0x6AA0             LDR      R0,[R4, #+40]
   \   00000062   0x693F             LDR      R7,[R7, #+16]
   \   00000064   0x47B8             BLX      R7
    227                      if (status < STATUS_CONTINUE)          raise_failure(REASON_CASE_TEARDOWN);
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x43C9             MVNS     R1,R1            ;; #-1
   \   0000006A   0x4288             CMP      R0,R1
   \   0000006C   0xDA01             BGE      ??schedule_next_case_5
   \   0000006E   0x0168             LSLS     R0,R5,#+5
   \   00000070   0xE003             B.N      ??schedule_next_case_6
    228                      else if (status > signed(test_length)) raise_failure(REASON_CASE_INDEX);
   \                     ??schedule_next_case_5: (+1)
   \   00000072   0x69A1             LDR      R1,[R4, #+24]
   \   00000074   0x4281             CMP      R1,R0
   \   00000076   0xDA03             BGE      ??schedule_next_case_7
   \   00000078   0x01A8             LSLS     R0,R5,#+6
   \                     ??schedule_next_case_6: (+1)
   \   0000007A   0x.... 0x....      BL       _ZN5utest2v17Harness13raise_failureENS0_16failure_reason_tE
   \   0000007E   0xE003             B        ??schedule_next_case_2
    229                      else if (status >= 0) case_index = status - 1;
   \                     ??schedule_next_case_7: (+1)
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD401             BMI      ??schedule_next_case_2
   \   00000084   0x1E40             SUBS     R0,R0,#+1
   \   00000086   0x62E0             STR      R0,[R4, #+44]
    230                  }
    231              }
    232          
    233              if (!(case_control.repeat & (REPEAT_ON_TIMEOUT | REPEAT_ON_VALIDATE))) {
   \                     ??schedule_next_case_2: (+1)
   \   00000088   0x7830             LDRB     R0,[R6, #+0]
   \   0000008A   0x2106             MOVS     R1,#+6
   \   0000008C   0x4208             TST      R0,R1
   \   0000008E   0xD123             BNE      ??schedule_next_case_8
    234                  if (case_failed > 0) test_failed++;
   \   00000090   0x6C20             LDR      R0,[R4, #+64]
   \   00000092   0x2800             CMP      R0,#+0
   \   00000094   0xD003             BEQ      ??schedule_next_case_9
   \   00000096   0x6A60             LDR      R0,[R4, #+36]
   \   00000098   0x1C40             ADDS     R0,R0,#+1
   \   0000009A   0x6260             STR      R0,[R4, #+36]
   \   0000009C   0xE002             B        ??schedule_next_case_10
    235                  else test_passed++;
   \                     ??schedule_next_case_9: (+1)
   \   0000009E   0x6A20             LDR      R0,[R4, #+32]
   \   000000A0   0x1C40             ADDS     R0,R0,#+1
   \   000000A2   0x6220             STR      R0,[R4, #+32]
    236          
    237                  case_control = control_t(REPEAT_SETUP_TEARDOWN);
   \                     ??schedule_next_case_10: (+1)
   \   000000A4   0x4668             MOV      R0,SP
   \   000000A6   0x7105             STRB     R5,[R0, #+4]
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0x43C0             MVNS     R0,R0            ;; #-2
   \   000000AC   0x9002             STR      R0,[SP, #+8]
   \   000000AE   0xA801             ADD      R0,SP,#+4
   \   000000B0   0xC803             LDM      R0,{R0,R1}
   \   000000B2   0xC603             STM      R6!,{R0,R1}
    238                  case_index++;
   \   000000B4   0x6AE0             LDR      R0,[R4, #+44]
   \   000000B6   0x1C40             ADDS     R0,R0,#+1
   \   000000B8   0x62E0             STR      R0,[R4, #+44]
    239                  case_current = &test_cases[case_index];
   \   000000BA   0x6961             LDR      R1,[R4, #+20]
   \   000000BC   0x00C2             LSLS     R2,R0,#+3
   \   000000BE   0x1A10             SUBS     R0,R2,R0
   \   000000C0   0x0080             LSLS     R0,R0,#+2
   \   000000C2   0x1808             ADDS     R0,R1,R0
   \   000000C4   0x62A0             STR      R0,[R4, #+40]
    240                  case_passed = 0;
   \   000000C6   0x2100             MOVS     R1,#+0
   \   000000C8   0x63E1             STR      R1,[R4, #+60]
    241                  case_failed = 0;
   \   000000CA   0x6421             STR      R1,[R4, #+64]
    242                  case_failed_before = 0;
   \   000000CC   0x6461             STR      R1,[R4, #+68]
    243                  case_repeat_count = 1;
   \   000000CE   0x2001             MOVS     R0,#+1
   \   000000D0   0x6320             STR      R0,[R4, #+48]
    244                  test_index_of_case++;
   \   000000D2   0x69E0             LDR      R0,[R4, #+28]
   \   000000D4   0x1C40             ADDS     R0,R0,#+1
   \   000000D6   0x61E0             STR      R0,[R4, #+28]
    245              }
    246              scheduler.post(run_next_case, 0);
   \                     ??schedule_next_case_8: (+1)
   \   000000D8   0x2100             MOVS     R1,#+0
   \   000000DA   0x....             LDR      R0,??DataTable5
   \   000000DC   0x6862             LDR      R2,[R4, #+4]
   \   000000DE   0x4790             BLX      R2
    247          }
   \   000000E0   0xB003             ADD      SP,SP,#+12
   \   000000E2   0xBDF0             POP      {R4-R7,PC}       ;; return
    248          

   \                                 In section .text, align 2, keep-with-next
    249          void Harness::handle_timeout()
    250          {
   \                     _ZN5utest2v17Harness14handle_timeoutEv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    251              UTEST_LOG_FUNCTION();
    252              {
    253                  UTEST_ENTER_CRITICAL_SECTION;
   \   00000002   0x.... 0x....      BL       utest_v1_enter_critical_section
    254          
    255                  if (case_timeout_handle != NULL) {
   \   00000006   0x....             LDR      R4,??DataTable7
   \   00000008   0x6B60             LDR      R0,[R4, #+52]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD003             BEQ      ??handle_timeout_0
    256                      case_timeout_handle = NULL;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x6360             STR      R0,[R4, #+52]
    257                      case_timeout_occurred = true;
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x7420             STRB     R0,[R4, #+16]
    258                  }
    259                  UTEST_LEAVE_CRITICAL_SECTION;
   \                     ??handle_timeout_0: (+1)
   \   00000016   0x.... 0x....      BL       utest_v1_leave_critical_section
    260              }
    261              if (case_timeout_occurred) {
   \   0000001A   0x7C20             LDRB     R0,[R4, #+16]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD00C             BEQ      ??handle_timeout_1
    262                  raise_failure(failure_reason_t(REASON_TIMEOUT | ((case_control.repeat & REPEAT_ON_TIMEOUT) ? REASON_IGNORE : 0)));
   \   00000020   0x....             LDR      R0,??DataTable7_1
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x0780             LSLS     R0,R0,#+30
   \   00000026   0xD501             BPL      ??handle_timeout_2
   \   00000028   0x....             LDR      R0,??DataTable7_2  ;; 0x8008
   \   0000002A   0xE000             B        ??handle_timeout_3
   \                     ??handle_timeout_2: (+1)
   \   0000002C   0x2008             MOVS     R0,#+8
   \                     ??handle_timeout_3: (+1)
   \   0000002E   0x.... 0x....      BL       _ZN5utest2v17Harness13raise_failureENS0_16failure_reason_tE
    263                  scheduler.post(schedule_next_case, 0);
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x....             LDR      R0,??DataTable7_3
   \   00000036   0x6862             LDR      R2,[R4, #+4]
   \   00000038   0x4790             BLX      R2
    264              }
    265          }
   \                     ??handle_timeout_1: (+1)
   \   0000003A   0xBD10             POP      {R4,PC}          ;; return
    266          

   \                                 In section .text, align 2, keep-with-next
    267          void Harness::validate_callback(const control_t control)
    268          {
   \                     _ZN5utest2v17Harness17validate_callbackENS0_9control_tE: (+1)
   \   00000000   0xB5F3             PUSH     {R0,R1,R4-R7,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
    269              UTEST_LOG_FUNCTION();
    270              UTEST_ENTER_CRITICAL_SECTION;
   \   00000004   0x.... 0x....      BL       utest_v1_enter_critical_section
    271              case_validation_count++;
   \   00000008   0x....             LDR      R4,??DataTable7
   \   0000000A   0x6BA0             LDR      R0,[R4, #+56]
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
   \   0000000E   0x63A0             STR      R0,[R4, #+56]
    272          
    273              if (case_timeout_handle != NULL || case_control.timeout == TIMEOUT_FOREVER)
   \   00000010   0x6B60             LDR      R0,[R4, #+52]
   \   00000012   0x....             LDR      R5,??DataTable7_1
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD104             BNE      ??validate_callback_0
   \   00000018   0x6869             LDR      R1,[R5, #+4]
   \   0000001A   0x2202             MOVS     R2,#+2
   \   0000001C   0x43D2             MVNS     R2,R2            ;; #-3
   \   0000001E   0x4291             CMP      R1,R2
   \   00000020   0xD147             BNE      ??validate_callback_1
    274              {
    275                  scheduler.cancel(case_timeout_handle);
   \                     ??validate_callback_0: (+1)
   \   00000022   0x68A1             LDR      R1,[R4, #+8]
   \   00000024   0x4788             BLX      R1
    276                  case_timeout_handle = NULL;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x6360             STR      R0,[R4, #+52]
    277                  control_t merged_control = case_control + control;
   \   0000002A   0xCD03             LDM      R5!,{R0,R1}
   \   0000002C   0x3D08             SUBS     R5,R5,#+8
   \   0000002E   0xAA02             ADD      R2,SP,#+8
   \   00000030   0xC203             STM      R2!,{R0,R1}
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0x43D2             MVNS     R2,R2            ;; #-1
   \   00000036   0x9806             LDR      R0,[SP, #+24]
   \   00000038   0x4290             CMP      R0,R2
   \   0000003A   0xD100             BNE      ??validate_callback_2
   \   0000003C   0x0011             MOVS     R1,R2
   \                     ??validate_callback_2: (+1)
   \   0000003E   0x466B             MOV      R3,SP
   \   00000040   0x466E             MOV      R6,SP
   \   00000042   0x7A36             LDRB     R6,[R6, #+8]
   \   00000044   0x466F             MOV      R7,SP
   \   00000046   0x7D3F             LDRB     R7,[R7, #+20]
   \   00000048   0x4337             ORRS     R7,R7,R6
   \   0000004A   0x701F             STRB     R7,[R3, #+0]
   \   0000004C   0x9101             STR      R1,[SP, #+4]
   \   0000004E   0x4291             CMP      R1,R2
   \   00000050   0xD002             BEQ      ??validate_callback_3
   \   00000052   0x4288             CMP      R0,R1
   \   00000054   0xD200             BCS      ??validate_callback_3
   \   00000056   0x9001             STR      R0,[SP, #+4]
   \                     ??validate_callback_3: (+1)
   \   00000058   0x4668             MOV      R0,SP
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
   \   0000005C   0x07C0             LSLS     R0,R0,#+31
   \   0000005E   0xD503             BPL      ??validate_callback_4
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x4669             MOV      R1,SP
   \   00000064   0x7008             STRB     R0,[R1, #+0]
   \   00000066   0xE016             B        ??validate_callback_5
   \                     ??validate_callback_4: (+1)
   \   00000068   0x4668             MOV      R0,SP
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0x06C0             LSLS     R0,R0,#+27
   \   0000006E   0xD505             BPL      ??validate_callback_6
   \   00000070   0x4668             MOV      R0,SP
   \   00000072   0x4669             MOV      R1,SP
   \   00000074   0x7809             LDRB     R1,[R1, #+0]
   \   00000076   0x23F7             MOVS     R3,#+247
   \   00000078   0x400B             ANDS     R3,R3,R1
   \   0000007A   0x7003             STRB     R3,[R0, #+0]
   \                     ??validate_callback_6: (+1)
   \   0000007C   0x9801             LDR      R0,[SP, #+4]
   \   0000007E   0x4290             CMP      R0,R2
   \   00000080   0xD109             BNE      ??validate_callback_5
   \   00000082   0x4668             MOV      R0,SP
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x0780             LSLS     R0,R0,#+30
   \   00000088   0xD505             BPL      ??validate_callback_5
   \   0000008A   0x4668             MOV      R0,SP
   \   0000008C   0x4669             MOV      R1,SP
   \   0000008E   0x7809             LDRB     R1,[R1, #+0]
   \   00000090   0x23FD             MOVS     R3,#+253
   \   00000092   0x400B             ANDS     R3,R3,R1
   \   00000094   0x7003             STRB     R3,[R0, #+0]
   \                     ??validate_callback_5: (+1)
   \   00000096   0x4668             MOV      R0,SP
   \   00000098   0xC803             LDM      R0,{R0,R1}
   \   0000009A   0xAB02             ADD      R3,SP,#+8
   \   0000009C   0xC303             STM      R3!,{R0,R1}
    278                  case_control.repeat = repeat_t(merged_control.repeat & ~REPEAT_ON_TIMEOUT);
   \   0000009E   0x4668             MOV      R0,SP
   \   000000A0   0x7A00             LDRB     R0,[R0, #+8]
   \   000000A2   0x21FD             MOVS     R1,#+253
   \   000000A4   0x4001             ANDS     R1,R1,R0
   \   000000A6   0x7029             STRB     R1,[R5, #+0]
    279                  case_control.timeout = TIMEOUT_NONE;
   \   000000A8   0x606A             STR      R2,[R5, #+4]
    280                  scheduler.post(schedule_next_case, 0);
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0x....             LDR      R0,??DataTable8
   \   000000AE   0x6862             LDR      R2,[R4, #+4]
   \   000000B0   0x4790             BLX      R2
    281              }
    282              UTEST_LEAVE_CRITICAL_SECTION;
   \                     ??validate_callback_1: (+1)
   \   000000B2   0x.... 0x....      BL       utest_v1_leave_critical_section
    283          }
   \   000000B6   0xB007             ADD      SP,SP,#+28
   \   000000B8   0xBDF0             POP      {R4-R7,PC}       ;; return
    284          

   \                                 In section .text, align 2, keep-with-next
    285          bool Harness::is_busy()
    286          {
   \                     _ZN5utest2v17Harness7is_busyEv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    287              UTEST_LOG_FUNCTION();
    288              UTEST_ENTER_CRITICAL_SECTION;
   \   00000002   0x.... 0x....      BL       utest_v1_enter_critical_section
    289              bool res = false;
   \   00000006   0x2400             MOVS     R4,#+0
    290              
    291              if (test_cases && case_current) {    
   \   00000008   0x....             LDR      R0,??DataTable8_1
   \   0000000A   0x6941             LDR      R1,[R0, #+20]
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD00A             BEQ      ??is_busy_0
   \   00000010   0x6A82             LDR      R2,[R0, #+40]
   \   00000012   0x2A00             CMP      R2,#+0
   \   00000014   0xD007             BEQ      ??is_busy_0
    292                  res = (case_current < (test_cases + test_length));
   \   00000016   0x6980             LDR      R0,[R0, #+24]
   \   00000018   0x00C3             LSLS     R3,R0,#+3
   \   0000001A   0x1A18             SUBS     R0,R3,R0
   \   0000001C   0x0080             LSLS     R0,R0,#+2
   \   0000001E   0x1808             ADDS     R0,R1,R0
   \   00000020   0x4282             CMP      R2,R0
   \   00000022   0xD200             BCS      ??is_busy_0
   \   00000024   0x2401             MOVS     R4,#+1
    293              }
    294              
    295              UTEST_LEAVE_CRITICAL_SECTION;
   \                     ??is_busy_0: (+1)
   \   00000026   0x.... 0x....      BL       utest_v1_leave_critical_section
    296              return res;
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xBD10             POP      {R4,PC}          ;; return
    297          }
    298          

   \                                 In section .text, align 2, keep-with-next
    299          void Harness::run_next_case()
    300          {
   \                     _ZN5utest2v17Harness13run_next_caseEv: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    301              UTEST_LOG_FUNCTION();
    302              if(case_current < (test_cases + test_length))
   \   00000004   0x....             LDR      R4,??DataTable8_1
   \   00000006   0x6AA0             LDR      R0,[R4, #+40]
   \   00000008   0x6961             LDR      R1,[R4, #+20]
   \   0000000A   0x69A2             LDR      R2,[R4, #+24]
   \   0000000C   0x00D3             LSLS     R3,R2,#+3
   \   0000000E   0x1A9A             SUBS     R2,R3,R2
   \   00000010   0x0092             LSLS     R2,R2,#+2
   \   00000012   0x1889             ADDS     R1,R1,R2
   \   00000014   0x4288             CMP      R0,R1
   \   00000016   0xD300             BCC      .+4
   \   00000018   0xE113             B        ??run_next_case_0
    303              {
    304                  handlers->case_setup    = defaults->get_handler(case_current->setup_handler);
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0x3064             ADDS     R0,R0,#+100
   \   0000001E   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000022   0x0005             MOVS     R5,R0
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x3048             ADDS     R0,R0,#+72
   \   00000028   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000002C   0x6AA1             LDR      R1,[R4, #+40]
   \   0000002E   0x6909             LDR      R1,[R1, #+16]
   \   00000030   0x2901             CMP      R1,#+1
   \   00000032   0xD100             BNE      ??run_next_case_1
   \   00000034   0x68C1             LDR      R1,[R0, #+12]
   \                     ??run_next_case_1: (+1)
   \   00000036   0x60E9             STR      R1,[R5, #+12]
    305                  handlers->case_teardown = defaults->get_handler(case_current->teardown_handler);
   \   00000038   0x0020             MOVS     R0,R4
   \   0000003A   0x3064             ADDS     R0,R0,#+100
   \   0000003C   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000040   0x0005             MOVS     R5,R0
   \   00000042   0x0020             MOVS     R0,R4
   \   00000044   0x3048             ADDS     R0,R0,#+72
   \   00000046   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000004A   0x6AA1             LDR      R1,[R4, #+40]
   \   0000004C   0x6949             LDR      R1,[R1, #+20]
   \   0000004E   0x2901             CMP      R1,#+1
   \   00000050   0xD100             BNE      ??run_next_case_2
   \   00000052   0x6901             LDR      R1,[R0, #+16]
   \                     ??run_next_case_2: (+1)
   \   00000054   0x6129             STR      R1,[R5, #+16]
    306                  handlers->case_failure  = defaults->get_handler(case_current->failure_handler);
   \   00000056   0x0020             MOVS     R0,R4
   \   00000058   0x3064             ADDS     R0,R0,#+100
   \   0000005A   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000005E   0x0005             MOVS     R5,R0
   \   00000060   0x0020             MOVS     R0,R4
   \   00000062   0x3048             ADDS     R0,R0,#+72
   \   00000064   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000068   0x0001             MOVS     R1,R0
   \   0000006A   0x6AA0             LDR      R0,[R4, #+40]
   \   0000006C   0x6982             LDR      R2,[R0, #+24]
   \   0000006E   0x2A01             CMP      R2,#+1
   \   00000070   0xD100             BNE      ??run_next_case_3
   \   00000072   0x694A             LDR      R2,[R1, #+20]
   \                     ??run_next_case_3: (+1)
   \   00000074   0x616A             STR      R2,[R5, #+20]
    307          
    308                  if (case_current->is_empty()) {
   \   00000076   0x.... 0x....      BL       _ZNK5utest2v14Case8is_emptyEv
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD003             BEQ      ??run_next_case_4
    309                      location = LOCATION_UNKNOWN;
   \   0000007E   0x2006             MOVS     R0,#+6
   \   00000080   0x7460             STRB     R0,[R4, #+17]
    310                      raise_failure(REASON_EMPTY_CASE);
   \   00000082   0x2004             MOVS     R0,#+4
   \   00000084   0xE02B             B.N      ??run_next_case_5
    311                      schedule_next_case();
    312                      return;
    313                  }
    314          
    315                  repeat_t setup_repeat;
    316                  {
    317                      UTEST_ENTER_CRITICAL_SECTION;
   \                     ??run_next_case_4: (+1)
   \   00000086   0x.... 0x....      BL       utest_v1_enter_critical_section
    318                      case_validation_count = 0;
   \   0000008A   0x2500             MOVS     R5,#+0
   \   0000008C   0x63A5             STR      R5,[R4, #+56]
    319                      case_timeout_occurred = false;
   \   0000008E   0x7425             STRB     R5,[R4, #+16]
    320                      setup_repeat = case_control.repeat;
   \   00000090   0x....             LDR      R6,??DataTable8_2
   \   00000092   0x7837             LDRB     R7,[R6, #+0]
    321                      case_control = control_t();
   \   00000094   0x4668             MOV      R0,SP
   \   00000096   0x7405             STRB     R5,[R0, #+16]
   \   00000098   0x2001             MOVS     R0,#+1
   \   0000009A   0x43C0             MVNS     R0,R0            ;; #-2
   \   0000009C   0x9005             STR      R0,[SP, #+20]
   \   0000009E   0xA804             ADD      R0,SP,#+16
   \   000000A0   0xC803             LDM      R0,{R0,R1}
   \   000000A2   0xC603             STM      R6!,{R0,R1}
   \   000000A4   0x3E08             SUBS     R6,R6,#+8
    322                      UTEST_LEAVE_CRITICAL_SECTION;
   \   000000A6   0x.... 0x....      BL       utest_v1_leave_critical_section
    323                  }
    324          
    325                  if (setup_repeat & REPEAT_SETUP_TEARDOWN) {
   \   000000AA   0x2510             MOVS     R5,#+16
   \   000000AC   0x422F             TST      R7,R5
   \   000000AE   0xD01B             BEQ      ??run_next_case_6
    326                      location = LOCATION_CASE_SETUP;
   \   000000B0   0x2003             MOVS     R0,#+3
   \   000000B2   0x7460             STRB     R0,[R4, #+17]
    327                      if (handlers->case_setup && (handlers->case_setup(case_current, test_index_of_case) != STATUS_CONTINUE)) {
   \   000000B4   0x0020             MOVS     R0,R4
   \   000000B6   0x3064             ADDS     R0,R0,#+100
   \   000000B8   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000000BC   0x68C0             LDR      R0,[R0, #+12]
   \   000000BE   0x2800             CMP      R0,#+0
   \   000000C0   0xD012             BEQ      ??run_next_case_6
   \   000000C2   0x0020             MOVS     R0,R4
   \   000000C4   0x3064             ADDS     R0,R0,#+100
   \   000000C6   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   000000CA   0x0002             MOVS     R2,R0
   \   000000CC   0x69E1             LDR      R1,[R4, #+28]
   \   000000CE   0x6AA0             LDR      R0,[R4, #+40]
   \   000000D0   0x68D2             LDR      R2,[R2, #+12]
   \   000000D2   0x4790             BLX      R2
   \   000000D4   0x2100             MOVS     R1,#+0
   \   000000D6   0x43C9             MVNS     R1,R1            ;; #-1
   \   000000D8   0x4288             CMP      R0,R1
   \   000000DA   0xD005             BEQ      ??run_next_case_6
    328                          raise_failure(REASON_CASE_SETUP);
   \   000000DC   0x2080             MOVS     R0,#+128
   \                     ??run_next_case_5: (+1)
   \   000000DE   0x.... 0x....      BL       _ZN5utest2v17Harness13raise_failureENS0_16failure_reason_tE
    329                          schedule_next_case();
   \   000000E2   0x.... 0x....      BL       _ZN5utest2v17Harness18schedule_next_caseEv
    330                          return;
   \   000000E6   0xE0CF             B        ??run_next_case_7
    331                      }
    332                  }
    333          
    334                  case_failed_before = case_failed;
   \                     ??run_next_case_6: (+1)
   \   000000E8   0x6C20             LDR      R0,[R4, #+64]
   \   000000EA   0x6460             STR      R0,[R4, #+68]
    335                  location = LOCATION_CASE_HANDLER;
   \   000000EC   0x2004             MOVS     R0,#+4
   \   000000EE   0x7460             STRB     R0,[R4, #+17]
    336          
    337                  if (case_current->handler) {
   \   000000F0   0x6AA0             LDR      R0,[R4, #+40]
   \   000000F2   0x6841             LDR      R1,[R0, #+4]
   \   000000F4   0x000A             MOVS     R2,R1
   \   000000F6   0xD001             BEQ      ??run_next_case_8
    338                      case_current->handler();
   \   000000F8   0x4788             BLX      R1
   \   000000FA   0xE07A             B        ??run_next_case_9
    339                  } else if (case_current->control_handler) {
   \                     ??run_next_case_8: (+1)
   \   000000FC   0x6881             LDR      R1,[R0, #+8]
   \   000000FE   0x2700             MOVS     R7,#+0
   \   00000100   0x43FF             MVNS     R7,R7            ;; #-1
   \   00000102   0x000A             MOVS     R2,R1
   \   00000104   0xD037             BEQ      ??run_next_case_10
    340                      case_control = case_control + case_current->control_handler();
   \   00000106   0xA804             ADD      R0,SP,#+16
   \   00000108   0x4788             BLX      R1
   \   0000010A   0xCE03             LDM      R6!,{R0,R1}
   \   0000010C   0x3E08             SUBS     R6,R6,#+8
   \   0000010E   0x466A             MOV      R2,SP
   \   00000110   0xC203             STM      R2!,{R0,R1}
   \   00000112   0x9805             LDR      R0,[SP, #+20]
   \   00000114   0x42B8             CMP      R0,R7
   \   00000116   0xD100             BNE      ??run_next_case_11
   \   00000118   0x0039             MOVS     R1,R7
   \                     ??run_next_case_11: (+1)
   \   0000011A   0x466A             MOV      R2,SP
   \   0000011C   0x7812             LDRB     R2,[R2, #+0]
   \   0000011E   0x466B             MOV      R3,SP
   \   00000120   0x7C1B             LDRB     R3,[R3, #+16]
   \   00000122   0x4313             ORRS     R3,R3,R2
   \   00000124   0x466A             MOV      R2,SP
   \   00000126   0x7213             STRB     R3,[R2, #+8]
   \   00000128   0x9103             STR      R1,[SP, #+12]
   \   0000012A   0x42B9             CMP      R1,R7
   \   0000012C   0xD002             BEQ      ??run_next_case_12
   \   0000012E   0x4288             CMP      R0,R1
   \   00000130   0xD200             BCS      ??run_next_case_12
   \   00000132   0x9003             STR      R0,[SP, #+12]
   \                     ??run_next_case_12: (+1)
   \   00000134   0x4668             MOV      R0,SP
   \   00000136   0x7A00             LDRB     R0,[R0, #+8]
   \   00000138   0x07C0             LSLS     R0,R0,#+31
   \   0000013A   0xD503             BPL      ??run_next_case_13
   \   0000013C   0x2001             MOVS     R0,#+1
   \   0000013E   0x4669             MOV      R1,SP
   \   00000140   0x7208             STRB     R0,[R1, #+8]
   \   00000142   0xE016             B        ??run_next_case_14
   \                     ??run_next_case_13: (+1)
   \   00000144   0x4668             MOV      R0,SP
   \   00000146   0x7A00             LDRB     R0,[R0, #+8]
   \   00000148   0x4228             TST      R0,R5
   \   0000014A   0xD005             BEQ      ??run_next_case_15
   \   0000014C   0x4668             MOV      R0,SP
   \   0000014E   0x7A00             LDRB     R0,[R0, #+8]
   \   00000150   0x21F7             MOVS     R1,#+247
   \   00000152   0x4001             ANDS     R1,R1,R0
   \   00000154   0x4668             MOV      R0,SP
   \   00000156   0x7201             STRB     R1,[R0, #+8]
   \                     ??run_next_case_15: (+1)
   \   00000158   0x9803             LDR      R0,[SP, #+12]
   \   0000015A   0x42B8             CMP      R0,R7
   \   0000015C   0xD109             BNE      ??run_next_case_14
   \   0000015E   0x4668             MOV      R0,SP
   \   00000160   0x7A00             LDRB     R0,[R0, #+8]
   \   00000162   0x0780             LSLS     R0,R0,#+30
   \   00000164   0xD505             BPL      ??run_next_case_14
   \   00000166   0x4668             MOV      R0,SP
   \   00000168   0x7A00             LDRB     R0,[R0, #+8]
   \   0000016A   0x21FD             MOVS     R1,#+253
   \   0000016C   0x4001             ANDS     R1,R1,R0
   \   0000016E   0x4668             MOV      R0,SP
   \   00000170   0x7201             STRB     R1,[R0, #+8]
    341                  } else if (case_current->repeat_count_handler) {
   \                     ??run_next_case_14: (+1)
   \   00000172   0xA802             ADD      R0,SP,#+8
   \   00000174   0xE03A             B        ??run_next_case_16
   \                     ??run_next_case_10: (+1)
   \   00000176   0x68C2             LDR      R2,[R0, #+12]
   \   00000178   0x0010             MOVS     R0,R2
   \   0000017A   0xD03A             BEQ      ??run_next_case_9
    342                      case_control = case_control + case_current->repeat_count_handler(case_repeat_count);
   \   0000017C   0x6B21             LDR      R1,[R4, #+48]
   \   0000017E   0xA802             ADD      R0,SP,#+8
   \   00000180   0x4790             BLX      R2
   \   00000182   0xCE03             LDM      R6!,{R0,R1}
   \   00000184   0x3E08             SUBS     R6,R6,#+8
   \   00000186   0xAA04             ADD      R2,SP,#+16
   \   00000188   0xC203             STM      R2!,{R0,R1}
   \   0000018A   0x9803             LDR      R0,[SP, #+12]
   \   0000018C   0x42B8             CMP      R0,R7
   \   0000018E   0xD100             BNE      ??run_next_case_17
   \   00000190   0x0039             MOVS     R1,R7
   \                     ??run_next_case_17: (+1)
   \   00000192   0x466A             MOV      R2,SP
   \   00000194   0x7C12             LDRB     R2,[R2, #+16]
   \   00000196   0x466B             MOV      R3,SP
   \   00000198   0x7A1B             LDRB     R3,[R3, #+8]
   \   0000019A   0x4313             ORRS     R3,R3,R2
   \   0000019C   0x466A             MOV      R2,SP
   \   0000019E   0x7013             STRB     R3,[R2, #+0]
   \   000001A0   0x9101             STR      R1,[SP, #+4]
   \   000001A2   0x42B9             CMP      R1,R7
   \   000001A4   0xD002             BEQ      ??run_next_case_18
   \   000001A6   0x4288             CMP      R0,R1
   \   000001A8   0xD200             BCS      ??run_next_case_18
   \   000001AA   0x9001             STR      R0,[SP, #+4]
   \                     ??run_next_case_18: (+1)
   \   000001AC   0x4668             MOV      R0,SP
   \   000001AE   0x7800             LDRB     R0,[R0, #+0]
   \   000001B0   0x07C0             LSLS     R0,R0,#+31
   \   000001B2   0xD503             BPL      ??run_next_case_19
   \   000001B4   0x2001             MOVS     R0,#+1
   \   000001B6   0x4669             MOV      R1,SP
   \   000001B8   0x7008             STRB     R0,[R1, #+0]
   \   000001BA   0xE016             B        ??run_next_case_20
   \                     ??run_next_case_19: (+1)
   \   000001BC   0x4668             MOV      R0,SP
   \   000001BE   0x7800             LDRB     R0,[R0, #+0]
   \   000001C0   0x4228             TST      R0,R5
   \   000001C2   0xD005             BEQ      ??run_next_case_21
   \   000001C4   0x4668             MOV      R0,SP
   \   000001C6   0x7800             LDRB     R0,[R0, #+0]
   \   000001C8   0x21F7             MOVS     R1,#+247
   \   000001CA   0x4001             ANDS     R1,R1,R0
   \   000001CC   0x4668             MOV      R0,SP
   \   000001CE   0x7001             STRB     R1,[R0, #+0]
   \                     ??run_next_case_21: (+1)
   \   000001D0   0x9801             LDR      R0,[SP, #+4]
   \   000001D2   0x42B8             CMP      R0,R7
   \   000001D4   0xD109             BNE      ??run_next_case_20
   \   000001D6   0x4668             MOV      R0,SP
   \   000001D8   0x7800             LDRB     R0,[R0, #+0]
   \   000001DA   0x0780             LSLS     R0,R0,#+30
   \   000001DC   0xD505             BPL      ??run_next_case_20
   \   000001DE   0x4668             MOV      R0,SP
   \   000001E0   0x7800             LDRB     R0,[R0, #+0]
   \   000001E2   0x21FD             MOVS     R1,#+253
   \   000001E4   0x4001             ANDS     R1,R1,R0
   \   000001E6   0x4668             MOV      R0,SP
   \   000001E8   0x7001             STRB     R1,[R0, #+0]
    343                  }
   \                     ??run_next_case_20: (+1)
   \   000001EA   0x4668             MOV      R0,SP
   \                     ??run_next_case_16: (+1)
   \   000001EC   0xC803             LDM      R0,{R0,R1}
   \   000001EE   0xC603             STM      R6!,{R0,R1}
   \   000001F0   0x3E08             SUBS     R6,R6,#+8
    344                  case_repeat_count++;
   \                     ??run_next_case_9: (+1)
   \   000001F2   0x6B20             LDR      R0,[R4, #+48]
   \   000001F4   0x1C40             ADDS     R0,R0,#+1
   \   000001F6   0x6320             STR      R0,[R4, #+48]
    345          
    346                  {
    347                      UTEST_ENTER_CRITICAL_SECTION;
   \   000001F8   0x.... 0x....      BL       utest_v1_enter_critical_section
    348                      if (case_validation_count) case_control.repeat = repeat_t(case_control.repeat & ~REPEAT_ON_TIMEOUT);
   \   000001FC   0x6BA0             LDR      R0,[R4, #+56]
   \   000001FE   0x2800             CMP      R0,#+0
   \   00000200   0xD00A             BEQ      ??run_next_case_22
   \   00000202   0x7830             LDRB     R0,[R6, #+0]
   \   00000204   0x21FD             MOVS     R1,#+253
   \   00000206   0x4001             ANDS     R1,R1,R0
   \   00000208   0x7031             STRB     R1,[R6, #+0]
    349          
    350                      // if timeout valid
    351                      if (case_control.timeout < TIMEOUT_UNDECLR && case_validation_count == 0) {
    352                          // if await validation _with_ timeout
    353                          if (case_control.timeout < TIMEOUT_FOREVER) {
    354                              case_timeout_handle = scheduler.post(handle_timeout, case_control.timeout);
    355                              if (case_timeout_handle == NULL) {
    356                                  raise_failure(REASON_SCHEDULER);
    357                                  schedule_next_case();
    358                              }
    359                          }
    360                      }
    361                      else {
    362                          scheduler.post(schedule_next_case, 0);
   \                     ??run_next_case_23: (+1)
   \   0000020A   0x2100             MOVS     R1,#+0
   \   0000020C   0x....             LDR      R0,??DataTable8
   \   0000020E   0x6862             LDR      R2,[R4, #+4]
   \   00000210   0x4790             BLX      R2
    363                      }
    364                      UTEST_LEAVE_CRITICAL_SECTION;
   \                     ??run_next_case_24: (+1)
   \   00000212   0x.... 0x....      BL       utest_v1_leave_critical_section
    365                  }
    366              }
    367              else if (handlers->test_teardown) {
    368                  location = LOCATION_TEST_TEARDOWN;
    369                  handlers->test_teardown(test_passed, test_failed, test_failed ? failure_t(REASON_CASES, LOCATION_UNKNOWN) : failure_t(REASON_NONE));
    370                  test_cases = NULL;
    371                  exit(test_failed);
    372              } else {
    373                  exit(test_failed);
    374              }
    375          }
   \   00000216   0xE037             B        ??run_next_case_7
   \                     ??run_next_case_22: (+1)
   \   00000218   0x6871             LDR      R1,[R6, #+4]
   \   0000021A   0x2001             MOVS     R0,#+1
   \   0000021C   0x43C0             MVNS     R0,R0            ;; #-2
   \   0000021E   0x4281             CMP      R1,R0
   \   00000220   0xD2F3             BCS      ??run_next_case_23
   \   00000222   0x2002             MOVS     R0,#+2
   \   00000224   0x43C0             MVNS     R0,R0            ;; #-3
   \   00000226   0x4281             CMP      R1,R0
   \   00000228   0xD2F3             BCS      ??run_next_case_24
   \   0000022A   0x....             LDR      R0,??DataTable8_3
   \   0000022C   0x6862             LDR      R2,[R4, #+4]
   \   0000022E   0x4790             BLX      R2
   \   00000230   0x6360             STR      R0,[R4, #+52]
   \   00000232   0x2800             CMP      R0,#+0
   \   00000234   0xD1ED             BNE      ??run_next_case_24
   \   00000236   0x01E8             LSLS     R0,R5,#+7
   \   00000238   0x.... 0x....      BL       _ZN5utest2v17Harness13raise_failureENS0_16failure_reason_tE
   \   0000023C   0x.... 0x....      BL       _ZN5utest2v17Harness18schedule_next_caseEv
   \   00000240   0xE7E7             B        ??run_next_case_24
   \                     ??run_next_case_0: (+1)
   \   00000242   0x0020             MOVS     R0,R4
   \   00000244   0x3064             ADDS     R0,R0,#+100
   \   00000246   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   0000024A   0x0001             MOVS     R1,R0
   \   0000024C   0x6A60             LDR      R0,[R4, #+36]
   \   0000024E   0x6849             LDR      R1,[R1, #+4]
   \   00000250   0x2900             CMP      R1,#+0
   \   00000252   0xD017             BEQ      ??run_next_case_25
   \   00000254   0x2102             MOVS     R1,#+2
   \   00000256   0x7461             STRB     R1,[R4, #+17]
   \   00000258   0xAA06             ADD      R2,SP,#+24
   \   0000025A   0x2500             MOVS     R5,#+0
   \   0000025C   0x2800             CMP      R0,#+0
   \   0000025E   0xD003             BEQ      ??run_next_case_26
   \   00000260   0x8011             STRH     R1,[R2, #+0]
   \   00000262   0x2006             MOVS     R0,#+6
   \   00000264   0x7090             STRB     R0,[R2, #+2]
   \   00000266   0xE001             B        ??run_next_case_27
   \                     ??run_next_case_26: (+1)
   \   00000268   0x8015             STRH     R5,[R2, #+0]
   \   0000026A   0x7095             STRB     R5,[R2, #+2]
   \                     ??run_next_case_27: (+1)
   \   0000026C   0x0020             MOVS     R0,R4
   \   0000026E   0x3064             ADDS     R0,R0,#+100
   \   00000270   0x.... 0x....      BL       _ZN12SingletonPtrIN41_GLOBAL__N__17_utest_harness_cpp_5402fd7915DefaultHandlersEE3getEv
   \   00000274   0x0003             MOVS     R3,R0
   \   00000276   0xAA06             ADD      R2,SP,#+24
   \   00000278   0x6A61             LDR      R1,[R4, #+36]
   \   0000027A   0x6A20             LDR      R0,[R4, #+32]
   \   0000027C   0x685B             LDR      R3,[R3, #+4]
   \   0000027E   0x4798             BLX      R3
   \   00000280   0x6165             STR      R5,[R4, #+20]
   \   00000282   0x6A60             LDR      R0,[R4, #+36]
   \                     ??run_next_case_25: (+1)
   \   00000284   0x.... 0x....      BL       exit
   \                     ??run_next_case_7: (+1)
   \   00000288   0xB007             ADD      SP,SP,#+28
   \   0000028A   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd799schedulerE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd799schedulerE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     _ZN5utest2v17Harness13run_next_caseEv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd799schedulerE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7912case_controlE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x00008008         DC32     0x8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     _ZN5utest2v17Harness18schedule_next_caseEv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     _ZN5utest2v17Harness18schedule_next_caseEv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd799schedulerE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     _ZN41_GLOBAL__N__17_utest_harness_cpp_5402fd7912case_controlE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     _ZN5utest2v17Harness14handle_timeoutEv

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   SingletonPtr<<unnamed>::DefaultHandlers>::get()
        16   -> __aeabi_memcpy4
        16   -> mbed_assert_internal
        16   -> osMutexAcquire
        16   -> osMutexRelease
      16   is_scheduler_valid(utest_v1_scheduler_t)
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
         8   -- Indirect call
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       0   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      12   mbed::callback<>(void (*)(void *), void *)
       8   utest::v1::Harness::handle_timeout()
         8   -- Indirect call
         8   -> utest::v1::Harness::raise_failure(utest::v1::failure_reason_t)
         8   -> utest_v1_enter_critical_section
         8   -> utest_v1_leave_critical_section
       8   utest::v1::Harness::is_busy()
         8   -> utest_v1_enter_critical_section
         8   -> utest_v1_leave_critical_section
      16   utest::v1::Harness::notify_testcases()
        16   -> utest::v1::Case::get_description() const
        16   -> utest::v1::greentea_testcase_notification_handler(char const *)
      32   utest::v1::Harness::raise_failure(utest::v1::failure_reason_t)
        32   -- Indirect call
        32   -> SingletonPtr<<unnamed>::DefaultHandlers>::get()
        32   -> std::exit
        32   -> utest::v1::Harness::raise_failure(utest::v1::failure_reason_t)
        32   -> utest_v1_enter_critical_section
        32   -> utest_v1_leave_critical_section
      72   utest::v1::Harness::run(utest::v1::Specification const &)
        72   -- Indirect call
        72   -> SingletonPtr<<unnamed>::DefaultHandlers>::get()
        72   -> __aeabi_memcpy4
        72   -> is_scheduler_valid(utest_v1_scheduler_t)
        72   -> std::exit
        72   -> utest::v1::Case::get_description() const
        72   -> utest::v1::Harness::is_busy()
        72   -> utest::v1::greentea_testcase_notification_handler(char const *)
        72   -> utest_v1_get_scheduler
       8   utest::v1::Harness::run(utest::v1::Specification const &, std::size_t)
         8   -> utest::v1::Harness::run(utest::v1::Specification const &)
      48   utest::v1::Harness::run_next_case()
        48   -- Indirect call
        48   -> SingletonPtr<<unnamed>::DefaultHandlers>::get()
        48   -> std::exit
        48   -> utest::v1::Case::is_empty() const
        48   -> utest::v1::Harness::raise_failure(utest::v1::failure_reason_t)
        48   -> utest::v1::Harness::schedule_next_case()
        48   -> utest_v1_enter_critical_section
        48   -> utest_v1_leave_critical_section
      32   utest::v1::Harness::schedule_next_case()
        32   -- Indirect call
        32   -> SingletonPtr<<unnamed>::DefaultHandlers>::get()
        32   -> utest::v1::Harness::raise_failure(utest::v1::failure_reason_t)
      24   utest::v1::Harness::set_scheduler(utest_v1_scheduler_t)
        24   -> __aeabi_memcpy4
        24   -> is_scheduler_valid(utest_v1_scheduler_t)
      48   utest::v1::Harness::validate_callback(utest::v1::control_t)
        48   -- Indirect call
        48   -> utest_v1_enter_critical_section
        48   -> utest_v1_leave_critical_section


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  <unnamed>::case_control
     128  <unnamed>::scheduler
          <unnamed>::case_timeout_occurred
          <unnamed>::location
          <unnamed>::test_cases
          <unnamed>::test_length
          <unnamed>::test_index_of_case
          <unnamed>::test_passed
          <unnamed>::test_failed
          <unnamed>::case_current
          <unnamed>::case_index
          <unnamed>::case_repeat_count
          <unnamed>::case_timeout_handle
          <unnamed>::case_validation_count
          <unnamed>::case_passed
          <unnamed>::case_failed
          <unnamed>::case_failed_before
          <unnamed>::defaults
          <unnamed>::handlers
       4  ??DataTable2
       4  ??DataTable3
       4  ??DataTable5
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
      92  SingletonPtr<<unnamed>::DefaultHandlers>::get()
      28  is_scheduler_valid(utest_v1_scheduler_t)
      12  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
      10  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      32  mbed::callback<>(void (*)(void *), void *)
      12  ops
      60  utest::v1::Harness::handle_timeout()
      46  utest::v1::Harness::is_busy()
      34  utest::v1::Harness::notify_testcases()
     340  utest::v1::Harness::raise_failure(utest::v1::failure_reason_t)
     496  utest::v1::Harness::run(utest::v1::Specification const &)
       8  utest::v1::Harness::run(utest::v1::Specification const &, std::size_t)
     652  utest::v1::Harness::run_next_case()
     228  utest::v1::Harness::schedule_next_case()
      32  utest::v1::Harness::set_scheduler(utest_v1_scheduler_t)
     186  utest::v1::Harness::validate_callback(utest::v1::control_t)
     388  -- Other

 
   136 bytes in section .data
   400 bytes in section .rodata
 2 302 bytes in section .text
 
 2 154 bytes of CODE  memory (+ 148 bytes shared)
     0 bytes of CONST memory (+ 400 bytes shared)
   136 bytes of DATA  memory

Errors: none
Warnings: none
