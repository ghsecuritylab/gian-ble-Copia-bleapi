###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       16/Mar/2018  12:16:20
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  .\mbed-os\features\frameworks\utest\source\utest_types.cpp
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --c++ --no_rtti --no_exceptions --guard_calls
#        --no_static_destruction -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DDEVICE_SERIAL=1 -DTARGET_CORTEX_M -DDEVICE_SPI=1 -DTARGET_LIKE_MBED
#        -DMBED_BUILD_TIMESTAMP=1521198946.13 -DARM_MATH_CM0 -DTARGET_RELEASE
#        -D__CORTEX_M0 -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0
#        -DTOOLCHAIN_object -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -f
#        .\BUILD\STEVAL_IDB007V1\iar\.includes_fc2e77952737cb4522ab0dffe8cfd8aa.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN
#        -I./mbed-os/features/frameworks
#        -I./mbed-os/features/frameworks/greentea-client
#        -I./mbed-os/features/frameworks/greentea-client/greentea-client
#        -I./mbed-os/features/frameworks/greentea-client/source
#        -I./mbed-os/features/frameworks/unity
#        -I./mbed-os/features/frameworks/unity/source
#        -I./mbed-os/features/frameworks/unity/unity
#        -I./mbed-os/features/frameworks/utest
#        -I./mbed-os/features/frameworks/utest/source
#        -I./mbed-os/features/frameworks/utest/utest
#        -I./mbed-os/features/mbedtls -I./mbed-os/features/mbedtls/importer
#        -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/features/netsocket
#        -I./mbed-os/features/netsocket/cellular
#        -I./mbed-os/features/netsocket/cellular/generic_modem_driver
#        -I./mbed-os/features/netsocket/cellular/utils
#        -I./mbed-os/features/storage -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\iar\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_types.d
#        -l
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_types.s.txt
#        -o
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_types.o
#        .\mbed-os\features\frameworks\utest\source\utest_types.cpp
#    Locale       =  Italian_Italy.1252
#    List file    =  
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_types.s.txt
#    Object file  =  
#        .\BUILD\STEVAL_IDB007V1\iar\mbed-os\features\frameworks\utest\source\utest_types.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia\mbed-os\features\frameworks\utest\source\utest_types.cpp
      1          /****************************************************************************
      2           * Copyright (c) 2015, ARM Limited, All Rights Reserved
      3           * SPDX-License-Identifier: Apache-2.0
      4           *
      5           * Licensed under the Apache License, Version 2.0 (the "License"); you may
      6           * not use this file except in compliance with the License.
      7           * You may obtain a copy of the License at
      8           *
      9           * http://www.apache.org/licenses/LICENSE-2.0
     10           *
     11           * Unless required by applicable law or agreed to in writing, software
     12           * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     13           * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     14           * See the License for the specific language governing permissions and
     15           * limitations under the License.
     16           ****************************************************************************
     17           */
     18          
     19           #include "utest/utest_types.h"

   \                                 In section .text, align 4
   \   __code __interwork __softfp mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8CallbackIFvvEEC1IvvEEPFvPT_EPT0_: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xC078             STM      R0!,{R3-R6}
   \   0000000C   0x3810             SUBS     R0,R0,#+16
   \   0000000E   0xD001             BEQ      ??Callback_0
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x6042             STR      R2,[R0, #+4]
   \                     ??Callback_0: (+1)
   \   00000014   0x4901             LDR      R1,??Callback_1
   \   00000016   0x60C1             STR      R1,[R0, #+12]
   \   00000018   0xBC70             POP      {R4-R6}
   \   0000001A   0x4770             BX       LR               ;; return
   \                     ??Callback_1:
   \   0000001C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::function_context<void (*)(void *), void> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x6848             LDR      R0,[R1, #+4]
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x4788             BLX      R1
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD001             BEQ      ??function_move_0
   \   00000004   0xC90C             LDM      R1!,{R2,R3}
   \   00000006   0xC00C             STM      R0!,{R2,R3}
   \                     ??function_move_0: (+1)
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8callbackIvvvEENS_8CallbackIFT1_vEEEPFS2_PT_EPT0_: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEEC1IvvEEPFvPT_EPT0_
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
     20          

   \                                 In section .text, align 4, keep-with-next
     21          const char* utest::v1::stringify(utest::v1::failure_reason_t reason)
     22          {
     23              const char *string;
     24              switch(reason & ~REASON_IGNORE)
   \                     _ZN5utest2v19stringifyENS0_16failure_reason_tE: (+1)
   \   00000000   0x0441             LSLS     R1,R0,#+17
   \   00000002   0x0C49             LSRS     R1,R1,#+17
   \   00000004   0xD01A             BEQ      ??stringify_0
   \   00000006   0x1E89             SUBS     R1,R1,#+2
   \   00000008   0xD01A             BEQ      ??stringify_1
   \   0000000A   0x1E89             SUBS     R1,R1,#+2
   \   0000000C   0xD01A             BEQ      ??stringify_2
   \   0000000E   0x1F09             SUBS     R1,R1,#+4
   \   00000010   0xD01A             BEQ      ??stringify_3
   \   00000012   0x3908             SUBS     R1,R1,#+8
   \   00000014   0xD01A             BEQ      ??stringify_4
   \   00000016   0x3910             SUBS     R1,R1,#+16
   \   00000018   0xD01A             BEQ      ??stringify_5
   \   0000001A   0x3920             SUBS     R1,R1,#+32
   \   0000001C   0xD01A             BEQ      ??stringify_6
   \   0000001E   0x3940             SUBS     R1,R1,#+64
   \   00000020   0xD01A             BEQ      ??stringify_7
   \   00000022   0x3980             SUBS     R1,R1,#+128
   \   00000024   0xD01A             BEQ      ??stringify_8
   \   00000026   0x2280             MOVS     R2,#+128
   \   00000028   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   0000002A   0x1A89             SUBS     R1,R1,R2
   \   0000002C   0xD018             BEQ      ??stringify_9
   \   0000002E   0x0052             LSLS     R2,R2,#+1
   \   00000030   0x1A89             SUBS     R1,R1,R2
   \   00000032   0xD017             BEQ      ??stringify_10
   \   00000034   0x0052             LSLS     R2,R2,#+1
   \   00000036   0x1A89             SUBS     R1,R1,R2
   \   00000038   0xD016             BEQ      ??stringify_11
   \   0000003A   0xE017             B        ??stringify_12
     25              {
     26                  case REASON_NONE:
     27                      string = "Ignored: No Failure";
   \                     ??stringify_0: (+1)
   \   0000003C   0x....             ADR.N    R1,?_0
     28                      break;
   \   0000003E   0xE016             B        ??stringify_13
     29                  case REASON_CASES:
     30                      string = "Ignored: Test Cases Failed";
   \                     ??stringify_1: (+1)
   \   00000040   0x....             ADR.N    R1,?_1
     31                      break;
   \   00000042   0xE014             B        ??stringify_13
     32                  case REASON_EMPTY_CASE:
     33                      string = "Ignored: Test Case is Empty";
   \                     ??stringify_2: (+1)
   \   00000044   0x....             ADR.N    R1,?_2
     34                      break;
   \   00000046   0xE012             B        ??stringify_13
     35                  case REASON_TIMEOUT:
     36                      string = "Ignored: Timed Out";
   \                     ??stringify_3: (+1)
   \   00000048   0x....             ADR.N    R1,?_3
     37                      break;
   \   0000004A   0xE010             B        ??stringify_13
     38                  case REASON_ASSERTION:
     39                      string = "Ignored: Assertion Failed";
   \                     ??stringify_4: (+1)
   \   0000004C   0x....             ADR.N    R1,?_4
     40                      break;
   \   0000004E   0xE00E             B        ??stringify_13
     41                  case REASON_TEST_SETUP:
     42                      string = "Ignored: Test Setup Failed";
   \                     ??stringify_5: (+1)
   \   00000050   0x....             ADR.N    R1,?_5
     43                      break;
   \   00000052   0xE00C             B        ??stringify_13
     44                  case REASON_TEST_TEARDOWN:
     45                      string = "Ignored: Test Teardown Failed";
   \                     ??stringify_6: (+1)
   \   00000054   0x....             ADR.N    R1,?_6
     46                      break;
   \   00000056   0xE00A             B        ??stringify_13
     47                  case REASON_CASE_SETUP:
     48                      string = "Ignored: Case Setup Failed";
   \                     ??stringify_7: (+1)
   \   00000058   0x....             ADR.N    R1,?_7
     49                      break;
   \   0000005A   0xE008             B        ??stringify_13
     50                  case REASON_CASE_HANDLER:
     51                      string = "Ignored: Case Handler Failed";
   \                     ??stringify_8: (+1)
   \   0000005C   0x....             ADR.N    R1,?_8
     52                      break;
   \   0000005E   0xE006             B        ??stringify_13
     53                  case REASON_CASE_TEARDOWN:
     54                      string = "Ignored: Case Teardown Failed";
   \                     ??stringify_9: (+1)
   \   00000060   0x....             ADR.N    R1,?_9
     55                      break;
   \   00000062   0xE004             B        ??stringify_13
     56                  case REASON_CASE_INDEX:
     57                      string = "Ignored: Case Index Invalid";
   \                     ??stringify_10: (+1)
   \   00000064   0x....             ADR.N    R1,?_10
     58                      break;
   \   00000066   0xE002             B        ??stringify_13
     59                  case REASON_SCHEDULER:
     60                      string = "Ignored: Scheduling Asynchronous Callback Failed";
   \                     ??stringify_11: (+1)
   \   00000068   0x....             ADR.N    R1,?_11
     61                      break;
   \   0000006A   0xE000             B        ??stringify_13
     62                  default:
     63                  case REASON_UNKNOWN:
     64                      string = "Ignored: Unknown Failure";
   \                     ??stringify_12: (+1)
   \   0000006C   0x....             ADR.N    R1,?_12
     65                      break;
     66              }
     67              if (!(reason & REASON_IGNORE)) string += 9;
   \                     ??stringify_13: (+1)
   \   0000006E   0x0400             LSLS     R0,R0,#+16
   \   00000070   0xD400             BMI      ??stringify_14
   \   00000072   0x3109             ADDS     R1,R1,#+9
     68              return string;
   \                     ??stringify_14: (+1)
   \   00000074   0x0008             MOVS     R0,R1
   \   00000076   0x4770             BX       LR               ;; return
     69          }
     70          

   \                                 In section .text, align 4, keep-with-next
     71          const char* utest::v1::stringify(utest::v1::failure_t failure)
     72          {
     73              return stringify(failure.reason);
   \                     _ZN5utest2v19stringifyENS0_9failure_tE: (+1)
   \   00000000   0x8801             LDRH     R1,[R0, #+0]
   \   00000002   0x0448             LSLS     R0,R1,#+17
   \   00000004   0x0C40             LSRS     R0,R0,#+17
   \   00000006   0xD02F             BEQ      ??stringify_15
   \   00000008   0x1E80             SUBS     R0,R0,#+2
   \   0000000A   0xD02B             BEQ      ??stringify_16
   \   0000000C   0x1E80             SUBS     R0,R0,#+2
   \   0000000E   0xD027             BEQ      ??stringify_17
   \   00000010   0x1F00             SUBS     R0,R0,#+4
   \   00000012   0xD023             BEQ      ??stringify_18
   \   00000014   0x3808             SUBS     R0,R0,#+8
   \   00000016   0xD01F             BEQ      ??stringify_19
   \   00000018   0x3810             SUBS     R0,R0,#+16
   \   0000001A   0xD01B             BEQ      ??stringify_20
   \   0000001C   0x3820             SUBS     R0,R0,#+32
   \   0000001E   0xD017             BEQ      ??stringify_21
   \   00000020   0x3840             SUBS     R0,R0,#+64
   \   00000022   0xD013             BEQ      ??stringify_22
   \   00000024   0x3880             SUBS     R0,R0,#+128
   \   00000026   0xD00F             BEQ      ??stringify_23
   \   00000028   0x2280             MOVS     R2,#+128
   \   0000002A   0x0052             LSLS     R2,R2,#+1        ;; #+256
   \   0000002C   0x1A80             SUBS     R0,R0,R2
   \   0000002E   0xD009             BEQ      ??stringify_24
   \   00000030   0x0052             LSLS     R2,R2,#+1
   \   00000032   0x1A80             SUBS     R0,R0,R2
   \   00000034   0xD004             BEQ      ??stringify_25
   \   00000036   0x0052             LSLS     R2,R2,#+1
   \   00000038   0x1A80             SUBS     R0,R0,R2
   \   0000003A   0xD117             BNE      ??stringify_26
   \   0000003C   0x....             ADR.N    R0,?_11
   \   0000003E   0xE016             B        ??stringify_27
   \                     ??stringify_25: (+1)
   \   00000040   0x....             ADR.N    R0,?_10
   \   00000042   0xE014             B        ??stringify_27
   \                     ??stringify_24: (+1)
   \   00000044   0x....             ADR.N    R0,?_9
   \   00000046   0xE012             B        ??stringify_27
   \                     ??stringify_23: (+1)
   \   00000048   0x....             ADR.N    R0,?_8
   \   0000004A   0xE010             B        ??stringify_27
   \                     ??stringify_22: (+1)
   \   0000004C   0x....             ADR.N    R0,?_7
   \   0000004E   0xE00E             B        ??stringify_27
   \                     ??stringify_21: (+1)
   \   00000050   0x....             ADR.N    R0,?_6
   \   00000052   0xE00C             B        ??stringify_27
   \                     ??stringify_20: (+1)
   \   00000054   0x....             ADR.N    R0,?_5
   \   00000056   0xE00A             B        ??stringify_27
   \                     ??stringify_19: (+1)
   \   00000058   0x....             ADR.N    R0,?_4
   \   0000005A   0xE008             B        ??stringify_27
   \                     ??stringify_18: (+1)
   \   0000005C   0x....             ADR.N    R0,?_3
   \   0000005E   0xE006             B        ??stringify_27
   \                     ??stringify_17: (+1)
   \   00000060   0x....             ADR.N    R0,?_2
   \   00000062   0xE004             B        ??stringify_27
   \                     ??stringify_16: (+1)
   \   00000064   0x....             ADR.N    R0,?_1
   \   00000066   0xE002             B        ??stringify_27
   \                     ??stringify_15: (+1)
   \   00000068   0x....             ADR.N    R0,?_0
   \   0000006A   0xE000             B        ??stringify_27
   \                     ??stringify_26: (+1)
   \   0000006C   0x....             ADR.N    R0,?_12
   \                     ??stringify_27: (+1)
   \   0000006E   0x0409             LSLS     R1,R1,#+16
   \   00000070   0xD400             BMI      ??stringify_28
   \   00000072   0x3009             ADDS     R0,R0,#+9
   \                     ??stringify_28: (+1)
   \   00000074   0x4770             BX       LR               ;; return
     74          }
     75          

   \                                 In section .text, align 4, keep-with-next
     76          const char* utest::v1::stringify(utest::v1::location_t location)
     77          {
     78              const char *string;
     79              switch(location)
   \                     _ZN5utest2v19stringifyENS0_10location_tE: (+1)
   \   00000000   0x2801             CMP      R0,#+1
   \   00000002   0xD007             BEQ      ??stringify_29
   \   00000004   0xD310             BCC      ??stringify_30
   \   00000006   0x2803             CMP      R0,#+3
   \   00000008   0xD008             BEQ      ??stringify_31
   \   0000000A   0xD305             BCC      ??stringify_32
   \   0000000C   0x2805             CMP      R0,#+5
   \   0000000E   0xD009             BEQ      ??stringify_33
   \   00000010   0xD306             BCC      ??stringify_34
   \   00000012   0xE009             B        ??stringify_30
     80              {
     81                  case LOCATION_TEST_SETUP:
     82                      string = "Test Setup Handler";
   \                     ??stringify_29: (+1)
   \   00000014   0x....             ADR.N    R0,?_13
     83                      break;
   \   00000016   0x4770             BX       LR
     84                  case LOCATION_TEST_TEARDOWN:
     85                      string = "Test Teardown Handler";
   \                     ??stringify_32: (+1)
   \   00000018   0x....             ADR.N    R0,?_14
     86                      break;
   \   0000001A   0x4770             BX       LR
     87                  case LOCATION_CASE_SETUP:
     88                      string = "Case Setup Handler";
   \                     ??stringify_31: (+1)
   \   0000001C   0x....             ADR.N    R0,?_15
     89                      break;
   \   0000001E   0x4770             BX       LR
     90                  case LOCATION_CASE_HANDLER:
     91                      string = "Case Handler";
   \                     ??stringify_34: (+1)
   \   00000020   0x....             ADR.N    R0,?_16
     92                      break;
   \   00000022   0x4770             BX       LR
     93                  case LOCATION_CASE_TEARDOWN:
     94                      string = "Case Teardown Handler";
   \                     ??stringify_33: (+1)
   \   00000024   0x....             ADR.N    R0,?_17
     95                      break;
   \   00000026   0x4770             BX       LR
     96                  default:
     97                  case LOCATION_UNKNOWN:
     98                      string = "Unknown Location";
   \                     ??stringify_30: (+1)
   \   00000028   0x....             ADR.N    R0,?_18
     99                      break;
    100              }
    101              return string;
   \   0000002A   0x4770             BX       LR               ;; return
    102          }
    103          

   \                                 In section .text, align 4, keep-with-next
    104          const char* utest::v1::stringify(utest::v1::status_t status)
    105          {
    106              switch(status)
   \                     _ZN5utest2v19stringifyENS0_8status_tE: (+1)
   \   00000000   0x2102             MOVS     R1,#+2
   \   00000002   0x43C9             MVNS     R1,R1            ;; #-3
   \   00000004   0x1A40             SUBS     R0,R0,R1
   \   00000006   0xD007             BEQ      ??stringify_35
   \   00000008   0x1E40             SUBS     R0,R0,#+1
   \   0000000A   0xD003             BEQ      ??stringify_36
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0xD105             BNE      ??stringify_37
    107              {
    108                  case STATUS_CONTINUE:
    109                      return "Continue";
   \   00000010   0x....             ADR.N    R0,?_19
   \   00000012   0x4770             BX       LR
    110                  case STATUS_IGNORE:
    111                      return "Ignore";
   \                     ??stringify_36: (+1)
   \   00000014   0x....             ADR.N    R0,?_20
   \   00000016   0x4770             BX       LR
    112                  case STATUS_ABORT:
    113                      return "Abort";
   \                     ??stringify_35: (+1)
   \   00000018   0x....             ADR.N    R0,?_21
   \   0000001A   0x4770             BX       LR
    114              }
    115              return "Unknown Status";
   \                     ??stringify_37: (+1)
   \   0000001C   0x....             ADR.N    R0,?_22
   \   0000001E   0x4770             BX       LR               ;; return
    116          }
    117          
    118          

   \                                 In section .rodata, align 4, keep-with-next
    119          const utest::v1::base_control_t utest::v1::CaseNext = { REPEAT_NONE, TIMEOUT_NONE };
   \                     _ZN5utest2v18CaseNextE:
   \   00000000   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0xFFFFFFFF         DC32 4294967295
    120          

   \                                 In section .rodata, align 4, keep-with-next
    121          const utest::v1::base_control_t utest::v1::CaseNoRepeat = { REPEAT_NONE, TIMEOUT_UNDECLR };
   \                     _ZN5utest2v112CaseNoRepeatE:
   \   00000000   0x01 0x00          DC8 1, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0xFFFFFFFE         DC32 4294967294
    122          

   \                                 In section .rodata, align 4, keep-with-next
    123          const utest::v1::base_control_t utest::v1::CaseRepeatAll = { REPEAT_ALL, TIMEOUT_UNDECLR };
   \                     _ZN5utest2v113CaseRepeatAllE:
   \   00000000   0x14 0x00          DC8 20, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0xFFFFFFFE         DC32 4294967294
    124          

   \                                 In section .rodata, align 4, keep-with-next
    125          const utest::v1::base_control_t utest::v1::CaseRepeatHandler = { REPEAT_HANDLER, TIMEOUT_UNDECLR };
   \                     _ZN5utest2v117CaseRepeatHandlerE:
   \   00000000   0x0C 0x00          DC8 12, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0xFFFFFFFE         DC32 4294967294
    126          

   \                                 In section .rodata, align 4, keep-with-next
    127          const utest::v1::base_control_t utest::v1::CaseNoTimeout = { REPEAT_UNDECLR, TIMEOUT_NONE };
   \                     _ZN5utest2v113CaseNoTimeoutE:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0xFFFFFFFF         DC32 4294967295
    128          

   \                                 In section .rodata, align 4, keep-with-next
    129          const utest::v1::base_control_t utest::v1::CaseAwait = { REPEAT_UNDECLR, TIMEOUT_FOREVER };
   \                     _ZN5utest2v19CaseAwaitE:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0xFFFFFFFD         DC32 4294967293
    130          
    131          // equal to CaeReapeatAll

   \                                 In section .rodata, align 4, keep-with-next
    132          const utest::v1::base_control_t utest::v1::CaseRepeat = { REPEAT_ALL, TIMEOUT_UNDECLR };
   \                     _ZN5utest2v110CaseRepeatE:
   \   00000000   0x14 0x00          DC8 20, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0xFFFFFFFE         DC32 4294967294
    133          
    134          // equal to CaseRepeatHandler

   \                                 In section .rodata, align 4, keep-with-next
    135          const utest::v1::base_control_t utest::v1::CaseRepeatHandlerOnly = { REPEAT_HANDLER, TIMEOUT_UNDECLR };
   \                     _ZN5utest2v121CaseRepeatHandlerOnlyE:
   \   00000000   0x0C 0x00          DC8 12, 0, 0, 0
   \              0x00 0x00    
   \   00000004   0xFFFFFFFE         DC32 4294967294

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x49 0x67          DC8 "Ignored: No Failure"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x4E    
   \              0x6F 0x20    
   \              0x46 0x61    
   \              0x69 0x6C    
   \              0x75 0x72    
   \              0x65 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x49 0x67          DC8 "Ignored: Test Cases Failed"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x54    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x43 0x61    
   \              0x73 0x65    
   \              0x73 0x20    
   \              0x46 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x49 0x67          DC8 "Ignored: Test Case is Empty"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x54    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x43 0x61    
   \              0x73 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x45 0x6D    
   \              0x70 0x74    
   \              0x79 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x49 0x67          DC8 "Ignored: Timed Out"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x54    
   \              0x69 0x6D    
   \              0x65 0x64    
   \              0x20 0x4F    
   \              0x75 0x74    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x49 0x67          DC8 "Ignored: Assertion Failed"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x41    
   \              0x73 0x73    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x46    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x49 0x67          DC8 "Ignored: Test Setup Failed"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x54    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x53 0x65    
   \              0x74 0x75    
   \              0x70 0x20    
   \              0x46 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x49 0x67          DC8 "Ignored: Test Teardown Failed"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x54    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x54 0x65    
   \              0x61 0x72    
   \              0x64 0x6F    
   \              0x77 0x6E    
   \              0x20 0x46    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x49 0x67          DC8 "Ignored: Case Setup Failed"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x43    
   \              0x61 0x73    
   \              0x65 0x20    
   \              0x53 0x65    
   \              0x74 0x75    
   \              0x70 0x20    
   \              0x46 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x49 0x67          DC8 "Ignored: Case Handler Failed"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x43    
   \              0x61 0x73    
   \              0x65 0x20    
   \              0x48 0x61    
   \              0x6E 0x64    
   \              0x6C 0x65    
   \              0x72 0x20    
   \              0x46 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x49 0x67          DC8 "Ignored: Case Teardown Failed"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x43    
   \              0x61 0x73    
   \              0x65 0x20    
   \              0x54 0x65    
   \              0x61 0x72    
   \              0x64 0x6F    
   \              0x77 0x6E    
   \              0x20 0x46    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x49 0x67          DC8 "Ignored: Case Index Invalid"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x43    
   \              0x61 0x73    
   \              0x65 0x20    
   \              0x49 0x6E    
   \              0x64 0x65    
   \              0x78 0x20    
   \              0x49 0x6E    
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x49 0x67          DC8 "Ignored: Scheduling Asynchronous Callback Failed"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x53    
   \              0x63 0x68    
   \              0x65 0x64    
   \              0x75 0x6C    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x41 0x73    
   \              0x79 0x6E    
   \              0x63 0x68    
   \              0x72 0x6F    
   \              0x6E 0x6F    
   \              0x75 0x73    
   \              0x20 0x43    
   \              0x61 0x6C    
   \              0x6C 0x62    
   \              0x61 0x63    
   \              0x6B 0x20    
   \              0x46 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x00         
   \   00000031   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x49 0x67          DC8 "Ignored: Unknown Failure"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x64 0x3A    
   \              0x20 0x55    
   \              0x6E 0x6B    
   \              0x6E 0x6F    
   \              0x77 0x6E    
   \              0x20 0x46    
   \              0x61 0x69    
   \              0x6C 0x75    
   \              0x72 0x65    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x54 0x65          DC8 "Test Setup Handler"
   \              0x73 0x74    
   \              0x20 0x53    
   \              0x65 0x74    
   \              0x75 0x70    
   \              0x20 0x48    
   \              0x61 0x6E    
   \              0x64 0x6C    
   \              0x65 0x72    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x54 0x65          DC8 "Test Teardown Handler"
   \              0x73 0x74    
   \              0x20 0x54    
   \              0x65 0x61    
   \              0x72 0x64    
   \              0x6F 0x77    
   \              0x6E 0x20    
   \              0x48 0x61    
   \              0x6E 0x64    
   \              0x6C 0x65    
   \              0x72 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x43 0x61          DC8 "Case Setup Handler"
   \              0x73 0x65    
   \              0x20 0x53    
   \              0x65 0x74    
   \              0x75 0x70    
   \              0x20 0x48    
   \              0x61 0x6E    
   \              0x64 0x6C    
   \              0x65 0x72    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x43 0x61          DC8 "Case Handler"
   \              0x73 0x65    
   \              0x20 0x48    
   \              0x61 0x6E    
   \              0x64 0x6C    
   \              0x65 0x72    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x43 0x61          DC8 "Case Teardown Handler"
   \              0x73 0x65    
   \              0x20 0x54    
   \              0x65 0x61    
   \              0x72 0x64    
   \              0x6F 0x77    
   \              0x6E 0x20    
   \              0x48 0x61    
   \              0x6E 0x64    
   \              0x6C 0x65    
   \              0x72 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x55 0x6E          DC8 "Unknown Location"
   \              0x6B 0x6E    
   \              0x6F 0x77    
   \              0x6E 0x20    
   \              0x4C 0x6F    
   \              0x63 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x43 0x6F          DC8 "Continue"
   \              0x6E 0x74    
   \              0x69 0x6E    
   \              0x75 0x65    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x49 0x67          DC8 "Ignore"
   \              0x6E 0x6F    
   \              0x72 0x65    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x41 0x62          DC8 "Abort"
   \              0x6F 0x72    
   \              0x74 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x55 0x6E          DC8 "Unknown Status"
   \              0x6B 0x6E    
   \              0x6F 0x77    
   \              0x6E 0x20    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x00         
   \   0000000F   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      12   mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
         8   -- Indirect call
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       0   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
       8   mbed::callback<>(void (*)(void *), void *)
         8   -> mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
       0   utest::v1::stringify(utest::v1::failure_reason_t)
       0   utest::v1::stringify(utest::v1::failure_t)
       0   utest::v1::stringify(utest::v1::location_t)
       0   utest::v1::stringify(utest::v1::status_t)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?_0
      28  ?_1
      28  ?_10
      52  ?_11
      28  ?_12
      20  ?_13
      24  ?_14
      20  ?_15
      16  ?_16
      24  ?_17
      20  ?_18
      12  ?_19
      28  ?_2
       8  ?_20
       8  ?_21
      16  ?_22
      20  ?_3
      28  ?_4
      28  ?_5
      32  ?_6
      28  ?_7
      32  ?_8
      32  ?_9
      32  mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
      12  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
      10  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
       8  mbed::callback<>(void (*)(void *), void *)
      12  ops
       8  utest::v1::CaseAwait
       8  utest::v1::CaseNext
       8  utest::v1::CaseNoRepeat
       8  utest::v1::CaseNoTimeout
       8  utest::v1::CaseRepeat
       8  utest::v1::CaseRepeatAll
       8  utest::v1::CaseRepeatHandler
       8  utest::v1::CaseRepeatHandlerOnly
     120  utest::v1::stringify(utest::v1::failure_reason_t)
     118  utest::v1::stringify(utest::v1::failure_t)
      44  utest::v1::stringify(utest::v1::location_t)
      32  utest::v1::stringify(utest::v1::status_t)
     292  -- Other

 
 368 bytes in section .rodata
 930 bytes in section .text
 
 866 bytes of CODE  memory (+  64 bytes shared)
  64 bytes of CONST memory (+ 304 bytes shared)

Errors: none
Warnings: none
