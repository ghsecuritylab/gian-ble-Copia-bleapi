###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Mar/2018  13:33:50
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  .\mbed-os\rtos\RtosTimer.cpp
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --c++ --no_rtti --no_exceptions --guard_calls
#        --no_static_destruction -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DMBED_BUILD_TIMESTAMP=1521462769.94 -DTARGET_CORTEX_M -DDEVICE_SPI=1
#        -DTARGET_LIKE_MBED -DARM_MATH_CM0 -DTARGET_RELEASE -D__CORTEX_M0
#        -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0 -DTOOLCHAIN_object
#        -DDEVICE_SERIAL=1 -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -DFEATURE_BLE=1 -f
#        .\BUILD\STEVAL_IDB007V1\IAR\.includes_dcedd7aa577106f9c79229685e6ddb41.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/FEATURE_BLE -I./mbed-os/features/FEATURE_BLE/ble
#        -I./mbed-os/features/FEATURE_BLE/ble/generic
#        -I./mbed-os/features/FEATURE_BLE/ble/pal
#        -I./mbed-os/features/FEATURE_BLE/ble/services
#        -I./mbed-os/features/FEATURE_BLE/source
#        -I./mbed-os/features/FEATURE_BLE/source/generic
#        -I./mbed-os/features/FEATURE_BLE/source/services
#        -I./mbed-os/features/FEATURE_BLE/targets
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN -I./mbed-os/features/mbedtls
#        -I./mbed-os/features/mbedtls/importer -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\IAR\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\rtos\RtosTimer.d -l
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\rtos\RtosTimer.s.txt -o
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\rtos\RtosTimer.o
#        .\mbed-os\rtos\RtosTimer.cpp
#    Locale       =  Italian_Italy.1252
#    List file    =  .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\rtos\RtosTimer.s.txt
#    Object file  =  .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\rtos\RtosTimer.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\rtos\RtosTimer.cpp
      1          /* mbed Microcontroller Library
      2           * Copyright (c) 2006-2012 ARM Limited
      3           *
      4           * Permission is hereby granted, free of charge, to any person obtaining a copy
      5           * of this software and associated documentation files (the "Software"), to deal
      6           * in the Software without restriction, including without limitation the rights
      7           * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
      8           * copies of the Software, and to permit persons to whom the Software is
      9           * furnished to do so, subject to the following conditions:
     10           *
     11           * The above copyright notice and this permission notice shall be included in
     12           * all copies or substantial portions of the Software.
     13           *
     14           * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     15           * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     16           * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     17           * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     18           * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     19           * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
     20           * SOFTWARE.
     21           */
     22          #include "rtos/RtosTimer.h"

   \                                 In section .text, align 4
   \   __code __interwork __softfp mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8CallbackIFvvEEC1IvvEEPFvPT_EPT0_: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xC078             STM      R0!,{R3-R6}
   \   0000000C   0x3810             SUBS     R0,R0,#+16
   \   0000000E   0xD001             BEQ      ??Callback_0
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x6042             STR      R2,[R0, #+4]
   \                     ??Callback_0: (+1)
   \   00000014   0x4901             LDR      R1,??Callback_1
   \   00000016   0x60C1             STR      R1,[R0, #+12]
   \   00000018   0xBC70             POP      {R4-R6}
   \   0000001A   0x4770             BX       LR               ;; return
   \                     ??Callback_1:
   \   0000001C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops

   \                                 In section .text, align 4
   \   __interwork __softfp void mbed::Callback<void ()>::thunk(void *)
   \                     _ZN4mbed8CallbackIFvvEE5thunkEPv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x68E0             LDR      R0,[R4, #+12]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD105             BNE      ??thunk_0
   \   0000000A   0x2284             MOVS     R2,#+132
   \   0000000C   0x0092             LSLS     R2,R2,#+2        ;; #+528
   \   0000000E   0x4904             LDR      R1,??thunk_1
   \   00000010   0x4804             LDR      R0,??thunk_1+0x4
   \   00000012   0x.... 0x....      BL       mbed_assert_internal
   \                     ??thunk_0: (+1)
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0x68E1             LDR      R1,[R4, #+12]
   \   0000001A   0x6809             LDR      R1,[R1, #+0]
   \   0000001C   0x4788             BLX      R1
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return
   \                     ??thunk_1:
   \   00000020   0x........         DC32     _ZZNK4mbed8CallbackIFvvEE4callEvEs_0
   \   00000024   0x........         DC32     _ZZNK4mbed8CallbackIFvvEE4callEvEs

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::function_context<void (*)(void *), void> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x6848             LDR      R0,[R1, #+4]
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x4788             BLX      R1
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD001             BEQ      ??function_move_0
   \   00000004   0xC90C             LDM      R1!,{R2,R3}
   \   00000006   0xC00C             STM      R0!,{R2,R3}
   \                     ??function_move_0: (+1)
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8callbackIvvvEENS_8CallbackIFT1_vEEEPFS2_PT_EPT0_: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEEC1IvvEEPFvPT_EPT0_
   \   00000006   0xBD01             POP      {R0,PC}          ;; return
     23          
     24          #include <string.h>
     25          
     26          #include "mbed.h"
     27          #include "platform/mbed_error.h"
     28          
     29          namespace rtos {
     30          

   \                                 In section .text, align 4, keep-with-next
     31          void RtosTimer::constructor(mbed::Callback<void()> func, os_timer_type type) {
   \                     _ZN4rtos9RtosTimer11constructorEN4mbed8CallbackIFvvEEE13osTimerType_t: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
     32              _function = func;
   \   0000000A   0x3024             ADDS     R0,R0,#+36
   \   0000000C   0x42A8             CMP      R0,R5
   \   0000000E   0xD013             BEQ      ??constructor_0
   \   00000010   0x6B21             LDR      R1,[R4, #+48]
   \   00000012   0x2900             CMP      R1,#+0
   \   00000014   0xD003             BEQ      ??constructor_1
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0x3024             ADDS     R0,R0,#+36
   \   0000001A   0x6889             LDR      R1,[R1, #+8]
   \   0000001C   0x4788             BLX      R1
   \                     ??constructor_1: (+1)
   \   0000001E   0x0020             MOVS     R0,R4
   \   00000020   0x3024             ADDS     R0,R0,#+36
   \   00000022   0xD009             BEQ      ??constructor_0
   \   00000024   0x68EA             LDR      R2,[R5, #+12]
   \   00000026   0x2A00             CMP      R2,#+0
   \   00000028   0xD004             BEQ      ??constructor_2
   \   0000002A   0x0029             MOVS     R1,R5
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0x3024             ADDS     R0,R0,#+36
   \   00000030   0x6852             LDR      R2,[R2, #+4]
   \   00000032   0x4790             BLX      R2
   \                     ??constructor_2: (+1)
   \   00000034   0x68E8             LDR      R0,[R5, #+12]
   \   00000036   0x6320             STR      R0,[R4, #+48]
     33              memset(&_obj_mem, 0, sizeof(_obj_mem));
   \                     ??constructor_0: (+1)
   \   00000038   0x2120             MOVS     R1,#+32
   \   0000003A   0x1D20             ADDS     R0,R4,#+4
   \   0000003C   0x.... 0x....      BL       __aeabi_memclr4
     34              osTimerAttr_t attr = { 0 };
   \   00000040   0x4668             MOV      R0,SP
   \   00000042   0x2110             MOVS     R1,#+16
   \   00000044   0x.... 0x....      BL       __aeabi_memclr4
     35              attr.cb_mem = &_obj_mem;
   \   00000048   0x1D20             ADDS     R0,R4,#+4
   \   0000004A   0x9002             STR      R0,[SP, #+8]
     36              attr.cb_size = sizeof(_obj_mem);
   \   0000004C   0x2020             MOVS     R0,#+32
   \   0000004E   0x9003             STR      R0,[SP, #+12]
     37              _id = osTimerNew((void (*)(void *))Callback<void()>::thunk, type, &_function, &attr);
   \   00000050   0x466B             MOV      R3,SP
   \   00000052   0x0022             MOVS     R2,R4
   \   00000054   0x3224             ADDS     R2,R2,#+36
   \   00000056   0x0031             MOVS     R1,R6
   \   00000058   0x....             LDR      R0,??DataTable3
   \   0000005A   0x.... 0x....      BL       osTimerNew
   \   0000005E   0x6020             STR      R0,[R4, #+0]
     38              MBED_ASSERT(_id);
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD105             BNE      ??constructor_3
   \   00000064   0x2226             MOVS     R2,#+38
   \   00000066   0xBF00             Nop      
   \   00000068   0x....             ADR.N    R1,?_1
   \   0000006A   0x....             ADR      R0,??DataTable3_1  ;; "_id"
   \   0000006C   0x.... 0x....      BL       mbed_assert_internal
     39          }
   \                     ??constructor_3: (+1)
   \   00000070   0xB004             ADD      SP,SP,#+16
   \   00000072   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     40          

   \                                 In section .text, align 2, keep-with-next
     41          osStatus RtosTimer::start(uint32_t millisec) {
   \                     _ZN4rtos9RtosTimer5startEj: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     42              return osTimerStart(_id, millisec);
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x.... 0x....      BL       osTimerStart
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
     43          }
     44          

   \                                 In section .text, align 2, keep-with-next
     45          osStatus RtosTimer::stop(void) {
   \                     _ZN4rtos9RtosTimer4stopEv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     46              return osTimerStop(_id);
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x.... 0x....      BL       osTimerStop
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
     47          }
     48          

   \                                 In section .text, align 2, keep-with-next
     49          RtosTimer::~RtosTimer() {
   \                     _ZN4rtos9RtosTimerD1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002                      REQUIRE ?Subroutine0
   \   00000002                      ;; // Fall through to label ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x0004             MOVS     R4,R0
     50              osTimerDelete(_id);
   \   00000002   0x6820             LDR      R0,[R4, #+0]
   \   00000004   0x.... 0x....      BL       osTimerDelete
     51          }
   \   00000008   0x6B21             LDR      R1,[R4, #+48]
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD003             BEQ      ??Subroutine0_0
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x3024             ADDS     R0,R0,#+36
   \   00000012   0x6889             LDR      R1,[R1, #+8]
   \   00000014   0x4788             BLX      R1
   \                     ??Subroutine0_0: (+1)
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x5F 0x69          DC8 "_id"
   \              0x64 0x00    

   \                                 In section .text, align 2, keep-with-next
   \   __code __interwork __softfp rtos::RtosTimer::subobject ~RtosTimer()
   \                     _ZN4rtos9RtosTimerD2Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x....             B.N      ?Subroutine0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     _ZN4mbed8CallbackIFvvEE5thunkEPv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x5F 0x69          DC8      "_id"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x2E 0x5C          DC8 ".\\mbed-os\\rtos\\RtosTimer.cpp"
   \              0x6D 0x62    
   \              0x65 0x64    
   \              0x2D 0x6F    
   \              0x73 0x5C    
   \              0x72 0x74    
   \              0x6F 0x73    
   \              0x5C 0x52    
   \              0x74 0x6F    
   \              0x73 0x54    
   \              0x69 0x6D    
   \              0x65 0x72    
   \              0x2E 0x63    
   \              0x70 0x70    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
     52          
     53          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      12   mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
         8   -- Indirect call
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       0   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
       8   mbed::Callback<void ()>::thunk(void *)
         8   -- Indirect call
         8   -> mbed_assert_internal
       8   mbed::callback<>(void (*)(void *), void *)
         8   -> mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
      32   rtos::RtosTimer::constructor(mbed::Callback<void ()>, osTimerType_t)
        32   -- Indirect call
        32   -> __aeabi_memclr4
        32   -> mbed_assert_internal
        32   -> osTimerNew
       8   rtos::RtosTimer::start(unsigned int)
         8   -> osTimerStart
       8   rtos::RtosTimer::stop()
         8   -> osTimerStop
       8   rtos::RtosTimer::subobject ~RtosTimer()
         8   -- Indirect call
         8   -> osTimerDelete
       0   rtos::RtosTimer::~RtosTimer()
         8   -- Indirect call
         8   -> osTimerDelete


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
      26  ?Subroutine0
       4  ?_0
      32  ?_1
      16  ?_2
      32  mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
      12  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
      10  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      40  mbed::Callback<void ()>::thunk(void *)
       8  mbed::callback<>(void (*)(void *), void *)
      12  ops
     116  rtos::RtosTimer::constructor(mbed::Callback<void ()>, osTimerType_t)
      10  rtos::RtosTimer::start(unsigned int)
      10  rtos::RtosTimer::stop()
       4  rtos::RtosTimer::subobject ~RtosTimer()
       2  rtos::RtosTimer::~RtosTimer()
     332  -- Other

 
 364 bytes in section .rodata
 312 bytes in section .text
 
 208 bytes of CODE  memory (+ 104 bytes shared)
  20 bytes of CONST memory (+ 344 bytes shared)

Errors: none
Warnings: none
