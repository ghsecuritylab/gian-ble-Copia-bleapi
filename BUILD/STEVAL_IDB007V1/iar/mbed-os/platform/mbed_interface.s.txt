###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Mar/2018  13:33:45
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  .\mbed-os\platform\mbed_interface.c
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --vla -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DMBED_BUILD_TIMESTAMP=1521462769.94 -DTARGET_CORTEX_M -DDEVICE_SPI=1
#        -DTARGET_LIKE_MBED -DARM_MATH_CM0 -DTARGET_RELEASE -D__CORTEX_M0
#        -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0 -DTOOLCHAIN_object
#        -DDEVICE_SERIAL=1 -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -DFEATURE_BLE=1 -f
#        .\BUILD\STEVAL_IDB007V1\IAR\.includes_dcedd7aa577106f9c79229685e6ddb41.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/FEATURE_BLE -I./mbed-os/features/FEATURE_BLE/ble
#        -I./mbed-os/features/FEATURE_BLE/ble/generic
#        -I./mbed-os/features/FEATURE_BLE/ble/pal
#        -I./mbed-os/features/FEATURE_BLE/ble/services
#        -I./mbed-os/features/FEATURE_BLE/source
#        -I./mbed-os/features/FEATURE_BLE/source/generic
#        -I./mbed-os/features/FEATURE_BLE/source/services
#        -I./mbed-os/features/FEATURE_BLE/targets
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN -I./mbed-os/features/mbedtls
#        -I./mbed-os/features/mbedtls/importer -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\IAR\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\platform\mbed_interface.d -l
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\platform\mbed_interface.s.txt -o
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\platform\mbed_interface.o
#        .\mbed-os\platform\mbed_interface.c
#    Locale       =  Italian_Italy.1252
#    List file    =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\platform\mbed_interface.s.txt
#    Object file  =  
#        .\BUILD\STEVAL_IDB007V1\IAR\mbed-os\platform\mbed_interface.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\platform\mbed_interface.c
      1          /* mbed Microcontroller Library
      2           * Copyright (c) 2006-2013 ARM Limited
      3           *
      4           * Licensed under the Apache License, Version 2.0 (the "License");
      5           * you may not use this file except in compliance with the License.
      6           * You may obtain a copy of the License at
      7           *
      8           *     http://www.apache.org/licenses/LICENSE-2.0
      9           *
     10           * Unless required by applicable law or agreed to in writing, software
     11           * distributed under the License is distributed on an "AS IS" BASIS,
     12           * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     13           * See the License for the specific language governing permissions and
     14           * limitations under the License.
     15           */
     16          #include <stdio.h>
     17          #include "platform/mbed_interface.h"

  typedef uint8_t BOOL;  //already defined in "hal_type.h"
                  ^
"C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\targets\TARGET_STMBLUE\TARGET_BLUENRG1\TARGET_STEVAL_IDB007V1\device\system_BlueNRG1.h",240  Warning[Pe301]: typedef name has already been declared (with same type)
     18          
     19          #include "hal/gpio_api.h"
     20          #include "platform/mbed_wait_api.h"
     21          #include "platform/mbed_semihost_api.h"
     22          #include "platform/mbed_error.h"
     23          #include "platform/mbed_toolchain.h"
     24          
     25          #if DEVICE_SEMIHOST
     26          
     27          // return true if a debugger is attached, indicating mbed interface is connected
     28          int mbed_interface_connected(void) {
     29              return semihost_connected();
     30          }
     31          
     32          int mbed_interface_reset(void) {
     33              if (mbed_interface_connected()) {
     34                  semihost_reset();
     35                  return 0;
     36              } else {
     37                  return -1;
     38              }
     39          }
     40          
     41          WEAK int mbed_interface_uid(char *uid) {
     42              if (mbed_interface_connected()) {
     43                  return semihost_uid(uid); // Returns 0 if successful, -1 on failure
     44              } else {
     45                  uid[0] = 0;
     46                  return -1;
     47              }
     48          }
     49          
     50          int mbed_interface_disconnect(void) {
     51              int res;
     52              if (mbed_interface_connected()) {
     53                  if ((res = semihost_disabledebug()) != 0)
     54                      return res;
     55                  while (mbed_interface_connected());
     56                  return 0;
     57              } else {
     58                  return -1;
     59              }
     60          }
     61          
     62          int mbed_interface_powerdown(void) {
     63              int res;
     64              if (mbed_interface_connected()) {
     65                  if ((res = semihost_powerdown()) != 0)
     66                      return res;
     67                  while (mbed_interface_connected());
     68                  return 0;
     69              } else {
     70                  return -1;
     71              }
     72          }
     73          
     74          // for backward compatibility
     75          void mbed_reset(void) {
     76              mbed_interface_reset();
     77          }
     78          
     79          WEAK int mbed_uid(char *uid) {
     80              return mbed_interface_uid(uid);
     81          }
     82          #endif
     83          

   \                                 In section .text, align 2
     84          WEAK void mbed_mac_address(char *mac) {
     85          #if DEVICE_SEMIHOST
     86              char uid[DEVICE_ID_LENGTH + 1];
     87              int i;
     88          
     89              // if we have a UID, extract the MAC
     90              if (mbed_interface_uid(uid) == 0) {
     91                  char *p = uid;
     92          #if defined(DEVICE_MAC_OFFSET)
     93                  p += DEVICE_MAC_OFFSET;
     94          #endif
     95                  for (i=0; i<6; i++) {
     96                      int byte;
     97                      sscanf(p, "%2x", &byte);
     98                      mac[i] = byte;
     99                      p += 2;
    100                  }
    101                  mac[0] &= ~0x01;    // reset the IG bit in the address; see IEE 802.3-2002, Section 3.2.3(b)
    102              } else {  // else return a default MAC
    103          #endif
    104                  mac[0] = 0x00;
   \                     mbed_mac_address: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x7001             STRB     R1,[R0, #+0]
    105                  mac[1] = 0x02;
   \   00000004   0x2202             MOVS     R2,#+2
   \   00000006   0x7042             STRB     R2,[R0, #+1]
    106                  mac[2] = 0xF7;
   \   00000008   0x22F7             MOVS     R2,#+247
   \   0000000A   0x7082             STRB     R2,[R0, #+2]
    107                  mac[3] = 0xF0;
   \   0000000C   0x22F0             MOVS     R2,#+240
   \   0000000E   0x70C2             STRB     R2,[R0, #+3]
    108                  mac[4] = 0x00;
   \   00000010   0x7101             STRB     R1,[R0, #+4]
    109                  mac[5] = 0x00;
   \   00000012   0x7141             STRB     R1,[R0, #+5]
    110          #if DEVICE_SEMIHOST
    111              }
    112          #endif
    113          }
   \   00000014   0x4770             BX       LR               ;; return

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   mbed_mac_address


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      22  mbed_mac_address

 
 22 bytes in section .text
 
 0 bytes of CODE memory (+ 22 bytes shared)

Errors: none
Warnings: 1
