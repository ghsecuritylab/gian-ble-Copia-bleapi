###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Mar/2018  13:32:56
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  .\main.cpp
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --c++ --no_rtti --no_exceptions --guard_calls
#        --no_static_destruction -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DMBED_BUILD_TIMESTAMP=1521462769.94 -DTARGET_CORTEX_M -DDEVICE_SPI=1
#        -DTARGET_LIKE_MBED -DARM_MATH_CM0 -DTARGET_RELEASE -D__CORTEX_M0
#        -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0 -DTOOLCHAIN_object
#        -DDEVICE_SERIAL=1 -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -DFEATURE_BLE=1 -f
#        .\BUILD\STEVAL_IDB007V1\IAR\.includes_dcedd7aa577106f9c79229685e6ddb41.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/FEATURE_BLE -I./mbed-os/features/FEATURE_BLE/ble
#        -I./mbed-os/features/FEATURE_BLE/ble/generic
#        -I./mbed-os/features/FEATURE_BLE/ble/pal
#        -I./mbed-os/features/FEATURE_BLE/ble/services
#        -I./mbed-os/features/FEATURE_BLE/source
#        -I./mbed-os/features/FEATURE_BLE/source/generic
#        -I./mbed-os/features/FEATURE_BLE/source/services
#        -I./mbed-os/features/FEATURE_BLE/targets
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN -I./mbed-os/features/mbedtls
#        -I./mbed-os/features/mbedtls/importer -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\IAR\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\IAR\.\main.d -l
#        .\BUILD\STEVAL_IDB007V1\IAR\.\main.s.txt -o
#        .\BUILD\STEVAL_IDB007V1\IAR\.\main.o .\main.cpp
#    Locale       =  Italian_Italy.1252
#    List file    =  .\BUILD\STEVAL_IDB007V1\IAR\.\main.s.txt
#    Object file  =  .\BUILD\STEVAL_IDB007V1\IAR\.\main.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\main.cpp
      1          #include "Blue1.h"

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const &)
   \                     _ZN4mbed8CallbackIFvvEEC1ERKS2_: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x68E2             LDR      R2,[R4, #+12]
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD001             BEQ      ??Callback_0
   \   0000000C   0x6852             LDR      R2,[R2, #+4]
   \   0000000E   0x4790             BLX      R2
   \                     ??Callback_0: (+1)
   \   00000010   0x68E0             LDR      R0,[R4, #+12]
   \   00000012   0x60E8             STR      R0,[R5, #+12]
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xBD32             POP      {R1,R4,R5,PC}    ;; return

   \                                 In section .text, align 4
   \   __code __interwork __softfp mbed::Callback<void ()>::Callback<>(BLE *, void (BLE::*)())
   \                     _ZN4mbed8CallbackIFvvEEC1I3BLES4_EEPT0_MT_FvvE: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEE14method_contextI3BLEMS4_FvvEEC1EPS4_S6_
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x2300             MOVS     R3,#+0
   \   00000014   0xC40F             STM      R4!,{R0-R3}
   \   00000016   0x3C10             SUBS     R4,R4,#+16
   \   00000018   0xD003             BEQ      ??Callback_1
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0xC80E             LDM      R0!,{R1-R3}
   \   0000001E   0xC40E             STM      R4!,{R1-R3}
   \   00000020   0x3C0C             SUBS     R4,R4,#+12
   \                     ??Callback_1: (+1)
   \   00000022   0x4802             LDR      R0,??Callback_2
   \   00000024   0x60E0             STR      R0,[R4, #+12]
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0xB004             ADD      SP,SP,#+16
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
   \                     ??Callback_2:
   \   0000002C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI3BLEMS5_FvvEEEEEvRKT_E3ops

   \                                 In section .text, align 4
   \   __code __interwork __softfp mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8CallbackIFvvEEC1IvvEEPFvPT_EPT0_: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xC078             STM      R0!,{R3-R6}
   \   0000000C   0x3810             SUBS     R0,R0,#+16
   \   0000000E   0xD001             BEQ      ??Callback_3
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x6042             STR      R2,[R0, #+4]
   \                     ??Callback_3: (+1)
   \   00000014   0x4901             LDR      R1,??Callback_4
   \   00000016   0x60C1             STR      R1,[R0, #+12]
   \   00000018   0xBC70             POP      {R4-R6}
   \   0000001A   0x4770             BX       LR               ;; return
   \                     ??Callback_4:
   \   0000001C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_14method_contextI3BLEMS5_FvvEEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_14method_contextI3BLEMS5_FvvEEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_14method_contextI3BLEMS5_FvvEEEEEvPvPKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_14method_contextI3BLEMS5_FvvEEEEEvPv

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::function_context<void (*)(void *), void> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_14method_contextI3BLEMS5_FvvEEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x684A             LDR      R2,[R1, #+4]
   \   00000006   0x6888             LDR      R0,[R1, #+8]
   \   00000008   0x1053             ASRS     R3,R2,#+1
   \   0000000A   0x18C0             ADDS     R0,R0,R3
   \   0000000C   0x07D2             LSLS     R2,R2,#+31
   \   0000000E   0xD401             BMI      ??function_call_0
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0xE002             B        ??function_call_1
   \                     ??function_call_0: (+1)
   \   00000014   0x6802             LDR      R2,[R0, #+0]
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x5851             LDR      R1,[R2, R1]
   \                     ??function_call_1: (+1)
   \   0000001A   0x4788             BLX      R1
   \   0000001C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x6848             LDR      R0,[R1, #+4]
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x4788             BLX      R1
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_14method_contextI3BLEMS5_FvvEEEEEvPvPKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD100             BNE      ??function_move_0
   \   00000004   0x4770             BX       LR
   \                     ??function_move_0: (+1)
   \   00000006   0xB410             PUSH     {R4}
   \   00000008   0xC91C             LDM      R1!,{R2-R4}
   \   0000000A   0xC01C             STM      R0!,{R2-R4}
   \   0000000C   0xBC10             POP      {R4}
   \   0000000E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD001             BEQ      ??function_move_1
   \   00000004   0xC90C             LDM      R1!,{R2,R3}
   \   00000006   0xC00C             STM      R0!,{R2,R3}
   \                     ??function_move_1: (+1)
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_14method_contextI3BLEMS5_FvvEEEEEvPv: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>::method_context(BLE *, void (BLE::*)())
   \                     _ZN4mbed8CallbackIFvvEE14method_contextI3BLEMS4_FvvEEC1EPS4_S6_: (+1)
   \   00000000   0xC00C             STM      R0!,{R2,R3}
   \   00000002   0x3808             SUBS     R0,R0,#+8
   \   00000004   0x6081             STR      R1,[R0, #+8]
   \   00000006   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::Callback<void (bool)>::Callback(mbed::Callback<void (bool)> const &)
   \                     _ZN4mbed8CallbackIFvbEEC1ERKS2_: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x68E2             LDR      R2,[R4, #+12]
   \   00000008   0x2A00             CMP      R2,#+0
   \   0000000A   0xD001             BEQ      ??Callback_5
   \   0000000C   0x6852             LDR      R2,[R2, #+4]
   \   0000000E   0x4790             BLX      R2
   \                     ??Callback_5: (+1)
   \   00000010   0x68E0             LDR      R0,[R4, #+12]
   \   00000012   0x60E8             STR      R0,[R5, #+12]
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xBD32             POP      {R1,R4,R5,PC}    ;; return

   \                                 In section .text, align 4
   \   __code __interwork __softfp mbed::Callback<void (bool)>::Callback<>(ButtonService *, void (ButtonService::*)(bool))
   \                     _ZN4mbed8CallbackIFvbEEC1I13ButtonServiceS4_EEPT0_MT_FvbE: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x4668             MOV      R0,SP
   \   00000008   0x.... 0x....      BL       _ZN4mbed8CallbackIFvbEE14method_contextI13ButtonServiceMS4_FvbEEC1EPS4_S6_
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x2300             MOVS     R3,#+0
   \   00000014   0xC40F             STM      R4!,{R0-R3}
   \   00000016   0x3C10             SUBS     R4,R4,#+16
   \   00000018   0xD003             BEQ      ??Callback_6
   \   0000001A   0x4668             MOV      R0,SP
   \   0000001C   0xC80E             LDM      R0!,{R1-R3}
   \   0000001E   0xC40E             STM      R4!,{R1-R3}
   \   00000020   0x3C0C             SUBS     R4,R4,#+12
   \                     ??Callback_6: (+1)
   \   00000022   0x4802             LDR      R0,??Callback_7
   \   00000024   0x60E0             STR      R0,[R4, #+12]
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0xB004             ADD      SP,SP,#+16
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
   \                     ??Callback_7:
   \   0000002C   0x........         DC32     _ZZN4mbed8CallbackIFvbEE8generateINS2_14method_contextI13ButtonServiceMS5_FvbEEEEEvRKT_E3ops

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::Callback<void (bool)>::~Callback()
   \                     _ZN4mbed8CallbackIFvbEED1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x68E1             LDR      R1,[R4, #+12]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xD001             BEQ      `?~Callback_0`
   \   0000000A   0x6889             LDR      R1,[R1, #+8]
   \   0000000C   0x4788             BLX      R1
   \                     `?~Callback_0`: (+1)
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void (bool)>::ops const mbed::Callback<void (bool)>::generate<>(mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)> const &)::ops
   \                     _ZZN4mbed8CallbackIFvbEE8generateINS2_14method_contextI13ButtonServiceMS5_FvbEEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvbEE13function_callINS2_14method_contextI13ButtonServiceMS5_FvbEEEEEvPKvb
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvbEE13function_moveINS2_14method_contextI13ButtonServiceMS5_FvbEEEEEvPvPKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvbEE13function_dtorINS2_14method_contextI13ButtonServiceMS5_FvbEEEEEvPv

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void (bool)>::function_call<mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>>(void const *, bool)
   \                     _ZN4mbed8CallbackIFvbEE13function_callINS2_14method_contextI13ButtonServiceMS5_FvbEEEEEvPKvb: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0002             MOVS     R2,R0
   \   00000004   0x6853             LDR      R3,[R2, #+4]
   \   00000006   0x6890             LDR      R0,[R2, #+8]
   \   00000008   0x105C             ASRS     R4,R3,#+1
   \   0000000A   0x1900             ADDS     R0,R0,R4
   \   0000000C   0x07DB             LSLS     R3,R3,#+31
   \   0000000E   0xD401             BMI      ??function_call_2
   \   00000010   0x6812             LDR      R2,[R2, #+0]
   \   00000012   0xE002             B        ??function_call_3
   \                     ??function_call_2: (+1)
   \   00000014   0x6803             LDR      R3,[R0, #+0]
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0x589A             LDR      R2,[R3, R2]
   \                     ??function_call_3: (+1)
   \   0000001A   0x4790             BLX      R2
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void (bool)>::function_move<mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvbEE13function_moveINS2_14method_contextI13ButtonServiceMS5_FvbEEEEEvPvPKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD100             BNE      ??function_move_2
   \   00000004   0x4770             BX       LR
   \                     ??function_move_2: (+1)
   \   00000006   0xB410             PUSH     {R4}
   \   00000008   0xC91C             LDM      R1!,{R2-R4}
   \   0000000A   0xC01C             STM      R0!,{R2-R4}
   \   0000000C   0xBC10             POP      {R4}
   \   0000000E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void (bool)>::function_dtor<mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>>(void *)
   \                     _ZN4mbed8CallbackIFvbEE13function_dtorINS2_14method_contextI13ButtonServiceMS5_FvbEEEEEvPv: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>::method_context(ButtonService *, void (ButtonService::*)(bool))
   \                     _ZN4mbed8CallbackIFvbEE14method_contextI13ButtonServiceMS4_FvbEEC1EPS4_S6_: (+1)
   \   00000000   0xC00C             STM      R0!,{R2,R3}
   \   00000002   0x3808             SUBS     R0,R0,#+8
   \   00000004   0x6081             STR      R1,[R0, #+8]
   \   00000006   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8callbackIvvvEENS_8CallbackIFT1_vEEEPFS2_PT_EPT0_: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEEC1IvvEEPFvPT_EPT0_
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4
   \   __interwork __softfp int events::EventQueue::call<>(mbed::Callback<void (bool)>, bool)
   \                     _ZN6events10EventQueue4callIN4mbed8CallbackIFvbEEEbEEiT_T0_: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
   \   00000004   0x0006             MOVS     R6,R0
   \   00000006   0x0014             MOVS     R4,R2
   \   00000008   0xA805             ADD      R0,SP,#+20
   \   0000000A   0x.... 0x....      BL       _ZN4mbed8CallbackIFvbEEC1ERKS2_
   \   0000000E   0x0001             MOVS     R1,R0
   \   00000010   0x4668             MOV      R0,SP
   \   00000012   0x.... 0x....      BL       _ZN4mbed8CallbackIFvbEEC1ERKS2_
   \   00000016   0x466D             MOV      R5,SP
   \   00000018   0x742C             STRB     R4,[R5, #+16]
   \   0000001A   0x2114             MOVS     R1,#+20
   \   0000001C   0x0030             MOVS     R0,R6
   \   0000001E   0x.... 0x....      BL       equeue_alloc
   \   00000022   0x0004             MOVS     R4,R0
   \   00000024   0xD101             BNE      ??call_0
   \   00000026   0x2400             MOVS     R4,#+0
   \   00000028   0xE00E             B        ??call_1
   \                     ??call_0: (+1)
   \   0000002A   0x4669             MOV      R1,SP
   \   0000002C   0x.... 0x....      BL       _ZN4mbed8CallbackIFvbEEC1ERKS2_
   \   00000030   0x7C28             LDRB     R0,[R5, #+16]
   \   00000032   0x7420             STRB     R0,[R4, #+16]
   \   00000034   0x4909             LDR      R1,??call_2
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0x.... 0x....      BL       equeue_event_dtor
   \   0000003C   0x0022             MOVS     R2,R4
   \   0000003E   0x4908             LDR      R1,??call_2+0x4
   \   00000040   0x0030             MOVS     R0,R6
   \   00000042   0x.... 0x....      BL       equeue_post
   \   00000046   0x0004             MOVS     R4,R0
   \                     ??call_1: (+1)
   \   00000048   0x4668             MOV      R0,SP
   \   0000004A   0x.... 0x....      BL       _ZN4mbed8CallbackIFvbEED1Ev
   \   0000004E   0xA805             ADD      R0,SP,#+20
   \   00000050   0x.... 0x....      BL       _ZN4mbed8CallbackIFvbEED1Ev
   \   00000054   0x0020             MOVS     R0,R4
   \   00000056   0xB00A             ADD      SP,SP,#+40
   \   00000058   0xBD70             POP      {R4-R6,PC}       ;; return
   \   0000005A   0xBF00             Nop      
   \                     ??call_2:
   \   0000005C   0x........         DC32     _ZN6events10EventQueue13function_dtorINS0_9context10IN4mbed8CallbackIFvbEEEbEEEEvPv
   \   00000060   0x........         DC32     _ZN6events10EventQueue13function_callINS0_9context10IN4mbed8CallbackIFvbEEEbEEEEvPv

   \                                 In section .text, align 4
   \   __interwork __softfp void events::EventQueue::function_call<mbed::Callback<void ()>>(void *)
   \                     _ZN6events10EventQueue13function_callIN4mbed8CallbackIFvvEEEEEvPv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x68E0             LDR      R0,[R4, #+12]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD105             BNE      ??function_call_4
   \   0000000A   0x2284             MOVS     R2,#+132
   \   0000000C   0x0092             LSLS     R2,R2,#+2        ;; #+528
   \   0000000E   0x4904             LDR      R1,??function_call_5
   \   00000010   0x4804             LDR      R0,??function_call_5+0x4
   \   00000012   0x.... 0x....      BL       mbed_assert_internal
   \                     ??function_call_4: (+1)
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0x68E1             LDR      R1,[R4, #+12]
   \   0000001A   0x6809             LDR      R1,[R1, #+0]
   \   0000001C   0x4788             BLX      R1
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return
   \                     ??function_call_5:
   \   00000020   0x........         DC32     _ZZNK4mbed8CallbackIFvvEE4callEvEs_0
   \   00000024   0x........         DC32     _ZZNK4mbed8CallbackIFvvEE4callEvEs

   \                                 In section .text, align 4
   \   __interwork __softfp void events::EventQueue::function_call<events::EventQueue::context10<mbed::Callback<void (bool)>, bool>>(void *)
   \                     _ZN6events10EventQueue13function_callINS0_9context10IN4mbed8CallbackIFvbEEEbEEEEvPv: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x7C25             LDRB     R5,[R4, #+16]
   \   00000006   0x68E0             LDR      R0,[R4, #+12]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD104             BNE      ??function_call_6
   \   0000000C   0x4A05             LDR      R2,??function_call_7  ;; 0x44e
   \   0000000E   0x4906             LDR      R1,??function_call_7+0x4
   \   00000010   0x4806             LDR      R0,??function_call_7+0x8
   \   00000012   0x.... 0x....      BL       mbed_assert_internal
   \                     ??function_call_6: (+1)
   \   00000016   0x0029             MOVS     R1,R5
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x68E2             LDR      R2,[R4, #+12]
   \   0000001C   0x6812             LDR      R2,[R2, #+0]
   \   0000001E   0x4790             BLX      R2
   \   00000020   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \   00000022   0xBF00             Nop      
   \                     ??function_call_7:
   \   00000024   0x0000044E         DC32     0x44e
   \   00000028   0x........         DC32     _ZZNK4mbed8CallbackIFvbEE4callEbEs_0
   \   0000002C   0x........         DC32     _ZZNK4mbed8CallbackIFvbEE4callEbEs

   \                                 In section .text, align 2
   \   __interwork __softfp void events::EventQueue::function_call<void (*)()>(void *)
   \                     _ZN6events10EventQueue13function_callIPFvvEEEvPv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4780             BLX      R0
   \   00000006   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void events::EventQueue::function_dtor<mbed::Callback<void ()>>(void *)
   \                     _ZN6events10EventQueue13function_dtorIN4mbed8CallbackIFvvEEEEEvPv: (+1)
   \   00000000   0x68C1             LDR      R1,[R0, #+12]
   \   00000002   0x2900             CMP      R1,#+0
   \   00000004   0xD100             BNE      ??function_dtor_0
   \   00000006   0x4770             BX       LR
   \                     ??function_dtor_0: (+1)
   \   00000008   0xB580             PUSH     {R7,LR}
   \   0000000A   0x6889             LDR      R1,[R1, #+8]
   \   0000000C   0x4788             BLX      R1
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void events::EventQueue::function_dtor<events::EventQueue::context10<mbed::Callback<void (bool)>, bool>>(void *)
   \                     _ZN6events10EventQueue13function_dtorINS0_9context10IN4mbed8CallbackIFvbEEEbEEEEvPv: (+1)
   \   00000000   0x68C1             LDR      R1,[R0, #+12]
   \   00000002   0x2900             CMP      R1,#+0
   \   00000004   0xD100             BNE      ??function_dtor_1
   \   00000006   0x4770             BX       LR
   \                     ??function_dtor_1: (+1)
   \   00000008   0xB580             PUSH     {R7,LR}
   \   0000000A   0x6889             LDR      R1,[R1, #+8]
   \   0000000C   0x4788             BLX      R1
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void events::EventQueue::function_dtor<void (*)()>(void *)
   \                     _ZN6events10EventQueue13function_dtorIPFvvEEEvPv: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp ble_error_t GapAdvertisingData::addData(GapAdvertisingData::DataType_t, std::uint8_t const *, std::uint8_t)
   \                     _ZN18GapAdvertisingData7addDataENS_10DataType_tEPKhh: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0xE003             B        ??addData_0
   \                     ??addData_1: (+1)
   \   00000008   0x782D             LDRB     R5,[R5, #+0]
   \   0000000A   0x1964             ADDS     R4,R4,R5
   \   0000000C   0x1C64             ADDS     R4,R4,#+1
   \   0000000E   0xB2E4             UXTB     R4,R4
   \                     ??addData_0: (+1)
   \   00000010   0x7FC5             LDRB     R5,[R0, #+31]
   \   00000012   0x42AC             CMP      R4,R5
   \   00000014   0xDA09             BGE      ??addData_2
   \   00000016   0x1905             ADDS     R5,R0,R4
   \   00000018   0x786E             LDRB     R6,[R5, #+1]
   \   0000001A   0x428E             CMP      R6,R1
   \   0000001C   0xD1F4             BNE      ??addData_1
   \   0000001E   0x2D00             CMP      R5,#+0
   \   00000020   0xD003             BEQ      ??addData_2
   \   00000022   0x9500             STR      R5,[SP, #+0]
   \   00000024   0x.... 0x....      BL       _ZN18GapAdvertisingData8addFieldENS_10DataType_tEPKhhPh
   \   00000028   0xBD76             POP      {R1,R2,R4-R6,PC}
   \                     ??addData_2: (+1)
   \   0000002A   0x.... 0x....      BL       _ZN18GapAdvertisingData11appendFieldENS_10DataType_tEPKhh
   \   0000002E   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp ble_error_t GapAdvertisingData::appendField(GapAdvertisingData::DataType, std::uint8_t const *, std::uint8_t)
   \                     _ZN18GapAdvertisingData11appendFieldENS_10DataType_tEPKhh: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
   \   0000000A   0x7FE0             LDRB     R0,[R4, #+31]
   \   0000000C   0x19C1             ADDS     R1,R0,R7
   \   0000000E   0x1C89             ADDS     R1,R1,#+2
   \   00000010   0x2920             CMP      R1,#+32
   \   00000012   0xDB01             BLT      ??appendField_0
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xBDF2             POP      {R1,R4-R7,PC}
   \                     ??appendField_0: (+1)
   \   00000018   0x1C7A             ADDS     R2,R7,#+1
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x1820             ADDS     R0,R4,R0
   \   0000001E   0x.... 0x....      BL       __aeabi_memset
   \   00000022   0x7FE0             LDRB     R0,[R4, #+31]
   \   00000024   0x1C40             ADDS     R0,R0,#+1
   \   00000026   0x77E0             STRB     R0,[R4, #+31]
   \   00000028   0x002A             MOVS     R2,R5
   \   0000002A   0x2101             MOVS     R1,#+1
   \   0000002C   0xB2C0             UXTB     R0,R0
   \   0000002E   0x1820             ADDS     R0,R4,R0
   \   00000030   0x.... 0x....      BL       __aeabi_memset
   \   00000034   0x7FE0             LDRB     R0,[R4, #+31]
   \   00000036   0x1C40             ADDS     R0,R0,#+1
   \   00000038   0x77E0             STRB     R0,[R4, #+31]
   \   0000003A   0x003A             MOVS     R2,R7
   \   0000003C   0x0031             MOVS     R1,R6
   \   0000003E   0xB2C0             UXTB     R0,R0
   \   00000040   0x1820             ADDS     R0,R4,R0
   \   00000042   0x.... 0x....      BL       __aeabi_memcpy
   \   00000046   0x7FE0             LDRB     R0,[R4, #+31]
   \   00000048   0x19C0             ADDS     R0,R0,R7
   \   0000004A   0x77E0             STRB     R0,[R4, #+31]
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0xBDF2             POP      {R1,R4-R7,PC}    ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp ble_error_t GapAdvertisingData::addField(GapAdvertisingData::DataType_t, std::uint8_t const *, std::uint8_t, std::uint8_t *)
   \                     _ZN18GapAdvertisingData8addFieldENS_10DataType_tEPKhhPh: (+1)
   \   00000000   0xB5FB             PUSH     {R0,R1,R3-R7,LR}
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x9C08             LDR      R4,[SP, #+32]
   \   00000008   0x466D             MOV      R5,SP
   \   0000000A   0x792D             LDRB     R5,[R5, #+4]
   \   0000000C   0x1EAD             SUBS     R5,R5,#+2
   \   0000000E   0x2D05             CMP      R5,#+5
   \   00000010   0xD901             BLS      ??addField_0
   \   00000012   0x3D13             SUBS     R5,R5,#+19
   \   00000014   0xD129             BNE      ??addField_1
   \                     ??addField_0: (+1)
   \   00000016   0x7FC3             LDRB     R3,[R0, #+31]
   \   00000018   0x466D             MOV      R5,SP
   \   0000001A   0x7A2D             LDRB     R5,[R5, #+8]
   \   0000001C   0x195E             ADDS     R6,R3,R5
   \   0000001E   0x2E20             CMP      R6,#+32
   \   00000020   0xDA4E             BGE      ??addField_2
   \   00000022   0x18C1             ADDS     R1,R0,R3
   \   00000024   0x1C63             ADDS     R3,R4,#+1
   \   00000026   0x428B             CMP      R3,R1
   \   00000028   0xD206             BCS      ??addField_3
   \   0000002A   0x194D             ADDS     R5,R1,R5
   \                     ??addField_4: (+1)
   \   0000002C   0x780E             LDRB     R6,[R1, #+0]
   \   0000002E   0x702E             STRB     R6,[R5, #+0]
   \   00000030   0x1E49             SUBS     R1,R1,#+1
   \   00000032   0x1E6D             SUBS     R5,R5,#+1
   \   00000034   0x428B             CMP      R3,R1
   \   00000036   0xD3F9             BCC      ??addField_4
   \                     ??addField_3: (+1)
   \   00000038   0x4669             MOV      R1,SP
   \   0000003A   0x7A09             LDRB     R1,[R1, #+8]
   \   0000003C   0x2900             CMP      R1,#+0
   \   0000003E   0xD008             BEQ      ??addField_5
   \   00000040   0x1CA1             ADDS     R1,R4,#+2
   \   00000042   0x466B             MOV      R3,SP
   \   00000044   0x7A1B             LDRB     R3,[R3, #+8]
   \                     ??addField_6: (+1)
   \   00000046   0x7815             LDRB     R5,[R2, #+0]
   \   00000048   0x700D             STRB     R5,[R1, #+0]
   \   0000004A   0x1C52             ADDS     R2,R2,#+1
   \   0000004C   0x1C49             ADDS     R1,R1,#+1
   \   0000004E   0x1E5B             SUBS     R3,R3,#+1
   \   00000050   0xD1F9             BNE      ??addField_6
   \                     ??addField_5: (+1)
   \   00000052   0x7821             LDRB     R1,[R4, #+0]
   \   00000054   0x466A             MOV      R2,SP
   \   00000056   0x7A12             LDRB     R2,[R2, #+8]
   \   00000058   0x1889             ADDS     R1,R1,R2
   \   0000005A   0x7021             STRB     R1,[R4, #+0]
   \   0000005C   0x7FC1             LDRB     R1,[R0, #+31]
   \   0000005E   0x466A             MOV      R2,SP
   \   00000060   0x7A12             LDRB     R2,[R2, #+8]
   \   00000062   0x1889             ADDS     R1,R1,R2
   \   00000064   0x77C1             STRB     R1,[R0, #+31]
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0xE02A             B        ??addField_2
   \                     ??addField_1: (+1)
   \   0000006A   0x7821             LDRB     R1,[R4, #+0]
   \   0000006C   0x1E49             SUBS     R1,R1,#+1
   \   0000006E   0xB2C9             UXTB     R1,R1
   \   00000070   0x466D             MOV      R5,SP
   \   00000072   0x7A2D             LDRB     R5,[R5, #+8]
   \   00000074   0x428D             CMP      R5,R1
   \   00000076   0xD10A             BNE      ??addField_7
   \   00000078   0x2901             CMP      R1,#+1
   \   0000007A   0xDB06             BLT      ??addField_8
   \   0000007C   0x1CA0             ADDS     R0,R4,#+2
   \                     ??addField_9: (+1)
   \   0000007E   0x7813             LDRB     R3,[R2, #+0]
   \   00000080   0x7003             STRB     R3,[R0, #+0]
   \   00000082   0x1C52             ADDS     R2,R2,#+1
   \   00000084   0x1C40             ADDS     R0,R0,#+1
   \   00000086   0x1E49             SUBS     R1,R1,#+1
   \   00000088   0xD1F9             BNE      ??addField_9
   \                     ??addField_8: (+1)
   \   0000008A   0x2300             MOVS     R3,#+0
   \   0000008C   0xE017             B        ??addField_10
   \                     ??addField_7: (+1)
   \   0000008E   0x7FC6             LDRB     R6,[R0, #+31]
   \   00000090   0x1A76             SUBS     R6,R6,R1
   \   00000092   0x1975             ADDS     R5,R6,R5
   \   00000094   0x2D20             CMP      R5,#+32
   \   00000096   0xDA12             BGE      ??addField_10
   \   00000098   0xE002             B        ??addField_11
   \                     ??addField_12: (+1)
   \   0000009A   0x789B             LDRB     R3,[R3, #+2]
   \   0000009C   0x7023             STRB     R3,[R4, #+0]
   \   0000009E   0x1C64             ADDS     R4,R4,#+1
   \                     ??addField_11: (+1)
   \   000000A0   0x7FC5             LDRB     R5,[R0, #+31]
   \   000000A2   0x1863             ADDS     R3,R4,R1
   \   000000A4   0x1C9E             ADDS     R6,R3,#+2
   \   000000A6   0x1947             ADDS     R7,R0,R5
   \   000000A8   0x42BE             CMP      R6,R7
   \   000000AA   0xD3F6             BCC      ??addField_12
   \   000000AC   0x1A69             SUBS     R1,R5,R1
   \   000000AE   0x1E89             SUBS     R1,R1,#+2
   \   000000B0   0x77C1             STRB     R1,[R0, #+31]
   \   000000B2   0x4669             MOV      R1,SP
   \   000000B4   0x7A0B             LDRB     R3,[R1, #+8]
   \   000000B6   0x7909             LDRB     R1,[R1, #+4]
   \   000000B8   0x.... 0x....      BL       _ZN18GapAdvertisingData11appendFieldENS_10DataType_tEPKhh
   \   000000BC   0x0003             MOVS     R3,R0
   \                     ??addField_10: (+1)
   \   000000BE   0x0019             MOVS     R1,R3
   \                     ??addField_2: (+1)
   \   000000C0   0x0008             MOVS     R0,R1
   \   000000C2   0xB003             ADD      SP,SP,#+12
   \   000000C4   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 4
   \   __code __interwork __softfp FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::FunctionPointerWithContext(void (*)(Gap::DisconnectionCallbackParams_t const *))
   \                     _ZN26FunctionPointerWithContextIPKN3Gap29DisconnectionCallbackParams_tEEC1EPFvS3_E: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0xC01C             STM      R0!,{R2-R4}
   \   0000000A   0x380C             SUBS     R0,R0,#+12
   \   0000000C   0x60C2             STR      R2,[R0, #+12]
   \   0000000E   0x6102             STR      R2,[R0, #+16]
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x4902             LDR      R1,??FunctionPointerWithContext_0
   \   00000014   0x60C1             STR      R1,[R0, #+12]
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return
   \   0000001A   0xBF00             Nop      
   \                     ??FunctionPointerWithContext_0:
   \   0000001C   0x........         DC32     _ZN26FunctionPointerWithContextIPKN3Gap29DisconnectionCallbackParams_tEE14functioncallerEPKS4_S3_

   \                                 In section .text, align 4
   \   __code __interwork __softfp FunctionPointerWithContext<GattReadAuthCallbackParams *>::FunctionPointerWithContext(void (*)(GattReadAuthCallbackParams *))
   \                     _ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsEC1EPFvS1_E: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0xC01C             STM      R0!,{R2-R4}
   \   0000000A   0x380C             SUBS     R0,R0,#+12
   \   0000000C   0x60C2             STR      R2,[R0, #+12]
   \   0000000E   0x6102             STR      R2,[R0, #+16]
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x4902             LDR      R1,??FunctionPointerWithContext_1
   \   00000014   0x60C1             STR      R1,[R0, #+12]
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return
   \   0000001A   0xBF00             Nop      
   \                     ??FunctionPointerWithContext_1:
   \   0000001C   0x........         DC32     _ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsE14functioncallerEPKS2_S1_

   \                                 In section .text, align 4
   \   __code __interwork __softfp FunctionPointerWithContext<GattWriteAuthCallbackParams *>::FunctionPointerWithContext(void (*)(GattWriteAuthCallbackParams *))
   \                     _ZN26FunctionPointerWithContextIP27GattWriteAuthCallbackParamsEC1EPFvS1_E: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0xC01C             STM      R0!,{R2-R4}
   \   0000000A   0x380C             SUBS     R0,R0,#+12
   \   0000000C   0x60C2             STR      R2,[R0, #+12]
   \   0000000E   0x6102             STR      R2,[R0, #+16]
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x4902             LDR      R1,??FunctionPointerWithContext_2
   \   00000014   0x60C1             STR      R1,[R0, #+12]
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return
   \   0000001A   0xBF00             Nop      
   \                     ??FunctionPointerWithContext_2:
   \   0000001C   0x........         DC32     _ZN26FunctionPointerWithContextIP27GattWriteAuthCallbackParamsE14functioncallerEPKS2_S1_

   \                                 In section .text, align 4
   \   __code __interwork __softfp FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *>::FunctionPointerWithContext(void (*)(BLE::OnEventsToProcessCallbackContext *))
   \                     _ZN26FunctionPointerWithContextIPN3BLE32OnEventsToProcessCallbackContextEEC1EPFvS2_E: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0xC01C             STM      R0!,{R2-R4}
   \   0000000A   0x380C             SUBS     R0,R0,#+12
   \   0000000C   0x60C2             STR      R2,[R0, #+12]
   \   0000000E   0x6102             STR      R2,[R0, #+16]
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x4902             LDR      R1,??FunctionPointerWithContext_3
   \   00000014   0x60C1             STR      R1,[R0, #+12]
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return
   \   0000001A   0xBF00             Nop      
   \                     ??FunctionPointerWithContext_3:
   \   0000001C   0x........         DC32     _ZN26FunctionPointerWithContextIPN3BLE32OnEventsToProcessCallbackContextEE14functioncallerEPKS3_S2_

   \                                 In section .text, align 4
   \   __code __interwork __softfp FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::FunctionPointerWithContext(void (*)(BLE::InitializationCompleteCallbackContext *))
   \                     _ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEEC1EPFvS2_E: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0xC01C             STM      R0!,{R2-R4}
   \   0000000A   0x380C             SUBS     R0,R0,#+12
   \   0000000C   0x60C2             STR      R2,[R0, #+12]
   \   0000000E   0x6102             STR      R2,[R0, #+16]
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x4902             LDR      R1,??FunctionPointerWithContext_4
   \   00000014   0x60C1             STR      R1,[R0, #+12]
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return
   \   0000001A   0xBF00             Nop      
   \                     ??FunctionPointerWithContext_4:
   \   0000001C   0x........         DC32     _ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEE14functioncallerEPKS3_S2_

   \                                 In section .text, align 2
   \   __code __interwork __softfp FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::FunctionPointerWithContext(FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *> const &)
   \                     _ZN26FunctionPointerWithContextIPKN3Gap29DisconnectionCallbackParams_tEEC1ERKS4_: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xC91C             LDM      R1!,{R2-R4}
   \   00000004   0xC01C             STM      R0!,{R2-R4}
   \   00000006   0x390C             SUBS     R1,R1,#+12
   \   00000008   0x380C             SUBS     R0,R0,#+12
   \   0000000A   0x68C9             LDR      R1,[R1, #+12]
   \   0000000C   0x60C1             STR      R1,[R0, #+12]
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x6101             STR      R1,[R0, #+16]
   \   00000012   0xBC10             POP      {R4}
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::FunctionPointerWithContext(FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *> const &)
   \                     _ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEEC1ERKS3_: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xC91C             LDM      R1!,{R2-R4}
   \   00000004   0xC01C             STM      R0!,{R2-R4}
   \   00000006   0x390C             SUBS     R1,R1,#+12
   \   00000008   0x380C             SUBS     R0,R0,#+12
   \   0000000A   0x68C9             LDR      R1,[R1, #+12]
   \   0000000C   0x60C1             STR      R1,[R0, #+12]
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x6101             STR      R1,[R0, #+16]
   \   00000012   0xBC10             POP      {R4}
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::functioncaller(FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *> const *, Gap::DisconnectionCallbackParams_t const *)
   \                     _ZN26FunctionPointerWithContextIPKN3Gap29DisconnectionCallbackParams_tEE14functioncallerEPKS4_S3_: (+1)
   \   00000000   0x6802             LDR      R2,[R0, #+0]
   \   00000002   0x0010             MOVS     R0,R2
   \   00000004   0xD100             BNE      ??functioncaller_0
   \   00000006   0x4770             BX       LR
   \                     ??functioncaller_0: (+1)
   \   00000008   0xB580             PUSH     {R7,LR}
   \   0000000A   0x0008             MOVS     R0,R1
   \   0000000C   0x4790             BLX      R2
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void FunctionPointerWithContext<GattReadAuthCallbackParams *>::functioncaller(FunctionPointerWithContext<GattReadAuthCallbackParams *> const *, GattReadAuthCallbackParams *)
   \                     _ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsE14functioncallerEPKS2_S1_: (+1)
   \   00000000   0x6802             LDR      R2,[R0, #+0]
   \   00000002   0x0010             MOVS     R0,R2
   \   00000004   0xD100             BNE      ??functioncaller_1
   \   00000006   0x4770             BX       LR
   \                     ??functioncaller_1: (+1)
   \   00000008   0xB580             PUSH     {R7,LR}
   \   0000000A   0x0008             MOVS     R0,R1
   \   0000000C   0x4790             BLX      R2
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void FunctionPointerWithContext<GattWriteAuthCallbackParams *>::functioncaller(FunctionPointerWithContext<GattWriteAuthCallbackParams *> const *, GattWriteAuthCallbackParams *)
   \                     _ZN26FunctionPointerWithContextIP27GattWriteAuthCallbackParamsE14functioncallerEPKS2_S1_: (+1)
   \   00000000   0x6802             LDR      R2,[R0, #+0]
   \   00000002   0x0010             MOVS     R0,R2
   \   00000004   0xD100             BNE      ??functioncaller_2
   \   00000006   0x4770             BX       LR
   \                     ??functioncaller_2: (+1)
   \   00000008   0xB580             PUSH     {R7,LR}
   \   0000000A   0x0008             MOVS     R0,R1
   \   0000000C   0x4790             BLX      R2
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *>::functioncaller(FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *> const *, BLE::OnEventsToProcessCallbackContext *)
   \                     _ZN26FunctionPointerWithContextIPN3BLE32OnEventsToProcessCallbackContextEE14functioncallerEPKS3_S2_: (+1)
   \   00000000   0x6802             LDR      R2,[R0, #+0]
   \   00000002   0x0010             MOVS     R0,R2
   \   00000004   0xD100             BNE      ??functioncaller_3
   \   00000006   0x4770             BX       LR
   \                     ??functioncaller_3: (+1)
   \   00000008   0xB580             PUSH     {R7,LR}
   \   0000000A   0x0008             MOVS     R0,R1
   \   0000000C   0x4790             BLX      R2
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::functioncaller(FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *> const *, BLE::InitializationCompleteCallbackContext *)
   \                     _ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEE14functioncallerEPKS3_S2_: (+1)
   \   00000000   0x6802             LDR      R2,[R0, #+0]
   \   00000002   0x0010             MOVS     R0,R2
   \   00000004   0xD100             BNE      ??functioncaller_4
   \   00000006   0x4770             BX       LR
   \                     ??functioncaller_4: (+1)
   \   00000008   0xB580             PUSH     {R7,LR}
   \   0000000A   0x0008             MOVS     R0,R1
   \   0000000C   0x4790             BLX      R2
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp ble_error_t Gap::startAdvertising()
   \                     _ZN3Gap16startAdvertisingEv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x1D21             ADDS     R1,R4,#+4
   \   00000006   0x6822             LDR      R2,[R4, #+0]
   \   00000008   0x6FD2             LDR      R2,[R2, #+124]
   \   0000000A   0x4790             BLX      R2
   \   0000000C   0x0001             MOVS     R1,R0
   \   0000000E   0xD103             BNE      ??startAdvertising_0
   \   00000010   0x6DA1             LDR      R1,[R4, #+88]
   \   00000012   0x2201             MOVS     R2,#+1
   \   00000014   0x430A             ORRS     R2,R2,R1
   \   00000016   0x65A2             STR      R2,[R4, #+88]
   \                     ??startAdvertising_0: (+1)
   \   00000018   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp ble_error_t Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType, std::uint8_t const *, std::uint8_t)
   \                     _ZN3Gap28accumulateAdvertisingPayloadEN18GapAdvertisingData10DataType_tEPKhh: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
   \   0000000C   0x4668             MOV      R0,SP
   \   0000000E   0x0021             MOVS     R1,R4
   \   00000010   0x310A             ADDS     R1,R1,#+10
   \   00000012   0x2222             MOVS     R2,#+34
   \   00000014   0x.... 0x....      BL       __aeabi_memcpy
   \   00000018   0x003B             MOVS     R3,R7
   \   0000001A   0x0032             MOVS     R2,R6
   \   0000001C   0x0029             MOVS     R1,R5
   \   0000001E   0x4668             MOV      R0,SP
   \   00000020   0x.... 0x....      BL       _ZN18GapAdvertisingData7addDataENS_10DataType_tEPKhh
   \   00000024   0x0001             MOVS     R1,R0
   \   00000026   0xD10F             BNE      ??accumulateAdvertisingPayload_0
   \   00000028   0x0022             MOVS     R2,R4
   \   0000002A   0x3234             ADDS     R2,R2,#+52
   \   0000002C   0x4669             MOV      R1,SP
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x6823             LDR      R3,[R4, #+0]
   \   00000032   0x6F9B             LDR      R3,[R3, #+120]
   \   00000034   0x4798             BLX      R3
   \   00000036   0x0005             MOVS     R5,R0
   \   00000038   0xD105             BNE      ??accumulateAdvertisingPayload_1
   \   0000003A   0x0020             MOVS     R0,R4
   \   0000003C   0x300A             ADDS     R0,R0,#+10
   \   0000003E   0x4669             MOV      R1,SP
   \   00000040   0x2222             MOVS     R2,#+34
   \   00000042   0x.... 0x....      BL       __aeabi_memcpy
   \                     ??accumulateAdvertisingPayload_1: (+1)
   \   00000046   0x0028             MOVS     R0,R5
   \                     ??accumulateAdvertisingPayload_0: (+1)
   \   00000048   0xB009             ADD      SP,SP,#+36
   \   0000004A   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp UUID::UUID(UUID const &)
   \                     _ZN4UUIDC1ERKS_: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x7808             LDRB     R0,[R1, #+0]
   \   00000006   0x7020             STRB     R0,[R4, #+0]
   \   00000008   0x8A48             LDRH     R0,[R1, #+18]
   \   0000000A   0x8260             STRH     R0,[R4, #+18]
   \   0000000C   0x2210             MOVS     R2,#+16
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
   \   00000010   0x1C60             ADDS     R0,R4,#+1
   \   00000012   0x.... 0x....      BL       __aeabi_memcpy
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4
   \   __code __interwork __softfp ButtonService::ButtonService(BLE &, bool)
   \                     _ZN13ButtonServiceC1ER3BLEb: (+1)
   \   00000000   0xB5F4             PUSH     {R2,R4-R7,LR}
   \   00000002   0xB08E             SUB      SP,SP,#+56
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x6029             STR      R1,[R5, #+0]
   \   00000008   0xAE01             ADD      R6,SP,#+4
   \   0000000A   0x2400             MOVS     R4,#+0
   \   0000000C   0x7034             STRB     R4,[R6, #+0]
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x1C70             ADDS     R0,R6,#+1
   \   00000012   0x.... 0x....      BL       __aeabi_memclr
   \   00000016   0x481F             LDR      R0,??ButtonService_0  ;; 0xa001
   \   00000018   0x8270             STRH     R0,[R6, #+18]
   \   0000001A   0xA901             ADD      R1,SP,#+4
   \   0000001C   0x1D28             ADDS     R0,R5,#+4
   \   0000001E   0x.... 0x....      BL       _ZN4UUIDC1ERKS_
   \   00000022   0xA80E             ADD      R0,SP,#+56
   \   00000024   0x61A8             STR      R0,[R5, #+24]
   \   00000026   0x2601             MOVS     R6,#+1
   \   00000028   0x83AE             STRH     R6,[R5, #+28]
   \   0000002A   0x83EE             STRH     R6,[R5, #+30]
   \   0000002C   0x2120             MOVS     R1,#+32
   \   0000002E   0x546C             STRB     R4,[R5, R1]
   \   00000030   0x846C             STRH     R4,[R5, #+34]
   \   00000032   0x0028             MOVS     R0,R5
   \   00000034   0x3024             ADDS     R0,R0,#+36
   \   00000036   0x2112             MOVS     R1,#+18
   \   00000038   0x7001             STRB     R1,[R0, #+0]
   \   0000003A   0x7046             STRB     R6,[R0, #+1]
   \   0000003C   0x6044             STR      R4,[R0, #+4]
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x7201             STRB     R1,[R0, #+8]
   \   00000042   0x7241             STRB     R1,[R0, #+9]
   \   00000044   0x7281             STRB     R1,[R0, #+10]
   \   00000046   0x0028             MOVS     R0,R5
   \   00000048   0x3030             ADDS     R0,R0,#+48
   \   0000004A   0x.... 0x....      BL       _ZN26FunctionPointerWithContextIP26GattReadAuthCallbackParamsEC1EPFvS1_E
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x0028             MOVS     R0,R5
   \   00000052   0x3044             ADDS     R0,R0,#+68
   \   00000054   0x.... 0x....      BL       _ZN26FunctionPointerWithContextIP27GattWriteAuthCallbackParamsEC1EPFvS1_E
   \   00000058   0x1D28             ADDS     R0,R5,#+4
   \   0000005A   0x9000             STR      R0,[SP, #+0]
   \   0000005C   0xAF01             ADD      R7,SP,#+4
   \   0000005E   0x703C             STRB     R4,[R7, #+0]
   \   00000060   0x2110             MOVS     R1,#+16
   \   00000062   0x1C78             ADDS     R0,R7,#+1
   \   00000064   0x.... 0x....      BL       __aeabi_memclr
   \   00000068   0x20A0             MOVS     R0,#+160
   \   0000006A   0x0200             LSLS     R0,R0,#+8        ;; #+40960
   \   0000006C   0x8278             STRH     R0,[R7, #+18]
   \   0000006E   0xA901             ADD      R1,SP,#+4
   \   00000070   0xA806             ADD      R0,SP,#+24
   \   00000072   0x.... 0x....      BL       _ZN4UUIDC1ERKS_
   \   00000076   0xA806             ADD      R0,SP,#+24
   \   00000078   0x7506             STRB     R6,[R0, #+20]
   \   0000007A   0x4669             MOV      R1,SP
   \   0000007C   0x910C             STR      R1,[SP, #+48]
   \   0000007E   0x8384             STRH     R4,[R0, #+28]
   \   00000080   0x6828             LDR      R0,[R5, #+0]
   \   00000082   0x.... 0x....      BL       _ZN3BLE10gattServerEv
   \   00000086   0xA906             ADD      R1,SP,#+24
   \   00000088   0x6802             LDR      R2,[R0, #+0]
   \   0000008A   0x6812             LDR      R2,[R2, #+0]
   \   0000008C   0x4790             BLX      R2
   \   0000008E   0x0028             MOVS     R0,R5
   \   00000090   0xB00F             ADD      SP,SP,#+60
   \   00000092   0xBDF0             POP      {R4-R7,PC}       ;; return
   \                     ??ButtonService_0:
   \   00000094   0x0000A001         DC32     0xa001

   \                                 In section .text, align 2
   \   __interwork __softfp void ButtonService::updateButtonState(bool)
   \                     _ZN13ButtonService17updateButtonStateEb: (+1)
   \   00000000   0xB513             PUSH     {R0,R1,R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x6820             LDR      R0,[R4, #+0]
   \   00000006   0x.... 0x....      BL       _ZN3BLE10gattServerEv
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x9100             STR      R1,[SP, #+0]
   \   0000000E   0x2301             MOVS     R3,#+1
   \   00000010   0xAA01             ADD      R2,SP,#+4
   \   00000012   0x8C61             LDRH     R1,[R4, #+34]
   \   00000014   0x6804             LDR      R4,[R0, #+0]
   \   00000016   0x68E4             LDR      R4,[R4, #+12]
   \   00000018   0x47A0             BLX      R4
   \   0000001A   0xBD13             POP      {R0,R1,R4,PC}    ;; return
      2          
      3          

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine: (+1)
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
      4          Serial serialport(USBTX, USBRX);
   \   00000002   0x....             LDR      R4,??DataTable12
   \   00000004   0x2096             MOVS     R0,#+150
   \   00000006   0x0180             LSLS     R0,R0,#+6        ;; #+9600
   \   00000008   0x9000             STR      R0,[SP, #+0]
   \   0000000A   0x2300             MOVS     R3,#+0
   \   0000000C   0x220B             MOVS     R2,#+11
   \   0000000E   0x2108             MOVS     R1,#+8
   \   00000010   0x1D20             ADDS     R0,R4,#+4
   \   00000012   0x.... 0x....      BL       _ZN4mbed6SerialC1E7PinNameS1_PKci
      5          DigitalOut led1(LED1);
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0x3078             ADDS     R0,R0,#+120
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0xC006             STM      R0!,{R1,R2}
   \   00000020   0x2106             MOVS     R1,#+6
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0x3078             ADDS     R0,R0,#+120
   \   00000026   0x.... 0x....      BL       gpio_init_out
      6          DigitalOut led2(LED2);
   \   0000002A   0x0026             MOVS     R6,R4
   \   0000002C   0x3680             ADDS     R6,R6,#+128
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0xC603             STM      R6!,{R0,R1}
   \   00000034   0x3E08             SUBS     R6,R6,#+8
   \   00000036   0x2107             MOVS     R1,#+7
   \   00000038   0x0030             MOVS     R0,R6
   \   0000003A   0x.... 0x....      BL       gpio_init_out
      7          DigitalOut led3(LED3);
   \   0000003E   0x0025             MOVS     R5,R4
   \   00000040   0x3588             ADDS     R5,R5,#+136
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0xC503             STM      R5!,{R0,R1}
   \   00000048   0x3D08             SUBS     R5,R5,#+8
   \   0000004A   0x210E             MOVS     R1,#+14
   \   0000004C   0x0028             MOVS     R0,R5
   \   0000004E   0x.... 0x....      BL       gpio_init_out
      8          SPI spi(SPI_MOSI, SPI_MISO, SPI_SCK, SPI_CS); // mosi, miso, sclk
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x9000             STR      R0,[SP, #+0]
   \   00000056   0x2300             MOVS     R3,#+0
   \   00000058   0x2203             MOVS     R2,#+3
   \   0000005A   0x2102             MOVS     R1,#+2
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0x3090             ADDS     R0,R0,#+144
   \   00000060   0x.... 0x....      BL       _ZN4mbed3SPIC1E7PinNameS1_S1_S1_
      9          
     10          Blue1 blue1(&serialport, &led1, &led2, &led3, &spi);
   \   00000064   0x9001             STR      R0,[SP, #+4]
   \   00000066   0x9500             STR      R5,[SP, #+0]
   \   00000068   0x0033             MOVS     R3,R6
   \   0000006A   0x0022             MOVS     R2,R4
   \   0000006C   0x3278             ADDS     R2,R2,#+120
   \   0000006E   0x1D21             ADDS     R1,R4,#+4
   \   00000070   0x0020             MOVS     R0,R4
   \   00000072   0x30B4             ADDS     R0,R0,#+180
   \   00000074   0x.... 0x....      BL       _ZN5Blue1C1EPN4mbed6SerialEPNS0_10DigitalOutES4_S4_PNS0_3SPIE
     11          
     12          
     13          /*******************************************************************************
     14          *                               ble api example
     15          *******************************************************************************/
     16          DigitalIn button(PUSH1); //InterruptIn button(BLE_BUTTON_PIN_NAME);
   \   00000078   0x0020             MOVS     R0,R4
   \   0000007A   0x30D4             ADDS     R0,R0,#+212
   \   0000007C   0x2100             MOVS     R1,#+0
   \   0000007E   0x2200             MOVS     R2,#+0
   \   00000080   0xC006             STM      R0!,{R1,R2}
   \   00000082   0x3808             SUBS     R0,R0,#+8
   \   00000084   0x210D             MOVS     R1,#+13
   \   00000086   0x.... 0x....      BL       gpio_init_in
     17          static EventQueue eventQueue(/* event count */ 10 * EVENTS_EVENT_SIZE);
   \   0000008A   0x2200             MOVS     R2,#+0
   \   0000008C   0x2182             MOVS     R1,#+130
   \   0000008E   0x0089             LSLS     R1,R1,#+2        ;; #+520
   \   00000090   0x0020             MOVS     R0,R4
   \   00000092   0x30DC             ADDS     R0,R0,#+220
   \   00000094   0x.... 0x....      BL       _ZN6events10EventQueueC1EjPh
   \   00000098   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return

   \                                 In section .text, align 4, keep-with-next
     18          const static char     DEVICE_NAME[] = "Button";
   \                     DEVICE_NAME:
   \   00000000   0x42 0x75          DC8 "Button"
   \              0x74 0x74    
   \              0x6F 0x6E    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
     19          static const uint16_t uuid16_list[] = {ButtonService::BUTTON_SERVICE_UUID};
   \                     uuid16_list:
   \   00000000   0xA000             DC16 40960

   \                                 In section .bss, align 4
     20          ButtonService *buttonServicePtr;
   \                     buttonServicePtr:
   \   00000000                      DS8 4
   \                     serialport:
   \   00000004                      DS8 116
   \                     led1:
   \   00000078                      DS8 8
   \                     led2:
   \   00000080                      DS8 8
   \                     led3:
   \   00000088                      DS8 8
   \                     spi:
   \   00000090                      DS8 36
   \                     blue1:
   \   000000B4                      DS8 32
   \                     button:
   \   000000D4                      DS8 8
   \   000000DC                      DS8 96

   \                                 In section .text, align 2, keep-with-next
     21          void blinkCallback(void){
   \                     _Z13blinkCallbackv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     22              led3 = !led3; /* Do blinky on LED3 to indicate system aliveness. */
   \   00000002   0x....             LDR      R4,??DataTable12_1
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       gpio_read
   \   0000000A   0x1E41             SUBS     R1,R0,#+1
   \   0000000C   0x4189             SBCS     R1,R1,R1
   \   0000000E   0x0FC9             LSRS     R1,R1,#+31
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       gpio_write
     23          }
   \   00000016   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
     24          void scheduleBleEventsProcessing(BLE::OnEventsToProcessCallbackContext* context) {
   \                     _Z27scheduleBleEventsProcessingPN3BLE32OnEventsToProcessCallbackContextE: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
     25              BLE &ble = BLE::Instance();
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       _ZN3BLE8InstanceEj
     26              eventQueue.call(Callback<void()>(&ble, &BLE::processEvents));
   \   0000000A   0xBF00             Nop      
   \   0000000C   0x....             ADR.N    R1,?_3
   \   0000000E   0xC90C             LDM      R1!,{R2,R3}
   \   00000010   0x0001             MOVS     R1,R0
   \   00000012   0x4668             MOV      R0,SP
   \   00000014   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEEC1I3BLES4_EEPT0_MT_FvvE
   \   00000018   0x....             LDR      R4,??DataTable12_2
   \   0000001A   0x2110             MOVS     R1,#+16
   \   0000001C   0x0020             MOVS     R0,R4
   \   0000001E   0x.... 0x....      BL       equeue_alloc
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD00B             BEQ      ??scheduleBleEventsProcessing_0
   \   00000026   0x4669             MOV      R1,SP
   \   00000028   0x.... 0x....      BL       _ZN4mbed8CallbackIFvvEEC1ERKS2_
   \   0000002C   0x0005             MOVS     R5,R0
   \   0000002E   0x....             LDR      R1,??DataTable12_3
   \   00000030   0x.... 0x....      BL       equeue_event_dtor
   \   00000034   0x002A             MOVS     R2,R5
   \   00000036   0x....             LDR      R1,??DataTable12_4
   \   00000038   0x0020             MOVS     R0,R4
   \   0000003A   0x.... 0x....      BL       equeue_post
   \                     ??scheduleBleEventsProcessing_0: (+1)
   \   0000003E   0x9903             LDR      R1,[SP, #+12]
   \   00000040   0x2900             CMP      R1,#+0
   \   00000042   0xD002             BEQ      ??scheduleBleEventsProcessing_1
   \   00000044   0x4668             MOV      R0,SP
   \   00000046   0x6889             LDR      R1,[R1, #+8]
   \   00000048   0x4788             BLX      R1
     27          }
   \                     ??scheduleBleEventsProcessing_1: (+1)
   \   0000004A   0xB005             ADD      SP,SP,#+20
   \   0000004C   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
     28          void buttonPressedCallback(void){
   \                     _Z21buttonPressedCallbackv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
     29              eventQueue.call(Callback<void(bool)>(buttonServicePtr, &ButtonService::updateButtonState), true);
   \   00000004   0x....             LDR      R4,??DataTable12
   \   00000006   0xBF00             Nop      
   \   00000008   0x....             ADR.N    R0,?_4
   \   0000000A   0xC80C             LDM      R0!,{R2,R3}
   \   0000000C   0x6821             LDR      R1,[R4, #+0]
   \   0000000E   0x4668             MOV      R0,SP
   \   00000010   0x.... 0x....      BL       _ZN4mbed8CallbackIFvbEEC1I13ButtonServiceS4_EEPT0_MT_FvbE
   \   00000014   0x0001             MOVS     R1,R0
   \   00000016   0x2201             MOVS     R2,#+1
   \   00000018   0x....             B.N      ?Subroutine0
     30          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x0020             MOVS     R0,R4
   \   00000002   0x30DC             ADDS     R0,R0,#+220
   \   00000004   0x.... 0x....      BL       _ZN6events10EventQueue4callIN4mbed8CallbackIFvbEEEbEEiT_T0_
   \   00000008   0x9903             LDR      R1,[SP, #+12]
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD002             BEQ      ??Subroutine0_0
   \   0000000E   0x4668             MOV      R0,SP
   \   00000010   0x6889             LDR      R1,[R1, #+8]
   \   00000012   0x4788             BLX      R1
   \                     ??Subroutine0_0: (+1)
   \   00000014   0xB004             ADD      SP,SP,#+16
   \   00000016   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
     31          void buttonReleasedCallback(void){
   \                     _Z22buttonReleasedCallbackv: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
     32              eventQueue.call(Callback<void(bool)>(buttonServicePtr, &ButtonService::updateButtonState), false);
   \   00000004   0x....             LDR      R4,??DataTable12
   \   00000006   0xBF00             Nop      
   \   00000008   0x....             ADR.N    R0,?_4
   \   0000000A   0xC80C             LDM      R0!,{R2,R3}
   \   0000000C   0x6821             LDR      R1,[R4, #+0]
   \   0000000E   0x4668             MOV      R0,SP
   \   00000010   0x.... 0x....      BL       _ZN4mbed8CallbackIFvbEEC1I13ButtonServiceS4_EEPT0_MT_FvbE
   \   00000014   0x0001             MOVS     R1,R0
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018                      REQUIRE ?Subroutine0
   \   00000018                      ;; // Fall through to label ?Subroutine0
     33          }

   \                                 In section .text, align 2, keep-with-next
     34          void disconnectionCallback(const Gap::DisconnectionCallbackParams_t *params){
   \                     _Z21disconnectionCallbackPKN3Gap29DisconnectionCallbackParams_tE: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     35              BLE::Instance().gap().startAdvertising(); // restart advertising
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       _ZN3BLE8InstanceEj
   \   00000008   0x.... 0x....      BL       _ZN3BLE3gapEv
   \   0000000C   0x.... 0x....      BL       _ZN3Gap16startAdvertisingEv
     36          }
   \   00000010   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     37          void onBleInitError(BLE &ble, ble_error_t error){
     38              /* Initialization error handling should go here */
     39          }
   \                     _Z14onBleInitErrorR3BLE11ble_error_t: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
     40          void printMacAddress(){
   \                     _Z15printMacAddressv: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     41              /* Print out device MAC address to the console*/
     42              Gap::AddressType_t addr_type;
     43              Gap::Address_t address;
     44              BLE::Instance().gap().getAddress(&addr_type, address);
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       _ZN3BLE8InstanceEj
   \   0000000A   0x.... 0x....      BL       _ZN3BLE3gapEv
   \   0000000E   0xAA01             ADD      R2,SP,#+4
   \   00000010   0x4669             MOV      R1,SP
   \   00000012   0x6803             LDR      R3,[R0, #+0]
   \   00000014   0x685B             LDR      R3,[R3, #+4]
   \   00000016   0x4798             BLX      R3
     45              printf("DEVICE MAC ADDRESS: ");
   \   00000018   0x....             ADR.N    R0,?_0
   \   0000001A   0x.... 0x....      BL       printf
     46              for (int i = 5; i >= 1; i--){
   \   0000001E   0xBF00             Nop      
   \   00000020   0x....             ADR.N    R4,?_1
   \   00000022   0xAD01             ADD      R5,SP,#+4
     47                  printf("%02x:", address[i]);
   \   00000024   0x7969             LDRB     R1,[R5, #+5]
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0x.... 0x....      BL       printf
   \   0000002C   0x7929             LDRB     R1,[R5, #+4]
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x.... 0x....      BL       printf
   \   00000034   0x78E9             LDRB     R1,[R5, #+3]
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0x.... 0x....      BL       printf
   \   0000003C   0x78A9             LDRB     R1,[R5, #+2]
   \   0000003E   0x0020             MOVS     R0,R4
   \   00000040   0x.... 0x....      BL       printf
   \   00000044   0x7869             LDRB     R1,[R5, #+1]
   \   00000046   0x0020             MOVS     R0,R4
   \   00000048   0x.... 0x....      BL       printf
     48              }
     49              printf("%02x\r\n", address[0]);
   \   0000004C   0x7829             LDRB     R1,[R5, #+0]
   \   0000004E   0xBF00             Nop      
   \   00000050   0x....             ADR.N    R0,?_2
   \   00000052   0x.... 0x....      BL       printf
     50          }
   \   00000056   0xB003             ADD      SP,SP,#+12
   \   00000058   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
     51          void bleInitComplete(BLE::InitializationCompleteCallbackContext *params){
   \                     _Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB090             SUB      SP,SP,#+64
     52              BLE&        ble   = params->ble;
   \   00000004   0x6805             LDR      R5,[R0, #+0]
     53              ble_error_t error = params->error;
     54              if (error != BLE_ERROR_NONE) {
   \   00000006   0x7900             LDRB     R0,[R0, #+4]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD000             BEQ      .+4
   \   0000000C   0xE07F             B        ??bleInitComplete_0
     55                  /* In case of error, forward the error handling to onBleInitError */
     56                  onBleInitError(ble, error);
     57                  return;
     58              }
     59              /* Ensure that it is the default instance of BLE */
     60              if(ble.getInstanceID() != BLE::DEFAULT_INSTANCE) {
   \   0000000E   0x6828             LDR      R0,[R5, #+0]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD000             BEQ      .+4
   \   00000014   0xE07B             B        ??bleInitComplete_0
     61                  return;
     62              }
     63              // disconnection callback
     64              ble.gap().onDisconnection(disconnectionCallback);
   \   00000016   0x....             LDR      R1,??DataTable12_5
   \   00000018   0xA80A             ADD      R0,SP,#+40
   \   0000001A   0x.... 0x....      BL       _ZN26FunctionPointerWithContextIPKN3Gap29DisconnectionCallbackParams_tEEC1EPFvS3_E
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0x.... 0x....      BL       _ZN3BLE3gapEv
   \   00000024   0x0004             MOVS     R4,R0
   \   00000026   0x2014             MOVS     R0,#+20
   \   00000028   0x.... 0x....      BL       _Znwj
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD002             BEQ      ??bleInitComplete_1
   \   00000030   0xA90A             ADD      R1,SP,#+40
   \   00000032   0x.... 0x....      BL       _ZN26FunctionPointerWithContextIPKN3Gap29DisconnectionCallbackParams_tEEC1ERKS4_
   \                     ??bleInitComplete_1: (+1)
   \   00000036   0x0021             MOVS     R1,R4
   \   00000038   0x31A4             ADDS     R1,R1,#+164
   \   0000003A   0x680A             LDR      R2,[R1, #+0]
   \   0000003C   0x2A00             CMP      R2,#+0
   \   0000003E   0xD000             BEQ      ??bleInitComplete_2
   \   00000040   0x6102             STR      R2,[R0, #+16]
   \                     ??bleInitComplete_2: (+1)
   \   00000042   0x6008             STR      R0,[R1, #+0]
     65              //button
     66              //button.fall(buttonPressedCallback);
     67              //button.rise(buttonReleasedCallback);
     68              /* Setup primary service. */
     69              buttonServicePtr = new ButtonService(ble, false /* initial value for button pressed */);
   \   00000044   0x2058             MOVS     R0,#+88
   \   00000046   0x.... 0x....      BL       _Znwj
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD003             BEQ      ??bleInitComplete_3
   \   0000004E   0x2200             MOVS     R2,#+0
   \   00000050   0x0029             MOVS     R1,R5
   \   00000052   0x.... 0x....      BL       _ZN13ButtonServiceC1ER3BLEb
   \                     ??bleInitComplete_3: (+1)
   \   00000056   0x....             LDR      R1,??DataTable12
   \   00000058   0x6008             STR      R0,[R1, #+0]
     70              /* setup advertising */
     71              ble.gap().accumulateAdvertisingPayload(GapAdvertisingData::BREDR_NOT_SUPPORTED | GapAdvertisingData::LE_GENERAL_DISCOVERABLE);
   \   0000005A   0x0028             MOVS     R0,R5
   \   0000005C   0x.... 0x....      BL       _ZN3BLE3gapEv
   \   00000060   0x0004             MOVS     R4,R0
   \   00000062   0xA801             ADD      R0,SP,#+4
   \   00000064   0x0021             MOVS     R1,R4
   \   00000066   0x310A             ADDS     R1,R1,#+10
   \   00000068   0x2222             MOVS     R2,#+34
   \   0000006A   0x.... 0x....      BL       __aeabi_memcpy
   \   0000006E   0x2006             MOVS     R0,#+6
   \   00000070   0x4669             MOV      R1,SP
   \   00000072   0x7008             STRB     R0,[R1, #+0]
   \   00000074   0x2301             MOVS     R3,#+1
   \   00000076   0x466A             MOV      R2,SP
   \   00000078   0x2101             MOVS     R1,#+1
   \   0000007A   0xA801             ADD      R0,SP,#+4
   \   0000007C   0x.... 0x....      BL       _ZN18GapAdvertisingData7addDataENS_10DataType_tEPKhh
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD10E             BNE      ??bleInitComplete_4
   \   00000084   0x0022             MOVS     R2,R4
   \   00000086   0x3234             ADDS     R2,R2,#+52
   \   00000088   0xA901             ADD      R1,SP,#+4
   \   0000008A   0x0020             MOVS     R0,R4
   \   0000008C   0x6823             LDR      R3,[R4, #+0]
   \   0000008E   0x6F9B             LDR      R3,[R3, #+120]
   \   00000090   0x4798             BLX      R3
   \   00000092   0x2800             CMP      R0,#+0
   \   00000094   0xD105             BNE      ??bleInitComplete_4
   \   00000096   0x0020             MOVS     R0,R4
   \   00000098   0x300A             ADDS     R0,R0,#+10
   \   0000009A   0xA901             ADD      R1,SP,#+4
   \   0000009C   0x2222             MOVS     R2,#+34
   \   0000009E   0x.... 0x....      BL       __aeabi_memcpy
     72              ble.gap().accumulateAdvertisingPayload(GapAdvertisingData::COMPLETE_LIST_16BIT_SERVICE_IDS, (uint8_t *)uuid16_list, sizeof(uuid16_list));
   \                     ??bleInitComplete_4: (+1)
   \   000000A2   0x0028             MOVS     R0,R5
   \   000000A4   0x.... 0x....      BL       _ZN3BLE3gapEv
   \   000000A8   0x2302             MOVS     R3,#+2
   \   000000AA   0xBF00             Nop      
   \   000000AC   0x....             ADR.N    R2,uuid16_list
   \   000000AE   0x2103             MOVS     R1,#+3
   \   000000B0   0x.... 0x....      BL       _ZN3Gap28accumulateAdvertisingPayloadEN18GapAdvertisingData10DataType_tEPKhh
     73              ble.gap().accumulateAdvertisingPayload(GapAdvertisingData::COMPLETE_LOCAL_NAME, (uint8_t *)DEVICE_NAME, sizeof(DEVICE_NAME));
   \   000000B4   0x0028             MOVS     R0,R5
   \   000000B6   0x.... 0x....      BL       _ZN3BLE3gapEv
   \   000000BA   0x2307             MOVS     R3,#+7
   \   000000BC   0x....             ADR.N    R2,DEVICE_NAME
   \   000000BE   0x2109             MOVS     R1,#+9
   \   000000C0   0x.... 0x....      BL       _ZN3Gap28accumulateAdvertisingPayloadEN18GapAdvertisingData10DataType_tEPKhh
     74              ble.gap().setAdvertisingType(GapAdvertisingParams::ADV_CONNECTABLE_UNDIRECTED);
   \   000000C4   0x0028             MOVS     R0,R5
   \   000000C6   0x.... 0x....      BL       _ZN3BLE3gapEv
   \   000000CA   0x2100             MOVS     R1,#+0
   \   000000CC   0x7101             STRB     R1,[R0, #+4]
     75              ble.gap().setAdvertisingInterval(1000); /* 1000ms. */
   \   000000CE   0x0028             MOVS     R0,R5
   \   000000D0   0x.... 0x....      BL       _ZN3BLE3gapEv
   \   000000D4   0x0004             MOVS     R4,R0
   \   000000D6   0x26C8             MOVS     R6,#+200
   \   000000D8   0x00F6             LSLS     R6,R6,#+3        ;; #+1600
   \   000000DA   0x6821             LDR      R1,[R4, #+0]
   \   000000DC   0x6889             LDR      R1,[R1, #+8]
   \   000000DE   0x4788             BLX      R1
   \   000000E0   0x....             LDR      R1,??DataTable12_6  ;; 0x3e9
   \   000000E2   0x4288             CMP      R0,R1
   \   000000E4   0xD30B             BCC      ??bleInitComplete_5
   \   000000E6   0x0020             MOVS     R0,R4
   \   000000E8   0x6821             LDR      R1,[R4, #+0]
   \   000000EA   0x6889             LDR      R1,[R1, #+8]
   \   000000EC   0x4788             BLX      R1
   \   000000EE   0x21FA             MOVS     R1,#+250
   \   000000F0   0x0089             LSLS     R1,R1,#+2        ;; #+1000
   \   000000F2   0x4341             MULS     R1,R0,R1
   \   000000F4   0x0008             MOVS     R0,R1
   \   000000F6   0x....             LDR      R1,??DataTable12_7  ;; 0x271
   \   000000F8   0x.... 0x....      BL       __aeabi_uidiv
   \   000000FC   0x0006             MOVS     R6,R0
   \                     ??bleInitComplete_5: (+1)
   \   000000FE   0x80E6             STRH     R6,[R4, #+6]
     76              ble.gap().startAdvertising();
   \   00000100   0x0028             MOVS     R0,R5
   \   00000102   0x.... 0x....      BL       _ZN3BLE3gapEv
   \   00000106   0x.... 0x....      BL       _ZN3Gap16startAdvertisingEv
     77              // mac addrss
     78              printMacAddress();
   \   0000010A   0x.... 0x....      BL       _Z15printMacAddressv
     79          }
   \                     ??bleInitComplete_0: (+1)
   \   0000010E   0xB010             ADD      SP,SP,#+64
   \   00000110   0xBD70             POP      {R4-R6,PC}       ;; return
     80          /******************************************************************************/
     81          
     82          
     83          

   \                                 In section .text, align 2, keep-with-next
     84          int main() {
   \                     main: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
     85              /*****************************************
     86              *           ble api example              *
     87              *****************************************/
     88              eventQueue.call_every(500, blinkCallback);
   \   00000004   0x....             LDR      R4,??DataTable12
   \   00000006   0x0027             MOVS     R7,R4
   \   00000008   0x37DC             ADDS     R7,R7,#+220
   \   0000000A   0x2104             MOVS     R1,#+4
   \   0000000C   0x0038             MOVS     R0,R7
   \   0000000E   0x.... 0x....      BL       equeue_alloc
   \   00000012   0x0005             MOVS     R5,R0
   \   00000014   0xD014             BEQ      ??main_0
   \   00000016   0x....             LDR      R0,??DataTable12_8
   \   00000018   0x6028             STR      R0,[R5, #+0]
   \   0000001A   0x26FA             MOVS     R6,#+250
   \   0000001C   0x0076             LSLS     R6,R6,#+1        ;; #+500
   \   0000001E   0x0031             MOVS     R1,R6
   \   00000020   0x0028             MOVS     R0,R5
   \   00000022   0x.... 0x....      BL       equeue_event_delay
   \   00000026   0x0031             MOVS     R1,R6
   \   00000028   0x0028             MOVS     R0,R5
   \   0000002A   0x.... 0x....      BL       equeue_event_period
   \   0000002E   0x....             LDR      R1,??DataTable12_9
   \   00000030   0x0028             MOVS     R0,R5
   \   00000032   0x.... 0x....      BL       equeue_event_dtor
   \   00000036   0x002A             MOVS     R2,R5
   \   00000038   0x....             LDR      R1,??DataTable12_10
   \   0000003A   0x0038             MOVS     R0,R7
   \   0000003C   0x.... 0x....      BL       equeue_post
     89              BLE &ble = BLE::Instance();
   \                     ??main_0: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      BL       _ZN3BLE8InstanceEj
   \   00000046   0x0005             MOVS     R5,R0
     90              ble.onEventsToProcess(scheduleBleEventsProcessing);
   \   00000048   0x....             LDR      R1,??DataTable12_11
   \   0000004A   0x4668             MOV      R0,SP
   \   0000004C   0x.... 0x....      BL       _ZN26FunctionPointerWithContextIPN3BLE32OnEventsToProcessCallbackContextEEC1EPFvS2_E
   \   00000050   0x0001             MOVS     R1,R0
   \   00000052   0x0028             MOVS     R0,R5
   \   00000054   0x.... 0x....      BL       _ZN3BLE17onEventsToProcessERK26FunctionPointerWithContextIPNS_32OnEventsToProcessCallbackContextEE
     91              ble.init(bleInitComplete);
   \   00000058   0x....             LDR      R1,??DataTable12_12
   \   0000005A   0x4668             MOV      R0,SP
   \   0000005C   0x.... 0x....      BL       _ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEEC1EPFvS2_E
   \   00000060   0x0001             MOVS     R1,R0
   \   00000062   0xA805             ADD      R0,SP,#+20
   \   00000064   0x.... 0x....      BL       _ZN26FunctionPointerWithContextIPN3BLE37InitializationCompleteCallbackContextEEC1ERKS3_
   \   00000068   0x0001             MOVS     R1,R0
   \   0000006A   0x0028             MOVS     R0,R5
   \   0000006C   0x.... 0x....      BL       _ZN3BLE18initImplementationE26FunctionPointerWithContextIPNS_37InitializationCompleteCallbackContextEE
     92              eventQueue.dispatch_forever();
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0x43C9             MVNS     R1,R1            ;; #-1
   \   00000074   0x0038             MOVS     R0,R7
   \   00000076   0x.... 0x....      BL       _ZN6events10EventQueue8dispatchEi
     93              /****************************************/
     94          
     95              /* board init */
     96              blue1.boardInit();
   \   0000007A   0x34B4             ADDS     R4,R4,#+180
   \   0000007C   0x0020             MOVS     R0,R4
   \   0000007E   0x.... 0x....      BL       _ZN5Blue19boardInitEv
     97          
     98              /* BlueNRG-1 stack init */
     99              blue1.stackInit();
   \   00000082   0x0020             MOVS     R0,R4
   \   00000084   0x.... 0x....      BL       _ZN5Blue19stackInitEv
    100          
    101              /* Device Init */
    102              blue1.sensorDeviceInit();
   \   00000088   0x0020             MOVS     R0,R4
   \   0000008A   0x.... 0x....      BL       _ZN5Blue116sensorDeviceInitEv
    103          
    104              while(1) {
    105                  /* BLE Stack Tick */
    106                  blue1.btleStackTick();
   \                     ??main_1: (+1)
   \   0000008E   0x0020             MOVS     R0,R4
   \   00000090   0x.... 0x....      BL       _ZN5Blue113btleStackTickEv
    107          
    108                  /* Application Tick */
    109                  blue1.appTick();
   \   00000094   0x0020             MOVS     R0,R4
   \   00000096   0x.... 0x....      BL       _ZN5Blue17appTickEv
    110          
    111                  /* Power Save management */
    112                  sleep();
    113              }
   \   0000009A   0xE7F8             B        ??main_1
    114          
    115          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     buttonServicePtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     buttonServicePtr+0x88

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     buttonServicePtr+0xDC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     _ZN6events10EventQueue13function_dtorIN4mbed8CallbackIFvvEEEEEvPv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     _ZN6events10EventQueue13function_callIN4mbed8CallbackIFvvEEEEEvPv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     _Z21disconnectionCallbackPKN3Gap29DisconnectionCallbackParams_tE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x000003E9         DC32     0x3e9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x00000271         DC32     0x271

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     _Z13blinkCallbackv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     _ZN6events10EventQueue13function_dtorIPFvvEEEvPv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     _ZN6events10EventQueue13function_callIPFvvEEEvPv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     _Z27scheduleBleEventsProcessingPN3BLE32OnEventsToProcessCallbackContextE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x........         DC32     _Z15bleInitCompletePN3BLE37InitializationCompleteCallbackContextE

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x44 0x45          DC8 "DEVICE MAC ADDRESS: "
   \              0x56 0x49    
   \              0x43 0x45    
   \              0x20 0x4D    
   \              0x41 0x43    
   \              0x20 0x41    
   \              0x44 0x44    
   \              0x52 0x45    
   \              0x53 0x53    
   \              0x3A 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x25 0x30          DC8 "%02x:"
   \              0x32 0x78    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x25 0x30          DC8 "%02x\015\012"
   \              0x32 0x78    
   \              0x0D 0x0A    
   \              0x00         
   \   00000007   0x00               DC8 0
    116          
    117          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      80   ButtonService::ButtonService(BLE &, bool)
        80   -- Indirect call
        80   -> BLE::gattServer()
        80   -> FunctionPointerWithContext<GattReadAuthCallbackParams *>::FunctionPointerWithContext(void (*)(GattReadAuthCallbackParams *))
        80   -> FunctionPointerWithContext<GattWriteAuthCallbackParams *>::FunctionPointerWithContext(void (*)(GattWriteAuthCallbackParams *))
        80   -> UUID::UUID(UUID const &)
        80   -> __aeabi_memclr
      16   ButtonService::updateButtonState(bool)
        16   -- Indirect call
        16   -> BLE::gattServer()
       4   FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::FunctionPointerWithContext(FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *> const &)
       4   FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::FunctionPointerWithContext(void (*)(BLE::InitializationCompleteCallbackContext *))
       8   FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::functioncaller(FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *> const *, BLE::InitializationCompleteCallbackContext *)
         8   -- Indirect call
       4   FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *>::FunctionPointerWithContext(void (*)(BLE::OnEventsToProcessCallbackContext *))
       8   FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *>::functioncaller(FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *> const *, BLE::OnEventsToProcessCallbackContext *)
         8   -- Indirect call
       4   FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::FunctionPointerWithContext(FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *> const &)
       4   FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::FunctionPointerWithContext(void (*)(Gap::DisconnectionCallbackParams_t const *))
       8   FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::functioncaller(FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *> const *, Gap::DisconnectionCallbackParams_t const *)
         8   -- Indirect call
       4   FunctionPointerWithContext<GattReadAuthCallbackParams *>::FunctionPointerWithContext(void (*)(GattReadAuthCallbackParams *))
       8   FunctionPointerWithContext<GattReadAuthCallbackParams *>::functioncaller(FunctionPointerWithContext<GattReadAuthCallbackParams *> const *, GattReadAuthCallbackParams *)
         8   -- Indirect call
       4   FunctionPointerWithContext<GattWriteAuthCallbackParams *>::FunctionPointerWithContext(void (*)(GattWriteAuthCallbackParams *))
       8   FunctionPointerWithContext<GattWriteAuthCallbackParams *>::functioncaller(FunctionPointerWithContext<GattWriteAuthCallbackParams *> const *, GattWriteAuthCallbackParams *)
         8   -- Indirect call
      56   Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType, std::uint8_t const *, std::uint8_t)
        56   -- Indirect call
        56   -> GapAdvertisingData::addData(GapAdvertisingData::DataType_t, std::uint8_t const *, std::uint8_t)
        56   -> __aeabi_memcpy
       8   Gap::startAdvertising()
         8   -- Indirect call
      24   GapAdvertisingData::addData(GapAdvertisingData::DataType_t, std::uint8_t const *, std::uint8_t)
        24   -> GapAdvertisingData::addField(GapAdvertisingData::DataType_t, std::uint8_t const *, std::uint8_t, std::uint8_t *)
        24   -> GapAdvertisingData::appendField(GapAdvertisingData::DataType, std::uint8_t const *, std::uint8_t)
      32   GapAdvertisingData::addField(GapAdvertisingData::DataType_t, std::uint8_t const *, std::uint8_t, std::uint8_t *)
        32   -> GapAdvertisingData::appendField(GapAdvertisingData::DataType, std::uint8_t const *, std::uint8_t)
      24   GapAdvertisingData::appendField(GapAdvertisingData::DataType, std::uint8_t const *, std::uint8_t)
        24   -> __aeabi_memcpy
        24   -> __aeabi_memset
       8   UUID::UUID(UUID const &)
         8   -> __aeabi_memcpy
      24   __sti__routine()
        24   -> Blue1::Blue1(mbed::Serial *, mbed::DigitalOut *, mbed::DigitalOut *, mbed::DigitalOut *, mbed::SPI *)
        24   -> events::EventQueue::EventQueue(unsigned int, unsigned char *)
        24   -> gpio_init_in
        24   -> gpio_init_out
        24   -> mbed::SPI::SPI(PinName, PinName, PinName, PinName)
        24   -> mbed::Serial::Serial(PinName, PinName, char const *, int)
      80   bleInitComplete(BLE::InitializationCompleteCallbackContext *)
        80   -- Indirect call
        80   -> BLE::gap()
        80   -> ButtonService::ButtonService(BLE &, bool)
        80   -> FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::FunctionPointerWithContext(FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *> const &)
        80   -> FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::FunctionPointerWithContext(void (*)(Gap::DisconnectionCallbackParams_t const *))
        80   -> Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType, std::uint8_t const *, std::uint8_t)
        80   -> Gap::startAdvertising()
        80   -> GapAdvertisingData::addData(GapAdvertisingData::DataType_t, std::uint8_t const *, std::uint8_t)
        80   -> __aeabi_memcpy
        80   -> operator new(std::size_t)
        80   -> printMacAddress()
        80 __aeabi_uidiv
       8   blinkCallback()
         8   -> gpio_read
         8   -> gpio_write
      24   buttonPressedCallback()
        24   -- Indirect call
        24   -> events::EventQueue::call<>(mbed::Callback<void (bool)>, bool)
        24   -> mbed::Callback<void (bool)>::Callback<>(ButtonService *, void (ButtonService::*)(bool))
      24   buttonReleasedCallback()
        24   -- Indirect call
        24   -> events::EventQueue::call<>(mbed::Callback<void (bool)>, bool)
        24   -> mbed::Callback<void (bool)>::Callback<>(ButtonService *, void (ButtonService::*)(bool))
       8   disconnectionCallback(Gap::DisconnectionCallbackParams_t const *)
         8   -> BLE::Instance(unsigned int)
         8   -> BLE::gap()
         8   -> Gap::startAdvertising()
      56   events::EventQueue::call<>(mbed::Callback<void (bool)>, bool)
        56   -> equeue_alloc
        56   -> equeue_event_dtor
        56   -> equeue_post
        56   -> mbed::Callback<void (bool)>::Callback(mbed::Callback<void (bool)> const &)
        56   -> mbed::Callback<void (bool)>::~Callback()
      16   events::EventQueue::function_call<events::EventQueue::context10<mbed::Callback<void (bool)>, bool>>(void *)
        16   -- Indirect call
        16   -> mbed_assert_internal
       8   events::EventQueue::function_call<mbed::Callback<void ()>>(void *)
         8   -- Indirect call
         8   -> mbed_assert_internal
       8   events::EventQueue::function_call<void (*)()>(void *)
         8   -- Indirect call
       8   events::EventQueue::function_dtor<events::EventQueue::context10<mbed::Callback<void (bool)>, bool>>(void *)
         8   -- Indirect call
       8   events::EventQueue::function_dtor<mbed::Callback<void ()>>(void *)
         8   -- Indirect call
       0   events::EventQueue::function_dtor<void (*)()>(void *)
      64   main()
        64   -> BLE::Instance(unsigned int)
        64   -> BLE::initImplementation(FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>)
        64   -> BLE::onEventsToProcess(BLE::OnEventsToProcessCallback_t const &)
        64   -> Blue1::appTick()
        64   -> Blue1::boardInit()
        64   -> Blue1::btleStackTick()
        64   -> Blue1::sensorDeviceInit()
        64   -> Blue1::stackInit()
        64   -> FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::FunctionPointerWithContext(FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *> const &)
        64   -> FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::FunctionPointerWithContext(void (*)(BLE::InitializationCompleteCallbackContext *))
        64   -> FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *>::FunctionPointerWithContext(void (*)(BLE::OnEventsToProcessCallbackContext *))
        64   -> equeue_alloc
        64   -> equeue_event_delay
        64   -> equeue_event_dtor
        64   -> equeue_event_period
        64   -> equeue_post
        64   -> events::EventQueue::dispatch(int)
      16   mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const &)
        16   -- Indirect call
      24   mbed::Callback<void ()>::Callback<>(BLE *, void (BLE::*)())
        24   -> mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>::method_context(BLE *, void (BLE::*)())
      12   mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
         8   -- Indirect call
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>>(void const *)
         8   -- Indirect call
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>>(void *)
       0   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
       4   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>>(void *, void const *)
       0   mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>::method_context(BLE *, void (BLE::*)())
      16   mbed::Callback<void (bool)>::Callback(mbed::Callback<void (bool)> const &)
        16   -- Indirect call
      24   mbed::Callback<void (bool)>::Callback<>(ButtonService *, void (ButtonService::*)(bool))
        24   -> mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>::method_context(ButtonService *, void (ButtonService::*)(bool))
       8   mbed::Callback<void (bool)>::function_call<mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>>(void const *, bool)
         8   -- Indirect call
       0   mbed::Callback<void (bool)>::function_dtor<mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>>(void *)
       4   mbed::Callback<void (bool)>::function_move<mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>>(void *, void const *)
       0   mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>::method_context(ButtonService *, void (ButtonService::*)(bool))
       8   mbed::Callback<void (bool)>::~Callback()
         8   -- Indirect call
       8   mbed::callback<>(void (*)(void *), void *)
         8   -> mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
       0   onBleInitError(BLE &, ble_error_t)
      24   printMacAddress()
        24   -- Indirect call
        24   -> BLE::Instance(unsigned int)
        24   -> BLE::gap()
        24   -> std::printf
      32   scheduleBleEventsProcessing(BLE::OnEventsToProcessCallbackContext *)
        32   -- Indirect call
        32   -> BLE::Instance(unsigned int)
        32   -> equeue_alloc
        32   -> equeue_event_dtor
        32   -> equeue_post
        32   -> mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const &)
        32   -> mbed::Callback<void ()>::Callback<>(BLE *, void (BLE::*)())


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
      24  ?Subroutine0
      24  ?_0
       8  ?_1
       8  ?_2
     152  ButtonService::ButtonService(BLE &, bool)
      28  ButtonService::updateButtonState(bool)
       8  DEVICE_NAME
      22  FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::FunctionPointerWithContext(FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *> const &)
      32  FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::FunctionPointerWithContext(void (*)(BLE::InitializationCompleteCallbackContext *))
      16  FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *>::functioncaller(FunctionPointerWithContext<BLE::InitializationCompleteCallbackContext *> const *, BLE::InitializationCompleteCallbackContext *)
      32  FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *>::FunctionPointerWithContext(void (*)(BLE::OnEventsToProcessCallbackContext *))
      16  FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *>::functioncaller(FunctionPointerWithContext<BLE::OnEventsToProcessCallbackContext *> const *, BLE::OnEventsToProcessCallbackContext *)
      22  FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::FunctionPointerWithContext(FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *> const &)
      32  FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::FunctionPointerWithContext(void (*)(Gap::DisconnectionCallbackParams_t const *))
      16  FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *>::functioncaller(FunctionPointerWithContext<Gap::DisconnectionCallbackParams_t const *> const *, Gap::DisconnectionCallbackParams_t const *)
      32  FunctionPointerWithContext<GattReadAuthCallbackParams *>::FunctionPointerWithContext(void (*)(GattReadAuthCallbackParams *))
      16  FunctionPointerWithContext<GattReadAuthCallbackParams *>::functioncaller(FunctionPointerWithContext<GattReadAuthCallbackParams *> const *, GattReadAuthCallbackParams *)
      32  FunctionPointerWithContext<GattWriteAuthCallbackParams *>::FunctionPointerWithContext(void (*)(GattWriteAuthCallbackParams *))
      16  FunctionPointerWithContext<GattWriteAuthCallbackParams *>::functioncaller(FunctionPointerWithContext<GattWriteAuthCallbackParams *> const *, GattWriteAuthCallbackParams *)
      76  Gap::accumulateAdvertisingPayload(GapAdvertisingData::DataType, std::uint8_t const *, std::uint8_t)
      26  Gap::startAdvertising()
      48  GapAdvertisingData::addData(GapAdvertisingData::DataType_t, std::uint8_t const *, std::uint8_t)
     198  GapAdvertisingData::addField(GapAdvertisingData::DataType_t, std::uint8_t const *, std::uint8_t, std::uint8_t *)
      80  GapAdvertisingData::appendField(GapAdvertisingData::DataType, std::uint8_t const *, std::uint8_t)
      26  UUID::UUID(UUID const &)
     154  __sti__routine()
     274  bleInitComplete(BLE::InitializationCompleteCallbackContext *)
      24  blinkCallback()
      26  buttonPressedCallback()
      24  buttonReleasedCallback()
     316  buttonServicePtr
          serialport
          led1
          led2
          led3
          spi
          blue1
          button
          eventQueue
      18  disconnectionCallback(Gap::DisconnectionCallbackParams_t const *)
     100  events::EventQueue::call<>(mbed::Callback<void (bool)>, bool)
      48  events::EventQueue::function_call<events::EventQueue::context10<mbed::Callback<void (bool)>, bool>>(void *)
      40  events::EventQueue::function_call<mbed::Callback<void ()>>(void *)
       8  events::EventQueue::function_call<void (*)()>(void *)
      16  events::EventQueue::function_dtor<events::EventQueue::context10<mbed::Callback<void (bool)>, bool>>(void *)
      16  events::EventQueue::function_dtor<mbed::Callback<void ()>>(void *)
       2  events::EventQueue::function_dtor<void (*)()>(void *)
     156  main()
      24  mbed::Callback<void ()>::Callback(mbed::Callback<void ()> const &)
      48  mbed::Callback<void ()>::Callback<>(BLE *, void (BLE::*)())
      32  mbed::Callback<void ()>::Callback<>(void (*)(void *), void *)
      12  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
      30  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>>(void const *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>>(void *)
      10  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      16  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>>(void *, void const *)
       8  mbed::Callback<void ()>::method_context<BLE, void (BLE::*)()>::method_context(BLE *, void (BLE::*)())
      24  mbed::Callback<void (bool)>::Callback(mbed::Callback<void (bool)> const &)
      48  mbed::Callback<void (bool)>::Callback<>(ButtonService *, void (ButtonService::*)(bool))
      30  mbed::Callback<void (bool)>::function_call<mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>>(void const *, bool)
       2  mbed::Callback<void (bool)>::function_dtor<mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>>(void *)
      16  mbed::Callback<void (bool)>::function_move<mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>>(void *, void const *)
       8  mbed::Callback<void (bool)>::method_context<ButtonService, void (ButtonService::*)(bool)>::method_context(ButtonService *, void (ButtonService::*)(bool))
      18  mbed::Callback<void (bool)>::~Callback()
       8  mbed::callback<>(void (*)(void *), void *)
       2  onBleInitError(BLE &, ble_error_t)
      12  ops
      12  ops
      12  ops
      90  printMacAddress()
      78  scheduleBleEventsProcessing(BLE::OnEventsToProcessCallbackContext *)
       2  uuid16_list
    1432  -- Other

 
   316 bytes in section .bss
     4 bytes in section .init_array
 1 448 bytes in section .rodata
 2 474 bytes in section .text
 
 992 bytes of CODE  memory (+ 1 486 bytes shared)
   0 bytes of CONST memory (+ 1 448 bytes shared)
 316 bytes of DATA  memory

Errors: none
Warnings: none
