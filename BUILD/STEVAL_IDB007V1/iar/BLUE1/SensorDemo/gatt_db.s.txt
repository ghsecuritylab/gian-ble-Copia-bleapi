###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Mar/2018  13:32:52
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  .\BLUE1\SensorDemo\gatt_db.c
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --vla -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DMBED_BUILD_TIMESTAMP=1521462769.94 -DTARGET_CORTEX_M -DDEVICE_SPI=1
#        -DTARGET_LIKE_MBED -DARM_MATH_CM0 -DTARGET_RELEASE -D__CORTEX_M0
#        -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0 -DTOOLCHAIN_object
#        -DDEVICE_SERIAL=1 -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -DFEATURE_BLE=1 -f
#        .\BUILD\STEVAL_IDB007V1\IAR\.includes_dcedd7aa577106f9c79229685e6ddb41.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/FEATURE_BLE -I./mbed-os/features/FEATURE_BLE/ble
#        -I./mbed-os/features/FEATURE_BLE/ble/generic
#        -I./mbed-os/features/FEATURE_BLE/ble/pal
#        -I./mbed-os/features/FEATURE_BLE/ble/services
#        -I./mbed-os/features/FEATURE_BLE/source
#        -I./mbed-os/features/FEATURE_BLE/source/generic
#        -I./mbed-os/features/FEATURE_BLE/source/services
#        -I./mbed-os/features/FEATURE_BLE/targets
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN -I./mbed-os/features/mbedtls
#        -I./mbed-os/features/mbedtls/importer -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\IAR\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\IAR\BLUE1\SensorDemo\gatt_db.d -l
#        .\BUILD\STEVAL_IDB007V1\IAR\BLUE1\SensorDemo\gatt_db.s.txt -o
#        .\BUILD\STEVAL_IDB007V1\IAR\BLUE1\SensorDemo\gatt_db.o
#        .\BLUE1\SensorDemo\gatt_db.c
#    Locale       =  Italian_Italy.1252
#    List file    =  .\BUILD\STEVAL_IDB007V1\IAR\BLUE1\SensorDemo\gatt_db.s.txt
#    Object file  =  .\BUILD\STEVAL_IDB007V1\IAR\BLUE1\SensorDemo\gatt_db.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\BLUE1\SensorDemo\gatt_db.c
      1          /******************** (C) COPYRIGHT 2015 STMicroelectronics ********************
      2          * File Name          : gatt_db.c
      3          * Author             : BlueNRG-1 main file for Chat demo
      4          * Version            : V1.0.0
      5          * Date               : 16-September-2015
      6          * Description        : Functions to build GATT DB and handle GATT events.
      7          ********************************************************************************
      8          * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
      9          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     10          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     11          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     12          * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     13          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     14          *******************************************************************************/
     15          
     16          #include <stdio.h>
     17          #include <string.h>
     18          #include <stdlib.h>
     19          #include "BlueNRG1_it.h"
     20          #include "BlueNRG1_conf.h"

  typedef uint8_t BOOL;  //already defined in "hal_type.h"
                  ^
"C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\targets\TARGET_STMBLUE\TARGET_BLUENRG1\TARGET_STEVAL_IDB007V1\device\system_BlueNRG1.h",240  Warning[Pe301]: typedef name has already been declared (with same type)
     21          #include "ble_const.h"
     22          #include "bluenrg1_stack.h"
     23          #include "clock.h"
     24          #include "gp_timer.h"
     25          #include "gatt_db.h"
     26          #include "osal.h"
     27          //#include "SDK_EVAL_Config.h"  //eliminato
     28          
     29          //#include "LPS25HB.h"  //eliminato
     30          //#include "lsm6ds3.h"  //eliminato
     31          
     32          //#define SENSOR_EMULATION
     33          
     34          #ifndef DEBUG
     35          #define DEBUG 0
     36          #endif
     37          
     38          #if DEBUG
     39          #include <stdio.h>
     40          #define PRINTF(...) printf(__VA_ARGS__)
     41          #else
     42          #define PRINTF(...)
     43          #endif
     44          
     45          
     46          #define COPY_UUID_128(uuid_struct, uuid_15, uuid_14, uuid_13, uuid_12, uuid_11, uuid_10, uuid_9, uuid_8, uuid_7, uuid_6, uuid_5, uuid_4, uuid_3, uuid_2, uuid_1, uuid_0) \
     47          do {\
     48              uuid_struct[0] = uuid_0; uuid_struct[1] = uuid_1; uuid_struct[2] = uuid_2; uuid_struct[3] = uuid_3; \
     49                  uuid_struct[4] = uuid_4; uuid_struct[5] = uuid_5; uuid_struct[6] = uuid_6; uuid_struct[7] = uuid_7; \
     50                      uuid_struct[8] = uuid_8; uuid_struct[9] = uuid_9; uuid_struct[10] = uuid_10; uuid_struct[11] = uuid_11; \
     51                          uuid_struct[12] = uuid_12; uuid_struct[13] = uuid_13; uuid_struct[14] = uuid_14; uuid_struct[15] = uuid_15; \
     52          }while(0)
     53          
     54          
     55          #define COPY_ACC_SERVICE_UUID(uuid_struct)  COPY_UUID_128(uuid_struct,0x02,0x36,0x6e,0x80, 0xcf,0x3a, 0x11,0xe1, 0x9a,0xb4, 0x00,0x02,0xa5,0xd5,0xc5,0x1b)
     56          #define COPY_FREE_FALL_UUID(uuid_struct)    COPY_UUID_128(uuid_struct,0xe2,0x3e,0x78,0xa0, 0xcf,0x4a, 0x11,0xe1, 0x8f,0xfc, 0x00,0x02,0xa5,0xd5,0xc5,0x1b)
     57          #define COPY_ACC_UUID(uuid_struct)          COPY_UUID_128(uuid_struct,0x34,0x0a,0x1b,0x80, 0xcf,0x4b, 0x11,0xe1, 0xac,0x36, 0x00,0x02,0xa5,0xd5,0xc5,0x1b)
     58          
     59          #define COPY_ENV_SENS_SERVICE_UUID(uuid_struct)  COPY_UUID_128(uuid_struct,0x42,0x82,0x1a,0x40, 0xe4,0x77, 0x11,0xe2, 0x82,0xd0, 0x00,0x02,0xa5,0xd5,0xc5,0x1b)
     60          #define COPY_TEMP_CHAR_UUID(uuid_struct)         COPY_UUID_128(uuid_struct,0xa3,0x2e,0x55,0x20, 0xe4,0x77, 0x11,0xe2, 0xa9,0xe3, 0x00,0x02,0xa5,0xd5,0xc5,0x1b)
     61          #define COPY_PRESS_CHAR_UUID(uuid_struct)        COPY_UUID_128(uuid_struct,0xcd,0x20,0xc4,0x80, 0xe4,0x8b, 0x11,0xe2, 0x84,0x0b, 0x00,0x02,0xa5,0xd5,0xc5,0x1b)
     62          
     63          #ifdef SENSOR_EMULATION //Humidity sensor is not available on BlueNRG-1 Development board: only on emulated version humidity is used
     64          #define COPY_HUMIDITY_CHAR_UUID(uuid_struct)     COPY_UUID_128(uuid_struct,0x01,0xc5,0x0b,0x60, 0xe4,0x8c, 0x11,0xe2, 0xa0,0x73, 0x00,0x02,0xa5,0xd5,0xc5,0x1b)
     65          #endif
     66          

   \                                 In section .bss, align 4
     67          uint16_t accServHandle, freeFallCharHandle, accCharHandle;
   \                     accServHandle:
   \   00000000                      DS8 2
   \                     freeFallCharHandle:
   \   00000002                      DS8 2
   \                     accCharHandle:
   \   00000004                      DS8 2
     68          uint16_t envSensServHandle, tempCharHandle, pressCharHandle, humidityCharHandle;
   \                     envSensServHandle:
   \   00000006                      DS8 2
   \                     tempCharHandle:
   \   00000008                      DS8 2
   \                     pressCharHandle:
   \   0000000A                      DS8 2
     69          
     70          /* UUIDS */
     71          Service_UUID_t service_uuid;
   \                     service_uuid:
   \   0000000C                      DS8 16
     72          Char_UUID_t char_uuid;
   \                     char_uuid:
   \   0000001C                      DS8 16
     73          Char_Desc_Uuid_t char_desc_uuid;
   \                     char_desc_uuid:
   \   0000002C                      DS8 16

   \                                 In section .bss, align 2
   \                     humidityCharHandle:
   \   00000000                      DS8 2
     74          
     75          extern uint16_t connection_handle;
     76          extern BOOL sensor_board;
     77          #ifndef SENSOR_EMULATION
     78          //extern PRESSURE_DrvTypeDef* xLPS25HBDrv;
     79          //extern IMU_6AXES_DrvTypeDef *Imu6AxesDrv;
     80          //extern LSM6DS3_DrvExtTypeDef *Imu6AxesDrvExt;
     81          #endif
     82          

   \                                 In section .text, align 2, keep-with-next
     83          IMU_6AXES_StatusTypeDef GetAccAxesRaw(AxesRaw_t * acceleration_data)
     84          {
     85              IMU_6AXES_StatusTypeDef status = IMU_6AXES_OK;
     86          
     87          /*#ifdef SENSOR_EMULATION
     88              acceleration_data->AXIS_X = ((uint64_t)rand()) % X_OFFSET;
     89              acceleration_data->AXIS_Y = ((uint64_t)rand()) % Y_OFFSET;
     90              acceleration_data->AXIS_Z = ((uint64_t)rand()) % Z_OFFSET;
     91          #else
     92              //status = Imu6AxesDrv->Get_X_Axes((int32_t *)acceleration_data);
     93          #endif*/
     94              return status;
   \                     GetAccAxesRaw: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
     95          }
     96          

   \                                 In section .text, align 2, keep-with-next
     97          void GetFreeFallStatus(void)
     98          {
     99          #ifdef aaa
    100          #ifndef SENSOR_EMULATION
    101              uint8_t free_fall_status;
    102          
    103              /* Set the IRQ flag */
    104              Imu6AxesDrvExt->Get_Status_Free_Fall_Detection(&free_fall_status);
    105              if (free_fall_status == 1)
    106              {
    107                  request_free_fall_notify = TRUE;
    108              }
    109          #endif
    110          #endif //aaa
    111          }
   \                     GetFreeFallStatus: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    112          
    113          /*******************************************************************************
    114          * Function Name  : Add_Chat_Service
    115          * Description    : Add the 'Accelerometer' service.
    116          * Input          : None
    117          * Return         : Status.
    118          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    119          tBleStatus Add_Acc_Service(void)
    120          {
   \                     Add_Acc_Service: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
    121              tBleStatus ret;
    122              uint8_t uuid[16];
    123          
    124              COPY_ACC_SERVICE_UUID(uuid);
   \   00000004   0x271B             MOVS     R7,#+27
   \   00000006   0xAC06             ADD      R4,SP,#+24
   \   00000008   0x7027             STRB     R7,[R4, #+0]
   \   0000000A   0x20C5             MOVS     R0,#+197
   \   0000000C   0x7060             STRB     R0,[R4, #+1]
   \   0000000E   0x20D5             MOVS     R0,#+213
   \   00000010   0x70A0             STRB     R0,[R4, #+2]
   \   00000012   0x20A5             MOVS     R0,#+165
   \   00000014   0x70E0             STRB     R0,[R4, #+3]
   \   00000016   0x2602             MOVS     R6,#+2
   \   00000018   0x7126             STRB     R6,[R4, #+4]
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x7160             STRB     R0,[R4, #+5]
   \   0000001E   0x20B4             MOVS     R0,#+180
   \   00000020   0x71A0             STRB     R0,[R4, #+6]
   \   00000022   0x209A             MOVS     R0,#+154
   \   00000024   0x71E0             STRB     R0,[R4, #+7]
   \   00000026   0x20E1             MOVS     R0,#+225
   \   00000028   0x7220             STRB     R0,[R4, #+8]
   \   0000002A   0x2011             MOVS     R0,#+17
   \   0000002C   0x7260             STRB     R0,[R4, #+9]
   \   0000002E   0x203A             MOVS     R0,#+58
   \   00000030   0x72A0             STRB     R0,[R4, #+10]
   \   00000032   0x20CF             MOVS     R0,#+207
   \   00000034   0x72E0             STRB     R0,[R4, #+11]
   \   00000036   0x2080             MOVS     R0,#+128
   \   00000038   0x7320             STRB     R0,[R4, #+12]
   \   0000003A   0x206E             MOVS     R0,#+110
   \   0000003C   0x7360             STRB     R0,[R4, #+13]
   \   0000003E   0x2036             MOVS     R0,#+54
   \   00000040   0x73A0             STRB     R0,[R4, #+14]
   \   00000042   0x73E6             STRB     R6,[R4, #+15]
    125          
    126              Osal_MemCpy(&service_uuid.Service_UUID_128, uuid, 16);
   \   00000044   0x....             LDR      R5,??DataTable2
   \   00000046   0x2210             MOVS     R2,#+16
   \   00000048   0xA906             ADD      R1,SP,#+24
   \   0000004A   0x0028             MOVS     R0,R5
   \   0000004C   0x300C             ADDS     R0,R0,#+12
   \   0000004E   0x.... 0x....      BL       Osal_MemCpy
    127              ret = aci_gatt_add_service(UUID_TYPE_128,  &service_uuid, PRIMARY_SERVICE, Services_Max_Attribute_Records[ACCELERATION_SERVICE_INDEX], &accServHandle);
    128              if (ret != BLE_STATUS_SUCCESS) goto fail;
   \   00000052   0x9500             STR      R5,[SP, #+0]
   \   00000054   0x....             LDR      R0,??DataTable4
   \   00000056   0x7803             LDRB     R3,[R0, #+0]
   \   00000058   0x2201             MOVS     R2,#+1
   \   0000005A   0x0029             MOVS     R1,R5
   \   0000005C   0x310C             ADDS     R1,R1,#+12
   \   0000005E   0x2002             MOVS     R0,#+2
   \   00000060   0x.... 0x....      BL       aci_gatt_add_service
   \   00000064   0x2800             CMP      R0,#+0
   \   00000066   0xD16F             BNE      ??Add_Acc_Service_0
    129          
    130              COPY_FREE_FALL_UUID(uuid);
   \   00000068   0x7027             STRB     R7,[R4, #+0]
   \   0000006A   0x20C5             MOVS     R0,#+197
   \   0000006C   0x7060             STRB     R0,[R4, #+1]
   \   0000006E   0x20D5             MOVS     R0,#+213
   \   00000070   0x70A0             STRB     R0,[R4, #+2]
   \   00000072   0x20A5             MOVS     R0,#+165
   \   00000074   0x70E0             STRB     R0,[R4, #+3]
   \   00000076   0x7126             STRB     R6,[R4, #+4]
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x7160             STRB     R0,[R4, #+5]
   \   0000007C   0x20FC             MOVS     R0,#+252
   \   0000007E   0x71A0             STRB     R0,[R4, #+6]
   \   00000080   0x208F             MOVS     R0,#+143
   \   00000082   0x71E0             STRB     R0,[R4, #+7]
   \   00000084   0x20E1             MOVS     R0,#+225
   \   00000086   0x7220             STRB     R0,[R4, #+8]
   \   00000088   0x2011             MOVS     R0,#+17
   \   0000008A   0x7260             STRB     R0,[R4, #+9]
   \   0000008C   0x204A             MOVS     R0,#+74
   \   0000008E   0x72A0             STRB     R0,[R4, #+10]
   \   00000090   0x20CF             MOVS     R0,#+207
   \   00000092   0x72E0             STRB     R0,[R4, #+11]
   \   00000094   0x20A0             MOVS     R0,#+160
   \   00000096   0x7320             STRB     R0,[R4, #+12]
   \   00000098   0x2078             MOVS     R0,#+120
   \   0000009A   0x7360             STRB     R0,[R4, #+13]
   \   0000009C   0x203E             MOVS     R0,#+62
   \   0000009E   0x73A0             STRB     R0,[R4, #+14]
   \   000000A0   0x20E2             MOVS     R0,#+226
   \   000000A2   0x73E0             STRB     R0,[R4, #+15]
    131              Osal_MemCpy(&char_uuid.Char_UUID_128, uuid, 16);
   \   000000A4   0x2210             MOVS     R2,#+16
   \   000000A6   0xA906             ADD      R1,SP,#+24
   \   000000A8   0x0028             MOVS     R0,R5
   \   000000AA   0x301C             ADDS     R0,R0,#+28
   \   000000AC   0x.... 0x....      BL       Osal_MemCpy
    132          
    133              ret =  aci_gatt_add_char(accServHandle, UUID_TYPE_128, &char_uuid, 1, CHAR_PROP_NOTIFY, ATTR_PERMISSION_NONE, 0,
    134                                       16, 0, &freeFallCharHandle);
    135              if (ret != BLE_STATUS_SUCCESS) goto fail;
   \   000000B0   0x1CA8             ADDS     R0,R5,#+2
   \   000000B2   0x9005             STR      R0,[SP, #+20]
   \   000000B4   0x2000             MOVS     R0,#+0
   \   000000B6   0x9004             STR      R0,[SP, #+16]
   \   000000B8   0x2010             MOVS     R0,#+16
   \   000000BA   0x9003             STR      R0,[SP, #+12]
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x9002             STR      R0,[SP, #+8]
   \   000000C0   0x9001             STR      R0,[SP, #+4]
   \   000000C2   0x2010             MOVS     R0,#+16
   \   000000C4   0x9000             STR      R0,[SP, #+0]
   \   000000C6   0x2301             MOVS     R3,#+1
   \   000000C8   0x002A             MOVS     R2,R5
   \   000000CA   0x321C             ADDS     R2,R2,#+28
   \   000000CC   0x2102             MOVS     R1,#+2
   \   000000CE   0x8828             LDRH     R0,[R5, #+0]
   \   000000D0   0x.... 0x....      BL       aci_gatt_add_char
   \   000000D4   0x2800             CMP      R0,#+0
   \   000000D6   0xD137             BNE      ??Add_Acc_Service_0
    136          
    137              COPY_ACC_UUID(uuid);
   \   000000D8   0x7027             STRB     R7,[R4, #+0]
   \   000000DA   0x20C5             MOVS     R0,#+197
   \   000000DC   0x7060             STRB     R0,[R4, #+1]
   \   000000DE   0x20D5             MOVS     R0,#+213
   \   000000E0   0x70A0             STRB     R0,[R4, #+2]
   \   000000E2   0x20A5             MOVS     R0,#+165
   \   000000E4   0x70E0             STRB     R0,[R4, #+3]
   \   000000E6   0x7126             STRB     R6,[R4, #+4]
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x7160             STRB     R0,[R4, #+5]
   \   000000EC   0x2036             MOVS     R0,#+54
   \   000000EE   0x71A0             STRB     R0,[R4, #+6]
   \   000000F0   0x20AC             MOVS     R0,#+172
   \   000000F2   0x71E0             STRB     R0,[R4, #+7]
   \   000000F4   0x20E1             MOVS     R0,#+225
   \   000000F6   0x7220             STRB     R0,[R4, #+8]
   \   000000F8   0x2011             MOVS     R0,#+17
   \   000000FA   0x7260             STRB     R0,[R4, #+9]
   \   000000FC   0x204B             MOVS     R0,#+75
   \   000000FE   0x72A0             STRB     R0,[R4, #+10]
   \   00000100   0x20CF             MOVS     R0,#+207
   \   00000102   0x72E0             STRB     R0,[R4, #+11]
   \   00000104   0x2080             MOVS     R0,#+128
   \   00000106   0x7320             STRB     R0,[R4, #+12]
   \   00000108   0x7367             STRB     R7,[R4, #+13]
   \   0000010A   0x200A             MOVS     R0,#+10
   \   0000010C   0x73A0             STRB     R0,[R4, #+14]
   \   0000010E   0x2034             MOVS     R0,#+52
   \   00000110   0x73E0             STRB     R0,[R4, #+15]
    138              Osal_MemCpy(&char_uuid.Char_UUID_128, uuid, 16);
   \   00000112   0x2210             MOVS     R2,#+16
   \   00000114   0xA906             ADD      R1,SP,#+24
   \   00000116   0x0028             MOVS     R0,R5
   \   00000118   0x301C             ADDS     R0,R0,#+28
   \   0000011A   0x.... 0x....      BL       Osal_MemCpy
    139              ret =  aci_gatt_add_char(accServHandle, UUID_TYPE_128, &char_uuid, 6, CHAR_PROP_NOTIFY|CHAR_PROP_READ, ATTR_PERMISSION_NONE, GATT_NOTIFY_READ_REQ_AND_WAIT_FOR_APPL_RESP,
    140                                       16, 0, &accCharHandle);
    141              if (ret != BLE_STATUS_SUCCESS) goto fail;
   \   0000011E   0x1D28             ADDS     R0,R5,#+4
   \   00000120   0x9005             STR      R0,[SP, #+20]
   \   00000122   0x2000             MOVS     R0,#+0
   \   00000124   0x9004             STR      R0,[SP, #+16]
   \   00000126   0x2010             MOVS     R0,#+16
   \   00000128   0x9003             STR      R0,[SP, #+12]
   \   0000012A   0x2004             MOVS     R0,#+4
   \   0000012C   0x9002             STR      R0,[SP, #+8]
   \   0000012E   0x2000             MOVS     R0,#+0
   \   00000130   0x9001             STR      R0,[SP, #+4]
   \   00000132   0x2012             MOVS     R0,#+18
   \   00000134   0x9000             STR      R0,[SP, #+0]
   \   00000136   0x2306             MOVS     R3,#+6
   \   00000138   0x002A             MOVS     R2,R5
   \   0000013A   0x321C             ADDS     R2,R2,#+28
   \   0000013C   0x2102             MOVS     R1,#+2
   \   0000013E   0x8828             LDRH     R0,[R5, #+0]
   \   00000140   0x.... 0x....      BL       aci_gatt_add_char
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xD000             BEQ      ??Add_Acc_Service_1
    142          
    143              PRINTF("Service ACC added. Handle 0x%04X, Free fall Charac handle: 0x%04X, Acc Charac handle: 0x%04X\n",accServHandle, freeFallCharHandle, accCharHandle);
    144              return BLE_STATUS_SUCCESS;
    145          
    146          fail:
    147              PRINTF("Error while adding ACC service.\n");
    148              return BLE_STATUS_ERROR ;
   \                     ??Add_Acc_Service_0: (+1)
   \   00000148   0x2047             MOVS     R0,#+71
   \                     ??Add_Acc_Service_1: (+1)
   \   0000014A   0xB00B             ADD      SP,SP,#+44
   \   0000014C   0xBDF0             POP      {R4-R7,PC}       ;; return
    149          
    150          }
    151          
    152          /*******************************************************************************
    153          * Function Name  : Free_Fall_Notify
    154          * Description    : Send a notification for a Free Fall detection.
    155          * Input          : None
    156          * Return         : Status.
    157          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    158          tBleStatus Free_Fall_Notify(void)
    159          {
   \                     Free_Fall_Notify: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    160              uint8_t val;
    161              tBleStatus ret;
    162          
    163              val = 0x01;
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x4669             MOV      R1,SP
   \   00000008   0x7108             STRB     R0,[R1, #+4]
    164              ret = aci_gatt_update_char_value(accServHandle, freeFallCharHandle, 0, 1, &val);
    165              if (ret != BLE_STATUS_SUCCESS){
   \   0000000A   0x....             LDR      R0,??DataTable7
   \   0000000C   0xA901             ADD      R1,SP,#+4
   \   0000000E   0x9100             STR      R1,[SP, #+0]
   \   00000010   0x2301             MOVS     R3,#+1
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x8841             LDRH     R1,[R0, #+2]
   \   00000016   0x....             B.N      ?Subroutine0
    166                  PRINTF("Error while updating Free Fall characteristic: 0x%02X\n",ret) ;
    167                  return BLE_STATUS_ERROR ;
    168              }
    169              return BLE_STATUS_SUCCESS;
    170          
    171          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x8800             LDRH     R0,[R0, #+0]
   \                     ??Subroutine0_0: (+1)
   \   00000002   0x.... 0x....      BL       aci_gatt_update_char_value
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD000             BEQ      ??Subroutine0_1
   \   0000000A   0x2047             MOVS     R0,#+71
   \                     ??Subroutine0_1: (+1)
   \   0000000C   0xB003             ADD      SP,SP,#+12
   \   0000000E   0xBD00             POP      {PC}             ;; return
    172          
    173          /*******************************************************************************
    174          * Function Name  : Acc_Update
    175          * Description    : Update acceleration characteristic value
    176          * Input          : AxesRaw_t structure containing acceleration value in mg.
    177          * Return         : Status.
    178          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    179          tBleStatus Acc_Update(AxesRaw_t *data)
    180          {
   \                     Acc_Update: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    181              uint8_t buff[6];
    182              tBleStatus ret;
    183          
    184              HOST_TO_LE_16(buff,-data->AXIS_Y);
   \   00000004   0xA901             ADD      R1,SP,#+4
   \   00000006   0x6842             LDR      R2,[R0, #+4]
   \   00000008   0x4253             RSBS     R3,R2,#+0
   \   0000000A   0x700B             STRB     R3,[R1, #+0]
   \   0000000C   0x6842             LDR      R2,[R0, #+4]
   \   0000000E   0x4253             RSBS     R3,R2,#+0
   \   00000010   0x121A             ASRS     R2,R3,#+8
   \   00000012   0x704A             STRB     R2,[R1, #+1]
    185              HOST_TO_LE_16(buff+2,data->AXIS_X);
   \   00000014   0x6802             LDR      R2,[R0, #+0]
   \   00000016   0x708A             STRB     R2,[R1, #+2]
   \   00000018   0x6802             LDR      R2,[R0, #+0]
   \   0000001A   0x1212             ASRS     R2,R2,#+8
   \   0000001C   0x70CA             STRB     R2,[R1, #+3]
    186              HOST_TO_LE_16(buff+4,-data->AXIS_Z);
   \   0000001E   0x6882             LDR      R2,[R0, #+8]
   \   00000020   0x4253             RSBS     R3,R2,#+0
   \   00000022   0x710B             STRB     R3,[R1, #+4]
   \   00000024   0x6880             LDR      R0,[R0, #+8]
   \   00000026   0x4242             RSBS     R2,R0,#+0
   \   00000028   0x1210             ASRS     R0,R2,#+8
   \   0000002A   0x7148             STRB     R0,[R1, #+5]
    187          
    188              ret = aci_gatt_update_char_value(accServHandle, accCharHandle, 0, 6, buff);
    189              if (ret != BLE_STATUS_SUCCESS){
   \   0000002C   0x....             LDR      R0,??DataTable2
   \   0000002E   0x9100             STR      R1,[SP, #+0]
   \   00000030   0x2306             MOVS     R3,#+6
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0x8881             LDRH     R1,[R0, #+4]
   \   00000036                      REQUIRE ?Subroutine0
   \   00000036                      ;; // Fall through to label ?Subroutine0
    190                  PRINTF("Error while updating Acceleration characteristic: 0x%02X\n",ret) ;
    191                  return BLE_STATUS_ERROR ;
    192              }
    193          
    194              return BLE_STATUS_SUCCESS;
    195          
    196          }
    197          
    198          /*******************************************************************************
    199          * Function Name  : Add_Environmental_Sensor_Service
    200          * Description    : Add the Environmental Sensor service.
    201          * Input          : None
    202          * Return         : Status.
    203          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    204          tBleStatus Add_Environmental_Sensor_Service(void)
    205          {
   \                     Add_Environmental_Sensor_Service: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB091             SUB      SP,SP,#+68
   \   00000004   0xAC0C             ADD      R4,SP,#+48
   \   00000006   0x201B             MOVS     R0,#+27
   \   00000008   0x7020             STRB     R0,[R4, #+0]
   \   0000000A   0x20C5             MOVS     R0,#+197
   \   0000000C   0x7060             STRB     R0,[R4, #+1]
   \   0000000E   0x20D5             MOVS     R0,#+213
   \   00000010   0x70A0             STRB     R0,[R4, #+2]
   \   00000012   0x20A5             MOVS     R0,#+165
   \   00000014   0x70E0             STRB     R0,[R4, #+3]
   \   00000016   0x2002             MOVS     R0,#+2
   \   00000018   0x7120             STRB     R0,[R4, #+4]
    206              tBleStatus ret;
    207              uint8_t uuid[16];
    208              uint16_t uuid16;
    209              charactFormat charFormat;
    210              uint16_t descHandle;
    211          
    212              COPY_ENV_SENS_SERVICE_UUID(uuid);
   \   0000001A   0x2700             MOVS     R7,#+0
   \   0000001C   0x7167             STRB     R7,[R4, #+5]
   \   0000001E   0x20D0             MOVS     R0,#+208
   \   00000020   0x71A0             STRB     R0,[R4, #+6]
   \   00000022   0x2082             MOVS     R0,#+130
   \   00000024   0x71E0             STRB     R0,[R4, #+7]
   \   00000026   0x21E2             MOVS     R1,#+226
   \   00000028   0x7221             STRB     R1,[R4, #+8]
   \   0000002A   0x2111             MOVS     R1,#+17
   \   0000002C   0x7261             STRB     R1,[R4, #+9]
   \   0000002E   0x2677             MOVS     R6,#+119
   \   00000030   0x72A6             STRB     R6,[R4, #+10]
   \   00000032   0x21E4             MOVS     R1,#+228
   \   00000034   0x72E1             STRB     R1,[R4, #+11]
   \   00000036   0x2140             MOVS     R1,#+64
   \   00000038   0x7321             STRB     R1,[R4, #+12]
   \   0000003A   0x211A             MOVS     R1,#+26
   \   0000003C   0x7361             STRB     R1,[R4, #+13]
   \   0000003E   0x73A0             STRB     R0,[R4, #+14]
   \   00000040   0x2042             MOVS     R0,#+66
   \   00000042   0x73E0             STRB     R0,[R4, #+15]
    213          
    214              Osal_MemCpy(&service_uuid.Service_UUID_128, uuid, 16);
   \   00000044   0x....             LDR      R5,??DataTable2
   \   00000046   0x2210             MOVS     R2,#+16
   \   00000048   0xA90C             ADD      R1,SP,#+48
   \   0000004A   0x0028             MOVS     R0,R5
   \   0000004C   0x300C             ADDS     R0,R0,#+12
   \   0000004E   0x.... 0x....      BL       Osal_MemCpy
    215              ret = aci_gatt_add_service(UUID_TYPE_128,  &service_uuid, PRIMARY_SERVICE, Services_Max_Attribute_Records[ENVIRONMENTAL_SERVICE_INDEX], &envSensServHandle);
    216              if (ret != BLE_STATUS_SUCCESS) goto fail;
   \   00000052   0x1DA8             ADDS     R0,R5,#+6
   \   00000054   0x9000             STR      R0,[SP, #+0]
   \   00000056   0x....             LDR      R0,??DataTable4
   \   00000058   0x7843             LDRB     R3,[R0, #+1]
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0x0029             MOVS     R1,R5
   \   0000005E   0x310C             ADDS     R1,R1,#+12
   \   00000060   0x2002             MOVS     R0,#+2
   \   00000062   0x.... 0x....      BL       aci_gatt_add_service
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD000             BEQ      .+4
   \   0000006A   0xE0C9             B        ??Add_Environmental_Sensor_Service_0
    217          
    218              /* Temperature Characteristic */
    219          
    220              COPY_TEMP_CHAR_UUID(uuid);
   \   0000006C   0x201B             MOVS     R0,#+27
   \   0000006E   0x7020             STRB     R0,[R4, #+0]
   \   00000070   0x20C5             MOVS     R0,#+197
   \   00000072   0x7060             STRB     R0,[R4, #+1]
   \   00000074   0x20D5             MOVS     R0,#+213
   \   00000076   0x70A0             STRB     R0,[R4, #+2]
   \   00000078   0x20A5             MOVS     R0,#+165
   \   0000007A   0x70E0             STRB     R0,[R4, #+3]
   \   0000007C   0x2002             MOVS     R0,#+2
   \   0000007E   0x7120             STRB     R0,[R4, #+4]
   \   00000080   0x7167             STRB     R7,[R4, #+5]
   \   00000082   0x20E3             MOVS     R0,#+227
   \   00000084   0x71A0             STRB     R0,[R4, #+6]
   \   00000086   0x20A9             MOVS     R0,#+169
   \   00000088   0x71E0             STRB     R0,[R4, #+7]
   \   0000008A   0x20E2             MOVS     R0,#+226
   \   0000008C   0x7220             STRB     R0,[R4, #+8]
   \   0000008E   0x2011             MOVS     R0,#+17
   \   00000090   0x7260             STRB     R0,[R4, #+9]
   \   00000092   0x72A6             STRB     R6,[R4, #+10]
   \   00000094   0x20E4             MOVS     R0,#+228
   \   00000096   0x72E0             STRB     R0,[R4, #+11]
   \   00000098   0x2020             MOVS     R0,#+32
   \   0000009A   0x7320             STRB     R0,[R4, #+12]
   \   0000009C   0x2055             MOVS     R0,#+85
   \   0000009E   0x7360             STRB     R0,[R4, #+13]
   \   000000A0   0x202E             MOVS     R0,#+46
   \   000000A2   0x73A0             STRB     R0,[R4, #+14]
   \   000000A4   0x20A3             MOVS     R0,#+163
   \   000000A6   0x73E0             STRB     R0,[R4, #+15]
    221              Osal_MemCpy(&char_uuid.Char_UUID_128, uuid, 16);
   \   000000A8   0x2210             MOVS     R2,#+16
   \   000000AA   0xA90C             ADD      R1,SP,#+48
   \   000000AC   0x0028             MOVS     R0,R5
   \   000000AE   0x301C             ADDS     R0,R0,#+28
   \   000000B0   0x.... 0x....      BL       Osal_MemCpy
    222              ret =  aci_gatt_add_char(envSensServHandle, UUID_TYPE_128, &char_uuid, 2, CHAR_PROP_READ, ATTR_PERMISSION_NONE, GATT_NOTIFY_READ_REQ_AND_WAIT_FOR_APPL_RESP,
    223                                       16, 0, &tempCharHandle);
    224              if (ret != BLE_STATUS_SUCCESS) goto fail;
   \   000000B4   0x0028             MOVS     R0,R5
   \   000000B6   0x3008             ADDS     R0,R0,#+8
   \   000000B8   0x9005             STR      R0,[SP, #+20]
   \   000000BA   0x9704             STR      R7,[SP, #+16]
   \   000000BC   0x2010             MOVS     R0,#+16
   \   000000BE   0x9003             STR      R0,[SP, #+12]
   \   000000C0   0x2004             MOVS     R0,#+4
   \   000000C2   0x9002             STR      R0,[SP, #+8]
   \   000000C4   0x9701             STR      R7,[SP, #+4]
   \   000000C6   0x2002             MOVS     R0,#+2
   \   000000C8   0x9000             STR      R0,[SP, #+0]
   \   000000CA   0x2302             MOVS     R3,#+2
   \   000000CC   0x002A             MOVS     R2,R5
   \   000000CE   0x321C             ADDS     R2,R2,#+28
   \   000000D0   0x2102             MOVS     R1,#+2
   \   000000D2   0x88E8             LDRH     R0,[R5, #+6]
   \   000000D4   0x.... 0x....      BL       aci_gatt_add_char
   \   000000D8   0x2800             CMP      R0,#+0
   \   000000DA   0xD000             BEQ      .+4
   \   000000DC   0xE090             B        ??Add_Environmental_Sensor_Service_0
    225          
    226              charFormat.format = FORMAT_SINT16;
   \   000000DE   0xAE0A             ADD      R6,SP,#+40
   \   000000E0   0x200E             MOVS     R0,#+14
   \   000000E2   0x7030             STRB     R0,[R6, #+0]
    227              charFormat.exp = -1;
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x43C0             MVNS     R0,R0            ;; #-1
   \   000000E8   0x7070             STRB     R0,[R6, #+1]
    228              charFormat.unit = UNIT_TEMP_CELSIUS;
   \   000000EA   0x....             LDR      R0,??DataTable7_1  ;; 0x272f
   \   000000EC   0x8070             STRH     R0,[R6, #+2]
    229              charFormat.name_space = 0;
   \   000000EE   0x7137             STRB     R7,[R6, #+4]
    230              charFormat.desc = 0;
   \   000000F0   0x7177             STRB     R7,[R6, #+5]
   \   000000F2   0x71B7             STRB     R7,[R6, #+6]
   \   000000F4   0x....             LDR      R0,??DataTable7_2  ;; 0x2904
   \   000000F6   0x4669             MOV      R1,SP
   \   000000F8   0x8488             STRH     R0,[R1, #+36]
    231          
    232              uuid16 = CHAR_FORMAT_DESC_UUID;
    233          
    234              Osal_MemCpy(&char_desc_uuid.Char_UUID_16, &uuid16, 2);
   \   000000FA   0x2202             MOVS     R2,#+2
   \   000000FC   0xA909             ADD      R1,SP,#+36
   \   000000FE   0x0028             MOVS     R0,R5
   \   00000100   0x302C             ADDS     R0,R0,#+44
   \   00000102   0x.... 0x....      BL       Osal_MemCpy
    235          
    236              ret = aci_gatt_add_char_desc(envSensServHandle,
    237                                           tempCharHandle,
    238                                           UUID_TYPE_16,
    239                                           &char_desc_uuid,
    240                                           7,
    241                                           7,
    242                                           (void *)&charFormat,
    243                                           ATTR_PERMISSION_NONE,
    244                                           ATTR_ACCESS_READ_ONLY,
    245                                           0,
    246                                           16,
    247                                           FALSE,
    248                                           &descHandle);
    249              if (ret != BLE_STATUS_SUCCESS) goto fail;
   \   00000106   0xA809             ADD      R0,SP,#+36
   \   00000108   0x1C80             ADDS     R0,R0,#+2
   \   0000010A   0x9008             STR      R0,[SP, #+32]
   \   0000010C   0x9707             STR      R7,[SP, #+28]
   \   0000010E   0x2010             MOVS     R0,#+16
   \   00000110   0x9006             STR      R0,[SP, #+24]
   \   00000112   0x9705             STR      R7,[SP, #+20]
   \   00000114   0x2001             MOVS     R0,#+1
   \   00000116   0x9004             STR      R0,[SP, #+16]
   \   00000118   0x9703             STR      R7,[SP, #+12]
   \   0000011A   0xA80A             ADD      R0,SP,#+40
   \   0000011C   0x9002             STR      R0,[SP, #+8]
   \   0000011E   0x2007             MOVS     R0,#+7
   \   00000120   0x9001             STR      R0,[SP, #+4]
   \   00000122   0x9000             STR      R0,[SP, #+0]
   \   00000124   0x002B             MOVS     R3,R5
   \   00000126   0x332C             ADDS     R3,R3,#+44
   \   00000128   0x2201             MOVS     R2,#+1
   \   0000012A   0x8929             LDRH     R1,[R5, #+8]
   \   0000012C   0x88E8             LDRH     R0,[R5, #+6]
   \   0000012E   0x.... 0x....      BL       aci_gatt_add_char_desc
   \   00000132   0x2800             CMP      R0,#+0
   \   00000134   0xD164             BNE      ??Add_Environmental_Sensor_Service_0
    250          
    251              /* Pressure Characteristic */
    252              COPY_PRESS_CHAR_UUID(uuid);
   \   00000136   0x201B             MOVS     R0,#+27
   \   00000138   0x7020             STRB     R0,[R4, #+0]
   \   0000013A   0x20C5             MOVS     R0,#+197
   \   0000013C   0x7060             STRB     R0,[R4, #+1]
   \   0000013E   0x20D5             MOVS     R0,#+213
   \   00000140   0x70A0             STRB     R0,[R4, #+2]
   \   00000142   0x20A5             MOVS     R0,#+165
   \   00000144   0x70E0             STRB     R0,[R4, #+3]
   \   00000146   0x2002             MOVS     R0,#+2
   \   00000148   0x7120             STRB     R0,[R4, #+4]
   \   0000014A   0x7167             STRB     R7,[R4, #+5]
   \   0000014C   0x200B             MOVS     R0,#+11
   \   0000014E   0x71A0             STRB     R0,[R4, #+6]
   \   00000150   0x2084             MOVS     R0,#+132
   \   00000152   0x71E0             STRB     R0,[R4, #+7]
   \   00000154   0x20E2             MOVS     R0,#+226
   \   00000156   0x7220             STRB     R0,[R4, #+8]
   \   00000158   0x2011             MOVS     R0,#+17
   \   0000015A   0x7260             STRB     R0,[R4, #+9]
   \   0000015C   0x208B             MOVS     R0,#+139
   \   0000015E   0x72A0             STRB     R0,[R4, #+10]
   \   00000160   0x20E4             MOVS     R0,#+228
   \   00000162   0x72E0             STRB     R0,[R4, #+11]
   \   00000164   0x2080             MOVS     R0,#+128
   \   00000166   0x7320             STRB     R0,[R4, #+12]
   \   00000168   0x20C4             MOVS     R0,#+196
   \   0000016A   0x7360             STRB     R0,[R4, #+13]
   \   0000016C   0x2020             MOVS     R0,#+32
   \   0000016E   0x73A0             STRB     R0,[R4, #+14]
   \   00000170   0x20CD             MOVS     R0,#+205
   \   00000172   0x73E0             STRB     R0,[R4, #+15]
    253              Osal_MemCpy(&char_uuid.Char_UUID_128, uuid, 16);
   \   00000174   0x2210             MOVS     R2,#+16
   \   00000176   0xA90C             ADD      R1,SP,#+48
   \   00000178   0x0028             MOVS     R0,R5
   \   0000017A   0x301C             ADDS     R0,R0,#+28
   \   0000017C   0x.... 0x....      BL       Osal_MemCpy
    254              ret =  aci_gatt_add_char(envSensServHandle, UUID_TYPE_128, &char_uuid, 3, CHAR_PROP_READ, ATTR_PERMISSION_NONE, GATT_NOTIFY_READ_REQ_AND_WAIT_FOR_APPL_RESP,
    255                                       16, 0, &pressCharHandle);
    256              if (ret != BLE_STATUS_SUCCESS) goto fail;
   \   00000180   0x0028             MOVS     R0,R5
   \   00000182   0x300A             ADDS     R0,R0,#+10
   \   00000184   0x9005             STR      R0,[SP, #+20]
   \   00000186   0x9704             STR      R7,[SP, #+16]
   \   00000188   0x2010             MOVS     R0,#+16
   \   0000018A   0x9003             STR      R0,[SP, #+12]
   \   0000018C   0x2004             MOVS     R0,#+4
   \   0000018E   0x9002             STR      R0,[SP, #+8]
   \   00000190   0x9701             STR      R7,[SP, #+4]
   \   00000192   0x2002             MOVS     R0,#+2
   \   00000194   0x9000             STR      R0,[SP, #+0]
   \   00000196   0x2303             MOVS     R3,#+3
   \   00000198   0x002A             MOVS     R2,R5
   \   0000019A   0x321C             ADDS     R2,R2,#+28
   \   0000019C   0x2102             MOVS     R1,#+2
   \   0000019E   0x88E8             LDRH     R0,[R5, #+6]
   \   000001A0   0x.... 0x....      BL       aci_gatt_add_char
   \   000001A4   0x2800             CMP      R0,#+0
   \   000001A6   0xD12B             BNE      ??Add_Environmental_Sensor_Service_0
    257          
    258              charFormat.format = FORMAT_SINT24;
   \   000001A8   0x200F             MOVS     R0,#+15
   \   000001AA   0x7030             STRB     R0,[R6, #+0]
    259              charFormat.exp = -5;
   \   000001AC   0x2004             MOVS     R0,#+4
   \   000001AE   0x43C0             MVNS     R0,R0            ;; #-5
   \   000001B0   0x7070             STRB     R0,[R6, #+1]
    260              charFormat.unit = UNIT_PRESSURE_BAR;
   \   000001B2   0x209E             MOVS     R0,#+158
   \   000001B4   0x0180             LSLS     R0,R0,#+6        ;; #+10112
   \   000001B6   0x8070             STRH     R0,[R6, #+2]
    261              charFormat.name_space = 0;
   \   000001B8   0x7137             STRB     R7,[R6, #+4]
    262              charFormat.desc = 0;
   \   000001BA   0x7177             STRB     R7,[R6, #+5]
   \   000001BC   0x71B7             STRB     R7,[R6, #+6]
    263          
    264              uuid16 = CHAR_FORMAT_DESC_UUID;
   \   000001BE   0x....             LDR      R0,??DataTable7_2  ;; 0x2904
   \   000001C0   0x4669             MOV      R1,SP
   \   000001C2   0x8488             STRH     R0,[R1, #+36]
    265          
    266              Osal_MemCpy(&char_desc_uuid.Char_UUID_16, &uuid16, 2);
   \   000001C4   0x2202             MOVS     R2,#+2
   \   000001C6   0xA909             ADD      R1,SP,#+36
   \   000001C8   0x0028             MOVS     R0,R5
   \   000001CA   0x302C             ADDS     R0,R0,#+44
   \   000001CC   0x.... 0x....      BL       Osal_MemCpy
    267              ret = aci_gatt_add_char_desc(envSensServHandle,
    268                                           pressCharHandle,
    269                                           UUID_TYPE_16,
    270                                           &char_desc_uuid,
    271                                           7,
    272                                           7,
    273                                           (void *)&charFormat,
    274                                           ATTR_PERMISSION_NONE,
    275                                           ATTR_ACCESS_READ_ONLY,
    276                                           0,
    277                                           16,
    278                                           FALSE,
    279                                           &descHandle);
    280              if (ret != BLE_STATUS_SUCCESS) goto fail;
   \   000001D0   0xA809             ADD      R0,SP,#+36
   \   000001D2   0x1C80             ADDS     R0,R0,#+2
   \   000001D4   0x9008             STR      R0,[SP, #+32]
   \   000001D6   0x9707             STR      R7,[SP, #+28]
   \   000001D8   0x2010             MOVS     R0,#+16
   \   000001DA   0x9006             STR      R0,[SP, #+24]
   \   000001DC   0x9705             STR      R7,[SP, #+20]
   \   000001DE   0x2001             MOVS     R0,#+1
   \   000001E0   0x9004             STR      R0,[SP, #+16]
   \   000001E2   0x9703             STR      R7,[SP, #+12]
   \   000001E4   0xA80A             ADD      R0,SP,#+40
   \   000001E6   0x9002             STR      R0,[SP, #+8]
   \   000001E8   0x2007             MOVS     R0,#+7
   \   000001EA   0x9001             STR      R0,[SP, #+4]
   \   000001EC   0x9000             STR      R0,[SP, #+0]
   \   000001EE   0x002B             MOVS     R3,R5
   \   000001F0   0x332C             ADDS     R3,R3,#+44
   \   000001F2   0x2201             MOVS     R2,#+1
   \   000001F4   0x8969             LDRH     R1,[R5, #+10]
   \   000001F6   0x88E8             LDRH     R0,[R5, #+6]
   \   000001F8   0x.... 0x....      BL       aci_gatt_add_char_desc
   \   000001FC   0x2800             CMP      R0,#+0
   \   000001FE   0xD000             BEQ      ??Add_Environmental_Sensor_Service_1
    281          
    282          #ifndef SENSOR_EMULATION //Humidity sensor is not available on BlueNRG-1 Development board
    283              PRINTF("Service ENV_SENS added. Handle 0x%04X, TEMP Charac handle: 0x%04X, PRESS Charac handle: 0x%04X\n",envSensServHandle, tempCharHandle, pressCharHandle);
    284              return BLE_STATUS_SUCCESS;
    285          
    286          #else
    287              /* Humidity Characteristic */
    288              COPY_HUMIDITY_CHAR_UUID(uuid);
    289              Osal_MemCpy(&char_uuid.Char_UUID_128, uuid, 16);
    290              ret =  aci_gatt_add_char(envSensServHandle, UUID_TYPE_128, &char_uuid, 2, CHAR_PROP_READ, ATTR_PERMISSION_NONE, GATT_NOTIFY_READ_REQ_AND_WAIT_FOR_APPL_RESP,
    291                                       16, 0, &humidityCharHandle);
    292              if (ret != BLE_STATUS_SUCCESS) goto fail;
    293          
    294              charFormat.format = FORMAT_UINT16;
    295              charFormat.exp = -1;
    296              charFormat.unit = UNIT_UNITLESS;
    297              charFormat.name_space = 0;
    298              charFormat.desc = 0;
    299          
    300              uuid16 = CHAR_FORMAT_DESC_UUID;
    301          
    302              Osal_MemCpy(&char_desc_uuid.Char_UUID_16, &uuid16, 2);
    303              ret = aci_gatt_add_char_desc(envSensServHandle,
    304                                           humidityCharHandle,
    305                                           UUID_TYPE_16,
    306                                           &char_desc_uuid,
    307                                           7,
    308                                           7,
    309                                           (void *)&charFormat,
    310                                           ATTR_PERMISSION_NONE,
    311                                           ATTR_ACCESS_READ_ONLY,
    312                                           0,
    313                                           16,
    314                                           FALSE,
    315                                           &descHandle);
    316              if (ret != BLE_STATUS_SUCCESS) goto fail;
    317          
    318              PRINTF("Service ENV_SENS added. Handle 0x%04X, TEMP Charac handle: 0x%04X, PRESS Charac handle: 0x%04X, HUMID Charac handle: 0x%04X\n",envSensServHandle, tempCharHandle, pressCharHandle, humidityCharHandle);
    319              return BLE_STATUS_SUCCESS;
    320          #endif /* SENSOR_EMULATION */
    321          
    322          fail:
    323              PRINTF("Error while adding ENV_SENS service.\n");
    324              return BLE_STATUS_ERROR ;
   \                     ??Add_Environmental_Sensor_Service_0: (+1)
   \   00000200   0x2047             MOVS     R0,#+71
   \                     ??Add_Environmental_Sensor_Service_1: (+1)
   \   00000202   0xB011             ADD      SP,SP,#+68
   \   00000204   0xBDF0             POP      {R4-R7,PC}       ;; return
    325          
    326          }
    327          
    328          /*******************************************************************************
    329          * Function Name  : Temp_Update
    330          * Description    : Update temperature characteristic value
    331          * Input          : temperature in tenths of degree
    332          * Return         : Status.
    333          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    334          tBleStatus Temp_Update(int16_t temp)
    335          {
   \                     Temp_Update: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    336              tBleStatus ret;
    337          
    338              ret = aci_gatt_update_char_value(envSensServHandle, tempCharHandle, 0, 2, (uint8_t*)&temp);
    339          
    340              if (ret != BLE_STATUS_SUCCESS){
   \   00000004   0x....             LDR      R0,??DataTable7
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x9100             STR      R1,[SP, #+0]
   \   0000000A   0x2302             MOVS     R3,#+2
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x8901             LDRH     R1,[R0, #+8]
   \   00000010   0x88C0             LDRH     R0,[R0, #+6]
   \   00000012   0x....             B.N      ??Subroutine0_0
    341                  PRINTF("Error while updating TEMP characteristic: 0x%04X\n",ret) ;
    342                  return BLE_STATUS_ERROR ;
    343              }
    344          
    345              return BLE_STATUS_SUCCESS;
    346          
    347          }
    348          
    349          /*******************************************************************************
    350          * Function Name  : Press_Update
    351          * Description    : Update pressure characteristic value
    352          * Input          : Pressure in mbar
    353          * Return         : Status.
    354          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    355          tBleStatus Press_Update(int32_t press)
    356          {
   \                     Press_Update: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    357              tBleStatus ret;
    358          
    359              ret = aci_gatt_update_char_value(envSensServHandle, pressCharHandle, 0, 3, (uint8_t*)&press);
    360          
    361              if (ret != BLE_STATUS_SUCCESS){
   \   00000004   0x....             LDR      R0,??DataTable7
   \   00000006   0xA902             ADD      R1,SP,#+8
   \   00000008   0x9100             STR      R1,[SP, #+0]
   \   0000000A   0x2303             MOVS     R3,#+3
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x8941             LDRH     R1,[R0, #+10]
   \   00000010   0x88C0             LDRH     R0,[R0, #+6]
   \   00000012   0x....             B.N      ??Subroutine0_0
    362                  PRINTF("Error while updating Pressure characteristic: 0x%04X\n",ret) ;
    363                  return BLE_STATUS_ERROR ;
    364              }
    365          
    366              return BLE_STATUS_SUCCESS;
    367          
    368          }
    369          
    370          #ifdef SENSOR_EMULATION //Humidity sensor is not available on BlueNRG-1 Development board*/
    371          /*******************************************************************************
    372          * Function Name  : Humidity_Update
    373          * Description    : Update humidity characteristic value
    374          * Input          : RH (Relative Humidity) in thenths of %.
    375          * Return         : Status.
    376          *******************************************************************************/
    377          tBleStatus Humidity_Update(uint16_t humidity)
    378          {
    379              tBleStatus ret;
    380          
    381              ret = aci_gatt_update_char_value(envSensServHandle, humidityCharHandle, 0, 2, (uint8_t*)&humidity);
    382          
    383              if (ret != BLE_STATUS_SUCCESS){
    384                  PRINTF("Error while updating Humidity characteristic: 0x%04X\n",ret) ;
    385                  return BLE_STATUS_ERROR ;
    386              }
    387              return BLE_STATUS_SUCCESS;
    388          
    389          }
    390          #endif
    391          
    392          /*******************************************************************************
    393          * Function Name  : Read_Request_CB.
    394          * Description    : Update the sensor valuse.
    395          * Input          : Handle of the characteristic to update.
    396          * Return         : None.
    397          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    398          void Read_Request_CB(uint16_t handle, AxesRaw_t acc_data)
    399          {
   \                     Read_Request_CB: (+1)
   \   00000000   0xB51E             PUSH     {R1-R4,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
   \   00000004   0x0002             MOVS     R2,R0
    400              tBleStatus ret;
    401              //AxesRaw_t acc_data;
    402          
    403              if(handle == accCharHandle + 1)
   \   00000006   0x....             LDR      R4,??DataTable7
   \   00000008   0x88A1             LDRH     R1,[R4, #+4]
   \   0000000A   0x1C48             ADDS     R0,R1,#+1
   \   0000000C   0x4282             CMP      R2,R0
   \   0000000E   0xD115             BNE      ??Read_Request_CB_0
    404              {
    405                  if (GetAccAxesRaw(&acc_data) == IMU_6AXES_OK)
    406                  {
    407                      Acc_Update(&acc_data);
   \   00000010   0x9804             LDR      R0,[SP, #+16]
   \   00000012   0x4242             RSBS     R2,R0,#+0
   \   00000014   0xA801             ADD      R0,SP,#+4
   \   00000016   0x7002             STRB     R2,[R0, #+0]
   \   00000018   0x1212             ASRS     R2,R2,#+8
   \   0000001A   0x7042             STRB     R2,[R0, #+1]
   \   0000001C   0x9A03             LDR      R2,[SP, #+12]
   \   0000001E   0x7082             STRB     R2,[R0, #+2]
   \   00000020   0x9A03             LDR      R2,[SP, #+12]
   \   00000022   0x1212             ASRS     R2,R2,#+8
   \   00000024   0x70C2             STRB     R2,[R0, #+3]
   \   00000026   0x9B05             LDR      R3,[SP, #+20]
   \   00000028   0x425A             RSBS     R2,R3,#+0
   \   0000002A   0x7102             STRB     R2,[R0, #+4]
   \   0000002C   0x1212             ASRS     R2,R2,#+8
   \   0000002E   0x7142             STRB     R2,[R0, #+5]
   \   00000030   0x9000             STR      R0,[SP, #+0]
   \   00000032   0x2306             MOVS     R3,#+6
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x8820             LDRH     R0,[R4, #+0]
   \   00000038   0x.... 0x....      BL       aci_gatt_update_char_value
    408                  }
    409              }
    410              else if(handle == tempCharHandle + 1)
    411              {
    412                  float data;
                               ^
Warning[Pe177]: variable "data" was declared but never referenced
    413          #ifdef SENSOR_EMULATION
    414                  data = 27 + ((uint64_t)rand()*15)/RAND_MAX;
    415                  Temp_Update((int16_t)(data * 10));
    416          #else
    417                  /*if (xLPS25HBDrv->GetTemperature(&data) == 0)
    418                  {
    419                      Temp_Update((int16_t)(data * 10));
    420                  }*/
    421          #endif
    422              }
    423              else if(handle == pressCharHandle + 1)
    424              {
    425                  float data;
                               ^
Warning[Pe177]: variable "data" was declared but never referenced
    426          
    427          #ifdef SENSOR_EMULATION
    428                  data = 1000 + ((uint64_t)rand()*1000)/RAND_MAX;
    429                  Press_Update((int32_t)(data *100));
    430          #else
    431                  /*if (xLPS25HBDrv->GetPressure(&data) == 0)
    432                  {
    433                      Press_Update((int32_t)(data *100));
    434                  }*/
    435          #endif
    436              }
    437          #ifdef SENSOR_EMULATION
    438              else if(handle == humidityCharHandle + 1)
    439              {
    440                  uint16_t data;
    441                  data = 450 + ((uint64_t)rand()*100)/RAND_MAX;
    442                  Humidity_Update(data);
    443              }
    444          #endif
    445              if(connection_handle !=0)
   \                     ??Read_Request_CB_0: (+1)
   \   0000003C   0x....             LDR      R0,??DataTable7_3
   \   0000003E   0x8800             LDRH     R0,[R0, #+0]
   \   00000040   0x0001             MOVS     R1,R0
   \   00000042   0xD001             BEQ      ??Read_Request_CB_1
    446              {
    447                  ret = aci_gatt_allow_read(connection_handle);
   \   00000044   0x.... 0x....      BL       aci_gatt_allow_read
    448                  if (ret != BLE_STATUS_SUCCESS)
    449                  {
    450                      //SdkEvalLedOn(LED3);
    451                  }
    452              }
    453          }
   \                     ??Read_Request_CB_1: (+1)
   \   00000048   0xB006             ADD      SP,SP,#+24
   \   0000004A   0xBD10             POP      {R4,PC}          ;; return
    454          
    455          
    456          

   \                                 In section .text, align 2, keep-with-next
    457          uint16_t getTempCharHandle(void){
    458              return tempCharHandle;
   \                     getTempCharHandle: (+1)
   \   00000000   0x....             LDR      R0,??DataTable7
   \   00000002   0x8900             LDRH     R0,[R0, #+8]
   \   00000004   0x4770             BX       LR               ;; return
    459          }
    460          

   \                                 In section .text, align 2, keep-with-next
    461          uint16_t getAccCharHandle(void){
    462              return accCharHandle;
   \                     getAccCharHandle: (+1)
   \   00000000   0x....             LDR      R0,??DataTable7
   \   00000002   0x8880             LDRH     R0,[R0, #+4]
   \   00000004   0x4770             BX       LR               ;; return
    463          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     accServHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     Services_Max_Attribute_Records

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     accServHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x0000272F         DC32     0x272f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x00002904         DC32     0x2904

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     connection_handle
    464          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Acc_Update
        16   -> aci_gatt_update_char_value
      64   Add_Acc_Service
        64   -> Osal_MemCpy
        64   -> aci_gatt_add_char
        64   -> aci_gatt_add_service
      88   Add_Environmental_Sensor_Service
        88   -> Osal_MemCpy
        88   -> aci_gatt_add_char
        88   -> aci_gatt_add_char_desc
        88   -> aci_gatt_add_service
      16   Free_Fall_Notify
        16   -> aci_gatt_update_char_value
       0   GetAccAxesRaw
       0   GetFreeFallStatus
      16   Press_Update
        16   -> aci_gatt_update_char_value
      32   Read_Request_CB
        32   -> aci_gatt_allow_read
        32   -> aci_gatt_update_char_value
      16   Temp_Update
        16   -> aci_gatt_update_char_value
       0   getAccCharHandle
       0   getTempCharHandle


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable4
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
      16  ?Subroutine0
      54  Acc_Update
     334  Add_Acc_Service
     518  Add_Environmental_Sensor_Service
      24  Free_Fall_Notify
       4  GetAccAxesRaw
       2  GetFreeFallStatus
      20  Press_Update
      76  Read_Request_CB
      20  Temp_Update
      60  accServHandle
          freeFallCharHandle
          accCharHandle
          envSensServHandle
          tempCharHandle
          pressCharHandle
          service_uuid
          char_uuid
          char_desc_uuid
       6  getAccCharHandle
       6  getTempCharHandle
       2  humidityCharHandle

 
    62 bytes in section .bss
 1 104 bytes in section .text
 
 1 104 bytes of CODE memory
    62 bytes of DATA memory

Errors: none
Warnings: 3
