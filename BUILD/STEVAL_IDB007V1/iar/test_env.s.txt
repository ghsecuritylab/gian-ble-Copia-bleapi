###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       19/Mar/2018  13:34:02
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\features/unsupported\tests\mbed\env\test_env.cpp
#    Command line =  
#        --no_wrap_diagnostics -e --diag_suppress=Pa050,Pa084,Pa093,Pa082 -Oh
#        --enable_restrict --cpu Cortex-M0 --thumb --dlib_config
#        DLib_Config_Full.h --c++ --no_rtti --no_exceptions --guard_calls
#        --no_static_destruction -DTARGET_CORTEX -DTARGET_UVISOR_UNSUPPORTED
#        -DTARGET_STMBLUE -D__MBED_CMSIS_RTOS_CM -DTARGET_STEVAL_IDB007V1
#        -DMBED_BUILD_TIMESTAMP=1521462769.94 -DTARGET_CORTEX_M -DDEVICE_SPI=1
#        -DTARGET_LIKE_MBED -DARM_MATH_CM0 -DTARGET_RELEASE -D__CORTEX_M0
#        -DTARGET_BLUENRG1 -D__MBED__=1 -DTARGET_M0 -DTOOLCHAIN_object
#        -DDEVICE_SERIAL=1 -D__CMSIS_RTOS -DTOOLCHAIN_IAR
#        -DTARGET_LIKE_CORTEX_M0 -DFEATURE_BLE=1 -f
#        .\BUILD\STEVAL_IDB007V1\IAR\.includes_dcedd7aa577106f9c79229685e6ddb41.txt
#        (-I. -I./BLUE1 -I./BLUE1/Bluetooth_LE -I./BLUE1/Bluetooth_LE/inc
#        -I./BLUE1/Bluetooth_LE/library -I./BLUE1/LSM6DS3 -I./BLUE1/SensorDemo
#        -I./BLUE1/sdk_hal -I./BLUE1/sdk_hal/inc -I./BLUE1/sdk_hal/src
#        -I./Beacon_inc -I./mbed-os -I./mbed-os/cmsis
#        -I./mbed-os/cmsis/TARGET_CORTEX_M
#        -I./mbed-os/cmsis/TARGET_CORTEX_M/TOOLCHAIN_IAR -I./mbed-os/drivers
#        -I./mbed-os/events -I./mbed-os/events/equeue -I./mbed-os/features
#        -I./mbed-os/features/FEATURE_BLE -I./mbed-os/features/FEATURE_BLE/ble
#        -I./mbed-os/features/FEATURE_BLE/ble/generic
#        -I./mbed-os/features/FEATURE_BLE/ble/pal
#        -I./mbed-os/features/FEATURE_BLE/ble/services
#        -I./mbed-os/features/FEATURE_BLE/source
#        -I./mbed-os/features/FEATURE_BLE/source/generic
#        -I./mbed-os/features/FEATURE_BLE/source/services
#        -I./mbed-os/features/FEATURE_BLE/targets
#        -I./mbed-os/features/filesystem -I./mbed-os/features/filesystem/bd
#        -I./mbed-os/features/filesystem/fat
#        -I./mbed-os/features/filesystem/fat/ChaN -I./mbed-os/features/mbedtls
#        -I./mbed-os/features/mbedtls/importer -I./mbed-os/features/mbedtls/inc
#        -I./mbed-os/features/mbedtls/inc/mbedtls
#        -I./mbed-os/features/mbedtls/platform
#        -I./mbed-os/features/mbedtls/platform/inc
#        -I./mbed-os/features/mbedtls/platform/src
#        -I./mbed-os/features/mbedtls/src -I./mbed-os/features/mbedtls/targets
#        -I./mbed-os/features/nanostack -I./mbed-os/hal
#        -I./mbed-os/hal/storage_abstraction -I./mbed-os/platform
#        -I./mbed-os/rtos -I./mbed-os/rtos/TARGET_CORTEX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx4
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Config
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Include
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/RTX/Source/TOOLCHAIN_IAR/TARGET_M0
#        -I./mbed-os/rtos/TARGET_CORTEX/rtx5/Source -I./mbed-os/targets
#        -I./mbed-os/targets/TARGET_STMBLUE
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/TARGET_STEVAL_IDB007V1/device/TOOLCHAIN_IAR
#        -I./mbed-os/targets/TARGET_STMBLUE/TARGET_BLUENRG1/device -I./settings
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/BUILD
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed
#        -IC:/Users/Gianluca/mbedCLIdev/gian-ble-Copia-bleapi/mbed-os/features/unsupported/tests/mbed/env)
#        --preinclude=.\BUILD\STEVAL_IDB007V1\IAR\mbed_config.h --dependencies
#        .\BUILD\STEVAL_IDB007V1\IAR\.\test_env.d -l
#        .\BUILD\STEVAL_IDB007V1\IAR\.\test_env.s.txt -o
#        .\BUILD\STEVAL_IDB007V1\IAR\.\test_env.o
#        C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\features/unsupported\tests\mbed\env\test_env.cpp
#    Locale       =  Italian_Italy.1252
#    List file    =  .\BUILD\STEVAL_IDB007V1\IAR\.\test_env.s.txt
#    Object file  =  .\BUILD\STEVAL_IDB007V1\IAR\.\test_env.o
#
###############################################################################

C:\Users\Gianluca\mbedCLIdev\gian-ble-Copia-bleapi\mbed-os\features\unsupported\tests\mbed\env\test_env.cpp
      1          #include "test_env.h"

   \                                 In section .rodata, align 4
   \   __absolute mbed::Callback<void ()>::ops const mbed::Callback<void ()>::generate<>(mbed::Callback<void ()>::function_context<void (*)(void *), void> const &)::ops
   \                     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops:
   \   00000000   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv
   \   00000004   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv
   \   00000008   0x........         DC32 _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_callINS2_16function_contextIPFvPvEvEEEEvPKv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x6848             LDR      R0,[R1, #+4]
   \   00000006   0x6809             LDR      R1,[R1, #+0]
   \   00000008   0x4788             BLX      R1
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
   \                     _ZN4mbed8CallbackIFvvEE13function_moveINS2_16function_contextIPFvPvEvEEEEvS5_PKv: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD001             BEQ      ??function_move_0
   \   00000004   0xC90C             LDM      R1!,{R2,R3}
   \   00000006   0xC00C             STM      R0!,{R2,R3}
   \                     ??function_move_0: (+1)
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
   \                     _ZN4mbed8CallbackIFvvEE13function_dtorINS2_16function_contextIPFvPvEvEEEEvS5_: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4
   \   __interwork __softfp void mbed::callback<>(void (*)(void *), void *)
   \                     _ZN4mbed8callbackIvvvEENS_8CallbackIFT1_vEEEPFS2_PT_EPT0_: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xC078             STM      R0!,{R3-R6}
   \   0000000C   0x3810             SUBS     R0,R0,#+16
   \   0000000E   0xD001             BEQ      ??callback_0
   \   00000010   0x6001             STR      R1,[R0, #+0]
   \   00000012   0x6042             STR      R2,[R0, #+4]
   \                     ??callback_0: (+1)
   \   00000014   0x4901             LDR      R1,??callback_1
   \   00000016   0x60C1             STR      R1,[R0, #+12]
   \   00000018   0xBC70             POP      {R4-R6}
   \   0000001A   0x4770             BX       LR               ;; return
   \                     ??callback_1:
   \   0000001C   0x........         DC32     _ZZN4mbed8CallbackIFvvEE8generateINS2_16function_contextIPFvPvEvEEEEvRKT_E3ops
      2          
      3          // Const strings used in test_end

   \                                 In section .data, align 4
      4          const char* TEST_ENV_START = "start";
   \                     TEST_ENV_START:
   \   00000000   0x........         DC32 ?_0

   \                                 In section .data, align 4
      5          const char* TEST_ENV_SUCCESS = "success";
   \                     TEST_ENV_SUCCESS:
   \   00000000   0x........         DC32 ?_1
      6          const char* TEST_ENV_FAILURE = "failure";
   \                     TEST_ENV_FAILURE:
   \   00000004   0x........         DC32 ?_2
      7          const char* TEST_ENV_MEASURE = "measure";
      8          const char* TEST_ENV_END = "end";
   \                     TEST_ENV_END:
   \   00000008   0x........         DC32 ?_3

   \                                 In section .data, align 4
   \                     TEST_ENV_MEASURE:
   \   00000000   0x........         DC32 ?_4
      9          
     10          
     11          static void led_blink(PinName led, float delay)
     12          {
     13              if (led != NC) {
     14                  DigitalOut myled(led);
     15                  while (1) {
     16                      myled = !myled;
     17                      wait(delay);
     18                  }
     19              }
     20              while(1);
     21          }
     22          

   \                                 In section .text, align 4, keep-with-next
     23          void notify_start()
     24          {
   \                     _Z12notify_startv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     25              printf("{{%s}}" NL, TEST_ENV_START);
   \   00000002   0x....             LDR      R0,??DataTable20
   \   00000004   0x6801             LDR      R1,[R0, #+0]
   \   00000006   0xBF00             Nop      
   \   00000008   0x....             ADR.N    R0,?_5
   \   0000000A   0x.... 0x....      BL       printf
     26          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return
     27          

   \                                 In section .text, align 4, keep-with-next
     28          void notify_performance_coefficient(const char* measurement_name, const int value)
     29          {
   \                     _Z30notify_performance_coefficientPKci: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     30              printf("{{%s;%s;%d}}" RCNL, TEST_ENV_MEASURE, measurement_name, value);
   \   00000002   0x000B             MOVS     R3,R1
   \   00000004   0x0002             MOVS     R2,R0
   \   00000006   0x....             LDR      R0,??DataTable20_1
   \   00000008   0x6801             LDR      R1,[R0, #+0]
   \   0000000A   0xBF00             Nop      
   \   0000000C   0x....             ADR.N    R0,?_6
   \   0000000E   0x.... 0x....      BL       printf
     31          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
     32          

   \                                 In section .text, align 4, keep-with-next
     33          void notify_performance_coefficient(const char* measurement_name, const unsigned int value)
     34          {
   \                     _Z30notify_performance_coefficientPKcj: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     35              printf("{{%s;%s;%u}}" RCNL, TEST_ENV_MEASURE, measurement_name, value);
   \   00000002   0x000B             MOVS     R3,R1
   \   00000004   0x0002             MOVS     R2,R0
   \   00000006   0x....             LDR      R0,??DataTable20_1
   \   00000008   0x6801             LDR      R1,[R0, #+0]
   \   0000000A   0xBF00             Nop      
   \   0000000C   0x....             ADR.N    R0,?_7
   \   0000000E   0x.... 0x....      BL       printf
     36          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
     37          

   \                                 In section .text, align 4, keep-with-next
     38          void notify_performance_coefficient(const char* measurement_name, const double value)
     39          {
   \                     _Z30notify_performance_coefficientPKcd: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     40              printf("{{%s;%s;%f}}" RCNL, TEST_ENV_MEASURE, measurement_name, value);
   \   00000004   0x9200             STR      R2,[SP, #+0]
   \   00000006   0x9301             STR      R3,[SP, #+4]
   \   00000008   0x0002             MOVS     R2,R0
   \   0000000A   0x....             LDR      R0,??DataTable20_1
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0xBF00             Nop      
   \   00000010   0x....             ADR.N    R0,?_8
   \   00000012   0x.... 0x....      BL       printf
     41          }
   \   00000016   0xB003             ADD      SP,SP,#+12
   \   00000018   0xBD00             POP      {PC}             ;; return
     42          

   \                                 In section .text, align 4, keep-with-next
     43          void notify_completion(bool success)
     44          {
   \                     _Z17notify_completionb: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     45              printf("{{%s}}" NL "{{%s}}" NL, success ? TEST_ENV_SUCCESS : TEST_ENV_FAILURE, TEST_ENV_END);
   \   00000004   0x....             LDR      R0,??DataTable20_2
   \   00000006   0xD001             BEQ      ??notify_completion_0
   \   00000008   0x6801             LDR      R1,[R0, #+0]
   \   0000000A   0xE000             B        ??notify_completion_1
   \                     ??notify_completion_0: (+1)
   \   0000000C   0x6841             LDR      R1,[R0, #+4]
   \                     ??notify_completion_1: (+1)
   \   0000000E   0x6882             LDR      R2,[R0, #+8]
   \   00000010   0x....             ADR.N    R0,?_9
   \   00000012   0x.... 0x....      BL       printf
     46              led_blink(LED1, success ? 1.0 : 0.1);
   \   00000016   0x2C00             CMP      R4,#+0
   \   00000018   0xD002             BEQ      ??notify_completion_2
   \   0000001A   0x24FE             MOVS     R4,#+254
   \   0000001C   0x05A4             LSLS     R4,R4,#+22       ;; #+1065353216
   \   0000001E   0xE000             B        ??notify_completion_3
   \                     ??notify_completion_2: (+1)
   \   00000020   0x....             LDR      R4,??DataTable20_3  ;; 0x3dcccccd
   \                     ??notify_completion_3: (+1)
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x2200             MOVS     R2,#+0
   \   00000028   0xC006             STM      R0!,{R1,R2}
   \   0000002A   0x2106             MOVS     R1,#+6
   \   0000002C   0x4668             MOV      R0,SP
   \   0000002E   0x.... 0x....      BL       gpio_init_out
   \                     ??notify_completion_4: (+1)
   \   00000032   0x4668             MOV      R0,SP
   \   00000034   0x.... 0x....      BL       gpio_read
   \   00000038   0x1E41             SUBS     R1,R0,#+1
   \   0000003A   0x4189             SBCS     R1,R1,R1
   \   0000003C   0x0FC9             LSRS     R1,R1,#+31
   \   0000003E   0x4668             MOV      R0,SP
   \   00000040   0x.... 0x....      BL       gpio_write
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x.... 0x....      BL       wait
   \   0000004A   0xE7F2             B        ??notify_completion_4
     47          }
     48          

   \                                 In section .text, align 4, keep-with-next
     49          bool notify_completion_str(bool success, char* buffer)
     50          {
   \                     _Z21notify_completion_strbPc: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x0002             MOVS     R2,R0
   \   00000004   0x0008             MOVS     R0,R1
     51              bool result = false;
   \   00000006   0x2100             MOVS     R1,#+0
     52              if (buffer) {
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD00B             BEQ      ??notify_completion_str_0
     53                  sprintf(buffer, "{{%s}}" NL "{{%s}}" NL, success ? TEST_ENV_SUCCESS : TEST_ENV_FAILURE, TEST_ENV_END);
   \   0000000C   0x....             LDR      R1,??DataTable20_2
   \   0000000E   0x2A00             CMP      R2,#+0
   \   00000010   0xD001             BEQ      ??notify_completion_str_1
   \   00000012   0x680A             LDR      R2,[R1, #+0]
   \   00000014   0xE000             B        ??notify_completion_str_2
   \                     ??notify_completion_str_1: (+1)
   \   00000016   0x684A             LDR      R2,[R1, #+4]
   \                     ??notify_completion_str_2: (+1)
   \   00000018   0x688B             LDR      R3,[R1, #+8]
   \   0000001A   0xBF00             Nop      
   \   0000001C   0x....             ADR.N    R1,?_9
   \   0000001E   0x.... 0x....      BL       sprintf
     54                  result = true;
   \   00000022   0x2101             MOVS     R1,#+1
     55              }
     56              return result;
   \                     ??notify_completion_str_0: (+1)
   \   00000024   0x0008             MOVS     R0,R1
   \   00000026   0xBD02             POP      {R1,PC}          ;; return
     57          }
     58          
     59          // Host test auto-detection API

   \                                 In section .text, align 4, keep-with-next
     60          void notify_host_test_name(const char *host_test) {
     61              if (host_test) {
   \                     _Z21notify_host_test_namePKc: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD100             BNE      ??notify_host_test_name_0
   \   00000004   0x4770             BX       LR
     62                  printf("{{host_test_name;%s}}" NL, host_test);
   \                     ??notify_host_test_name_0: (+1)
   \   00000006   0xB580             PUSH     {R7,LR}
   \   00000008   0x0001             MOVS     R1,R0
   \   0000000A   0xBF00             Nop      
   \   0000000C   0x....             ADR.N    R0,?_10
   \   0000000E   0x.... 0x....      BL       printf
     63              }
     64          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
     65          

   \                                 In section .text, align 4, keep-with-next
     66          void notify_timeout(int timeout) {
   \                     _Z14notify_timeouti: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     67              printf("{{timeout;%d}}" NL, timeout);
   \   00000002   0x0001             MOVS     R1,R0
   \   00000004   0x....             ADR.N    R0,?_11
   \   00000006   0x.... 0x....      BL       printf
     68          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
     69          

   \                                 In section .text, align 4, keep-with-next
     70          void notify_test_id(const char *test_id) {
     71              if (test_id) {
   \                     _Z14notify_test_idPKc: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD100             BNE      ??notify_test_id_0
   \   00000004   0x4770             BX       LR
     72                  printf("{{test_id;%s}}" NL, test_id);
   \                     ??notify_test_id_0: (+1)
   \   00000006   0xB580             PUSH     {R7,LR}
   \   00000008   0x0001             MOVS     R1,R0
   \   0000000A   0xBF00             Nop      
   \   0000000C   0x....             ADR.N    R0,?_12
   \   0000000E   0x.... 0x....      BL       printf
     73              }
     74          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
     75          

   \                                 In section .text, align 4, keep-with-next
     76          void notify_test_description(const char *description) {
     77              if (description) {
   \                     _Z23notify_test_descriptionPKc: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD100             BNE      ??notify_test_description_0
   \   00000004   0x4770             BX       LR
     78                  printf("{{description;%s}}" NL, description);
   \                     ??notify_test_description_0: (+1)
   \   00000006   0xB580             PUSH     {R7,LR}
   \   00000008   0x0001             MOVS     R1,R0
   \   0000000A   0xBF00             Nop      
   \   0000000C   0x....             ADR.N    R0,?_13
   \   0000000E   0x.... 0x....      BL       printf
     79              }
     80          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
     81          
     82          
     83          // -DMBED_BUILD_TIMESTAMP=1406208182.13

   \                                 In section .text, align 2, keep-with-next
     84          unsigned int testenv_randseed()
     85          {
     86              unsigned int seed = 0;
     87          #ifdef MBED_BUILD_TIMESTAMP
     88              long long_seed = static_cast<long>(MBED_BUILD_TIMESTAMP);
     89              seed = long_seed & 0xFFFFFFFF;
     90          #endif /* MBED_BUILD_TIMESTAMP */
     91              return seed;
   \                     _Z16testenv_randseedv: (+1)
   \   00000000   0x....             LDR      R0,??DataTable20_4  ;; 0x5aafadf1
   \   00000002   0x4770             BX       LR               ;; return
     92          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   0x........         DC32     TEST_ENV_START

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_1:
   \   00000000   0x........         DC32     TEST_ENV_MEASURE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_2:
   \   00000000   0x........         DC32     TEST_ENV_SUCCESS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_3:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_4:
   \   00000000   0x5AAFADF1         DC32     0x5aafadf1

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x7B 0x7B          DC8 "{{%s}}\012"
   \              0x25 0x73    
   \              0x7D 0x7D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x7B 0x7B          DC8 "{{%s;%s;%d}}\015\012"
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x73 0x3B    
   \              0x25 0x64    
   \              0x7D 0x7D    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x7B 0x7B          DC8 "{{%s;%s;%u}}\015\012"
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x73 0x3B    
   \              0x25 0x75    
   \              0x7D 0x7D    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x7B 0x7B          DC8 "{{%s;%s;%f}}\015\012"
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x73 0x3B    
   \              0x25 0x66    
   \              0x7D 0x7D    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x7B 0x7B          DC8 "{{%s}}\012{{%s}}\012"
   \              0x25 0x73    
   \              0x7D 0x7D    
   \              0x0A 0x7B    
   \              0x7B 0x25    
   \              0x73 0x7D    
   \              0x7D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x7B 0x7B          DC8 "{{host_test_name;%s}}\012"
   \              0x68 0x6F    
   \              0x73 0x74    
   \              0x5F 0x74    
   \              0x65 0x73    
   \              0x74 0x5F    
   \              0x6E 0x61    
   \              0x6D 0x65    
   \              0x3B 0x25    
   \              0x73 0x7D    
   \              0x7D 0x0A    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x7B 0x7B          DC8 "{{timeout;%d}}\012"
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x6F 0x75    
   \              0x74 0x3B    
   \              0x25 0x64    
   \              0x7D 0x7D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x7B 0x7B          DC8 "{{test_id;%s}}\012"
   \              0x74 0x65    
   \              0x73 0x74    
   \              0x5F 0x69    
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x7D 0x7D    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x7B 0x7B          DC8 "{{description;%s}}\012"
   \              0x64 0x65    
   \              0x73 0x63    
   \              0x72 0x69    
   \              0x70 0x74    
   \              0x69 0x6F    
   \              0x6E 0x3B    
   \              0x25 0x73    
   \              0x7D 0x7D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x73 0x74          DC8 "start"
   \              0x61 0x72    
   \              0x74 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x73 0x75          DC8 "success"
   \              0x63 0x63    
   \              0x65 0x73    
   \              0x73 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x66 0x61          DC8 "failure"
   \              0x69 0x6C    
   \              0x75 0x72    
   \              0x65 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x6D 0x65          DC8 "measure"
   \              0x61 0x73    
   \              0x75 0x72    
   \              0x65 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x65 0x6E          DC8 "end"
   \              0x64 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
         8   -- Indirect call
       0   mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
       0   mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      12   mbed::callback<>(void (*)(void *), void *)
      16   notify_completion(bool)
        16   -> gpio_init_out
        16   -> gpio_read
        16   -> gpio_write
        16   -> std::printf
        16   -> wait
       8   notify_completion_str(bool, char *)
         8   -> std::sprintf
       8   notify_host_test_name(char const *)
         8   -> std::printf
      16   notify_performance_coefficient(char const *, double)
        16   -> std::printf
       8   notify_performance_coefficient(char const *, int)
         8   -> std::printf
       8   notify_performance_coefficient(char const *, unsigned int)
         8   -> std::printf
       8   notify_start()
         8   -> std::printf
       8   notify_test_description(char const *)
         8   -> std::printf
       8   notify_test_id(char const *)
         8   -> std::printf
       8   notify_timeout(int)
         8   -> std::printf
       0   testenv_randseed()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable20
       4  ??DataTable20_1
       4  ??DataTable20_2
       4  ??DataTable20_3
       4  ??DataTable20_4
       8  ?_0
       8  ?_1
      24  ?_10
      16  ?_11
      16  ?_12
      20  ?_13
       8  ?_2
       4  ?_3
       8  ?_4
       8  ?_5
      16  ?_6
      16  ?_7
      16  ?_8
      16  ?_9
       4  TEST_ENV_MEASURE
       4  TEST_ENV_START
      12  TEST_ENV_SUCCESS
          TEST_ENV_FAILURE
          TEST_ENV_END
      12  mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void const *)
       2  mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *)
      10  mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::function_context<void (*)(void *), void>>(void *, void const *)
      32  mbed::callback<>(void (*)(void *), void *)
      76  notify_completion(bool)
      40  notify_completion_str(bool, char *)
      20  notify_host_test_name(char const *)
      26  notify_performance_coefficient(char const *, double)
      20  notify_performance_coefficient(char const *, int)
      20  notify_performance_coefficient(char const *, unsigned int)
      16  notify_start()
      20  notify_test_description(char const *)
      20  notify_test_id(char const *)
      12  notify_timeout(int)
      12  ops
       4  testenv_randseed()
     292  -- Other

 
  20 bytes in section .data
 340 bytes in section .rodata
 498 bytes in section .text
 
 442 bytes of CODE  memory (+  56 bytes shared)
  36 bytes of CONST memory (+ 304 bytes shared)
  20 bytes of DATA  memory

Errors: none
Warnings: none
